
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Disciplina
 * 
 */
export type Disciplina = $Result.DefaultSelection<Prisma.$DisciplinaPayload>
/**
 * Model Curso
 * 
 */
export type Curso = $Result.DefaultSelection<Prisma.$CursoPayload>
/**
 * Model Aluno
 * 
 */
export type Aluno = $Result.DefaultSelection<Prisma.$AlunoPayload>
/**
 * Model AlunoDisciplinaMatriculado
 * 
 */
export type AlunoDisciplinaMatriculado = $Result.DefaultSelection<Prisma.$AlunoDisciplinaMatriculadoPayload>
/**
 * Model AlunoDisciplinaTrancado
 * 
 */
export type AlunoDisciplinaTrancado = $Result.DefaultSelection<Prisma.$AlunoDisciplinaTrancadoPayload>
/**
 * Model AlunoDisciplinaCursado
 * 
 */
export type AlunoDisciplinaCursado = $Result.DefaultSelection<Prisma.$AlunoDisciplinaCursadoPayload>
/**
 * Model CursoDisciplina
 * 
 */
export type CursoDisciplina = $Result.DefaultSelection<Prisma.$CursoDisciplinaPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Disciplinas
 * const disciplinas = await prisma.disciplina.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Disciplinas
   * const disciplinas = await prisma.disciplina.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.disciplina`: Exposes CRUD operations for the **Disciplina** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Disciplinas
    * const disciplinas = await prisma.disciplina.findMany()
    * ```
    */
  get disciplina(): Prisma.DisciplinaDelegate<ExtArgs>;

  /**
   * `prisma.curso`: Exposes CRUD operations for the **Curso** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cursos
    * const cursos = await prisma.curso.findMany()
    * ```
    */
  get curso(): Prisma.CursoDelegate<ExtArgs>;

  /**
   * `prisma.aluno`: Exposes CRUD operations for the **Aluno** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Alunos
    * const alunos = await prisma.aluno.findMany()
    * ```
    */
  get aluno(): Prisma.AlunoDelegate<ExtArgs>;

  /**
   * `prisma.alunoDisciplinaMatriculado`: Exposes CRUD operations for the **AlunoDisciplinaMatriculado** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AlunoDisciplinaMatriculados
    * const alunoDisciplinaMatriculados = await prisma.alunoDisciplinaMatriculado.findMany()
    * ```
    */
  get alunoDisciplinaMatriculado(): Prisma.AlunoDisciplinaMatriculadoDelegate<ExtArgs>;

  /**
   * `prisma.alunoDisciplinaTrancado`: Exposes CRUD operations for the **AlunoDisciplinaTrancado** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AlunoDisciplinaTrancados
    * const alunoDisciplinaTrancados = await prisma.alunoDisciplinaTrancado.findMany()
    * ```
    */
  get alunoDisciplinaTrancado(): Prisma.AlunoDisciplinaTrancadoDelegate<ExtArgs>;

  /**
   * `prisma.alunoDisciplinaCursado`: Exposes CRUD operations for the **AlunoDisciplinaCursado** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AlunoDisciplinaCursados
    * const alunoDisciplinaCursados = await prisma.alunoDisciplinaCursado.findMany()
    * ```
    */
  get alunoDisciplinaCursado(): Prisma.AlunoDisciplinaCursadoDelegate<ExtArgs>;

  /**
   * `prisma.cursoDisciplina`: Exposes CRUD operations for the **CursoDisciplina** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CursoDisciplinas
    * const cursoDisciplinas = await prisma.cursoDisciplina.findMany()
    * ```
    */
  get cursoDisciplina(): Prisma.CursoDisciplinaDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.14.0
   * Query Engine version: e9771e62de70f79a5e1c604a2d7c8e2a0a874b48
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Disciplina: 'Disciplina',
    Curso: 'Curso',
    Aluno: 'Aluno',
    AlunoDisciplinaMatriculado: 'AlunoDisciplinaMatriculado',
    AlunoDisciplinaTrancado: 'AlunoDisciplinaTrancado',
    AlunoDisciplinaCursado: 'AlunoDisciplinaCursado',
    CursoDisciplina: 'CursoDisciplina'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'disciplina' | 'curso' | 'aluno' | 'alunoDisciplinaMatriculado' | 'alunoDisciplinaTrancado' | 'alunoDisciplinaCursado' | 'cursoDisciplina'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      Disciplina: {
        payload: Prisma.$DisciplinaPayload<ExtArgs>
        fields: Prisma.DisciplinaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DisciplinaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DisciplinaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DisciplinaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DisciplinaPayload>
          }
          findFirst: {
            args: Prisma.DisciplinaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DisciplinaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DisciplinaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DisciplinaPayload>
          }
          findMany: {
            args: Prisma.DisciplinaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DisciplinaPayload>[]
          }
          create: {
            args: Prisma.DisciplinaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DisciplinaPayload>
          }
          createMany: {
            args: Prisma.DisciplinaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.DisciplinaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DisciplinaPayload>
          }
          update: {
            args: Prisma.DisciplinaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DisciplinaPayload>
          }
          deleteMany: {
            args: Prisma.DisciplinaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.DisciplinaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.DisciplinaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DisciplinaPayload>
          }
          aggregate: {
            args: Prisma.DisciplinaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDisciplina>
          }
          groupBy: {
            args: Prisma.DisciplinaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<DisciplinaGroupByOutputType>[]
          }
          count: {
            args: Prisma.DisciplinaCountArgs<ExtArgs>,
            result: $Utils.Optional<DisciplinaCountAggregateOutputType> | number
          }
        }
      }
      Curso: {
        payload: Prisma.$CursoPayload<ExtArgs>
        fields: Prisma.CursoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CursoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CursoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CursoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          findFirst: {
            args: Prisma.CursoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CursoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CursoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          findMany: {
            args: Prisma.CursoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>[]
          }
          create: {
            args: Prisma.CursoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          createMany: {
            args: Prisma.CursoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.CursoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          update: {
            args: Prisma.CursoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          deleteMany: {
            args: Prisma.CursoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.CursoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.CursoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          aggregate: {
            args: Prisma.CursoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCurso>
          }
          groupBy: {
            args: Prisma.CursoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CursoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CursoCountArgs<ExtArgs>,
            result: $Utils.Optional<CursoCountAggregateOutputType> | number
          }
        }
      }
      Aluno: {
        payload: Prisma.$AlunoPayload<ExtArgs>
        fields: Prisma.AlunoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AlunoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AlunoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoPayload>
          }
          findFirst: {
            args: Prisma.AlunoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AlunoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoPayload>
          }
          findMany: {
            args: Prisma.AlunoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoPayload>[]
          }
          create: {
            args: Prisma.AlunoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoPayload>
          }
          createMany: {
            args: Prisma.AlunoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.AlunoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoPayload>
          }
          update: {
            args: Prisma.AlunoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoPayload>
          }
          deleteMany: {
            args: Prisma.AlunoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.AlunoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.AlunoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoPayload>
          }
          aggregate: {
            args: Prisma.AlunoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAluno>
          }
          groupBy: {
            args: Prisma.AlunoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<AlunoGroupByOutputType>[]
          }
          count: {
            args: Prisma.AlunoCountArgs<ExtArgs>,
            result: $Utils.Optional<AlunoCountAggregateOutputType> | number
          }
        }
      }
      AlunoDisciplinaMatriculado: {
        payload: Prisma.$AlunoDisciplinaMatriculadoPayload<ExtArgs>
        fields: Prisma.AlunoDisciplinaMatriculadoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AlunoDisciplinaMatriculadoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaMatriculadoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AlunoDisciplinaMatriculadoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaMatriculadoPayload>
          }
          findFirst: {
            args: Prisma.AlunoDisciplinaMatriculadoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaMatriculadoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AlunoDisciplinaMatriculadoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaMatriculadoPayload>
          }
          findMany: {
            args: Prisma.AlunoDisciplinaMatriculadoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaMatriculadoPayload>[]
          }
          create: {
            args: Prisma.AlunoDisciplinaMatriculadoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaMatriculadoPayload>
          }
          createMany: {
            args: Prisma.AlunoDisciplinaMatriculadoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.AlunoDisciplinaMatriculadoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaMatriculadoPayload>
          }
          update: {
            args: Prisma.AlunoDisciplinaMatriculadoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaMatriculadoPayload>
          }
          deleteMany: {
            args: Prisma.AlunoDisciplinaMatriculadoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.AlunoDisciplinaMatriculadoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.AlunoDisciplinaMatriculadoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaMatriculadoPayload>
          }
          aggregate: {
            args: Prisma.AlunoDisciplinaMatriculadoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAlunoDisciplinaMatriculado>
          }
          groupBy: {
            args: Prisma.AlunoDisciplinaMatriculadoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<AlunoDisciplinaMatriculadoGroupByOutputType>[]
          }
          count: {
            args: Prisma.AlunoDisciplinaMatriculadoCountArgs<ExtArgs>,
            result: $Utils.Optional<AlunoDisciplinaMatriculadoCountAggregateOutputType> | number
          }
        }
      }
      AlunoDisciplinaTrancado: {
        payload: Prisma.$AlunoDisciplinaTrancadoPayload<ExtArgs>
        fields: Prisma.AlunoDisciplinaTrancadoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AlunoDisciplinaTrancadoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaTrancadoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AlunoDisciplinaTrancadoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaTrancadoPayload>
          }
          findFirst: {
            args: Prisma.AlunoDisciplinaTrancadoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaTrancadoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AlunoDisciplinaTrancadoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaTrancadoPayload>
          }
          findMany: {
            args: Prisma.AlunoDisciplinaTrancadoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaTrancadoPayload>[]
          }
          create: {
            args: Prisma.AlunoDisciplinaTrancadoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaTrancadoPayload>
          }
          createMany: {
            args: Prisma.AlunoDisciplinaTrancadoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.AlunoDisciplinaTrancadoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaTrancadoPayload>
          }
          update: {
            args: Prisma.AlunoDisciplinaTrancadoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaTrancadoPayload>
          }
          deleteMany: {
            args: Prisma.AlunoDisciplinaTrancadoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.AlunoDisciplinaTrancadoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.AlunoDisciplinaTrancadoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaTrancadoPayload>
          }
          aggregate: {
            args: Prisma.AlunoDisciplinaTrancadoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAlunoDisciplinaTrancado>
          }
          groupBy: {
            args: Prisma.AlunoDisciplinaTrancadoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<AlunoDisciplinaTrancadoGroupByOutputType>[]
          }
          count: {
            args: Prisma.AlunoDisciplinaTrancadoCountArgs<ExtArgs>,
            result: $Utils.Optional<AlunoDisciplinaTrancadoCountAggregateOutputType> | number
          }
        }
      }
      AlunoDisciplinaCursado: {
        payload: Prisma.$AlunoDisciplinaCursadoPayload<ExtArgs>
        fields: Prisma.AlunoDisciplinaCursadoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AlunoDisciplinaCursadoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaCursadoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AlunoDisciplinaCursadoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaCursadoPayload>
          }
          findFirst: {
            args: Prisma.AlunoDisciplinaCursadoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaCursadoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AlunoDisciplinaCursadoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaCursadoPayload>
          }
          findMany: {
            args: Prisma.AlunoDisciplinaCursadoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaCursadoPayload>[]
          }
          create: {
            args: Prisma.AlunoDisciplinaCursadoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaCursadoPayload>
          }
          createMany: {
            args: Prisma.AlunoDisciplinaCursadoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.AlunoDisciplinaCursadoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaCursadoPayload>
          }
          update: {
            args: Prisma.AlunoDisciplinaCursadoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaCursadoPayload>
          }
          deleteMany: {
            args: Prisma.AlunoDisciplinaCursadoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.AlunoDisciplinaCursadoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.AlunoDisciplinaCursadoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlunoDisciplinaCursadoPayload>
          }
          aggregate: {
            args: Prisma.AlunoDisciplinaCursadoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAlunoDisciplinaCursado>
          }
          groupBy: {
            args: Prisma.AlunoDisciplinaCursadoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<AlunoDisciplinaCursadoGroupByOutputType>[]
          }
          count: {
            args: Prisma.AlunoDisciplinaCursadoCountArgs<ExtArgs>,
            result: $Utils.Optional<AlunoDisciplinaCursadoCountAggregateOutputType> | number
          }
        }
      }
      CursoDisciplina: {
        payload: Prisma.$CursoDisciplinaPayload<ExtArgs>
        fields: Prisma.CursoDisciplinaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CursoDisciplinaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CursoDisciplinaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CursoDisciplinaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CursoDisciplinaPayload>
          }
          findFirst: {
            args: Prisma.CursoDisciplinaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CursoDisciplinaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CursoDisciplinaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CursoDisciplinaPayload>
          }
          findMany: {
            args: Prisma.CursoDisciplinaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CursoDisciplinaPayload>[]
          }
          create: {
            args: Prisma.CursoDisciplinaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CursoDisciplinaPayload>
          }
          createMany: {
            args: Prisma.CursoDisciplinaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.CursoDisciplinaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CursoDisciplinaPayload>
          }
          update: {
            args: Prisma.CursoDisciplinaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CursoDisciplinaPayload>
          }
          deleteMany: {
            args: Prisma.CursoDisciplinaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.CursoDisciplinaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.CursoDisciplinaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CursoDisciplinaPayload>
          }
          aggregate: {
            args: Prisma.CursoDisciplinaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCursoDisciplina>
          }
          groupBy: {
            args: Prisma.CursoDisciplinaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CursoDisciplinaGroupByOutputType>[]
          }
          count: {
            args: Prisma.CursoDisciplinaCountArgs<ExtArgs>,
            result: $Utils.Optional<CursoDisciplinaCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type DisciplinaCountOutputType
   */

  export type DisciplinaCountOutputType = {
    alunosAtivos: number
    alunosTrancados: number
    alunosConcluidos: number
    cursos: number
  }

  export type DisciplinaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    alunosAtivos?: boolean | DisciplinaCountOutputTypeCountAlunosAtivosArgs
    alunosTrancados?: boolean | DisciplinaCountOutputTypeCountAlunosTrancadosArgs
    alunosConcluidos?: boolean | DisciplinaCountOutputTypeCountAlunosConcluidosArgs
    cursos?: boolean | DisciplinaCountOutputTypeCountCursosArgs
  }

  // Custom InputTypes
  /**
   * DisciplinaCountOutputType without action
   */
  export type DisciplinaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DisciplinaCountOutputType
     */
    select?: DisciplinaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DisciplinaCountOutputType without action
   */
  export type DisciplinaCountOutputTypeCountAlunosAtivosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlunoDisciplinaMatriculadoWhereInput
  }

  /**
   * DisciplinaCountOutputType without action
   */
  export type DisciplinaCountOutputTypeCountAlunosTrancadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlunoDisciplinaTrancadoWhereInput
  }

  /**
   * DisciplinaCountOutputType without action
   */
  export type DisciplinaCountOutputTypeCountAlunosConcluidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlunoDisciplinaCursadoWhereInput
  }

  /**
   * DisciplinaCountOutputType without action
   */
  export type DisciplinaCountOutputTypeCountCursosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CursoDisciplinaWhereInput
  }


  /**
   * Count Type CursoCountOutputType
   */

  export type CursoCountOutputType = {
    alunos: number
    disciplinas: number
  }

  export type CursoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    alunos?: boolean | CursoCountOutputTypeCountAlunosArgs
    disciplinas?: boolean | CursoCountOutputTypeCountDisciplinasArgs
  }

  // Custom InputTypes
  /**
   * CursoCountOutputType without action
   */
  export type CursoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoCountOutputType
     */
    select?: CursoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CursoCountOutputType without action
   */
  export type CursoCountOutputTypeCountAlunosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlunoWhereInput
  }

  /**
   * CursoCountOutputType without action
   */
  export type CursoCountOutputTypeCountDisciplinasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CursoDisciplinaWhereInput
  }


  /**
   * Count Type AlunoCountOutputType
   */

  export type AlunoCountOutputType = {
    disciplinasMatriculado: number
    disciplinasTrancado: number
    disciplinasCursado: number
  }

  export type AlunoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    disciplinasMatriculado?: boolean | AlunoCountOutputTypeCountDisciplinasMatriculadoArgs
    disciplinasTrancado?: boolean | AlunoCountOutputTypeCountDisciplinasTrancadoArgs
    disciplinasCursado?: boolean | AlunoCountOutputTypeCountDisciplinasCursadoArgs
  }

  // Custom InputTypes
  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoCountOutputType
     */
    select?: AlunoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountDisciplinasMatriculadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlunoDisciplinaMatriculadoWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountDisciplinasTrancadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlunoDisciplinaTrancadoWhereInput
  }

  /**
   * AlunoCountOutputType without action
   */
  export type AlunoCountOutputTypeCountDisciplinasCursadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlunoDisciplinaCursadoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Disciplina
   */

  export type AggregateDisciplina = {
    _count: DisciplinaCountAggregateOutputType | null
    _avg: DisciplinaAvgAggregateOutputType | null
    _sum: DisciplinaSumAggregateOutputType | null
    _min: DisciplinaMinAggregateOutputType | null
    _max: DisciplinaMaxAggregateOutputType | null
  }

  export type DisciplinaAvgAggregateOutputType = {
    id: number | null
    cargaHoraria: number | null
  }

  export type DisciplinaSumAggregateOutputType = {
    id: number | null
    cargaHoraria: number | null
  }

  export type DisciplinaMinAggregateOutputType = {
    id: number | null
    nome: string | null
    cargaHoraria: number | null
    ementa: string | null
  }

  export type DisciplinaMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    cargaHoraria: number | null
    ementa: string | null
  }

  export type DisciplinaCountAggregateOutputType = {
    id: number
    nome: number
    cargaHoraria: number
    ementa: number
    _all: number
  }


  export type DisciplinaAvgAggregateInputType = {
    id?: true
    cargaHoraria?: true
  }

  export type DisciplinaSumAggregateInputType = {
    id?: true
    cargaHoraria?: true
  }

  export type DisciplinaMinAggregateInputType = {
    id?: true
    nome?: true
    cargaHoraria?: true
    ementa?: true
  }

  export type DisciplinaMaxAggregateInputType = {
    id?: true
    nome?: true
    cargaHoraria?: true
    ementa?: true
  }

  export type DisciplinaCountAggregateInputType = {
    id?: true
    nome?: true
    cargaHoraria?: true
    ementa?: true
    _all?: true
  }

  export type DisciplinaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Disciplina to aggregate.
     */
    where?: DisciplinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Disciplinas to fetch.
     */
    orderBy?: DisciplinaOrderByWithRelationInput | DisciplinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DisciplinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Disciplinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Disciplinas
    **/
    _count?: true | DisciplinaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DisciplinaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DisciplinaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DisciplinaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DisciplinaMaxAggregateInputType
  }

  export type GetDisciplinaAggregateType<T extends DisciplinaAggregateArgs> = {
        [P in keyof T & keyof AggregateDisciplina]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDisciplina[P]>
      : GetScalarType<T[P], AggregateDisciplina[P]>
  }




  export type DisciplinaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DisciplinaWhereInput
    orderBy?: DisciplinaOrderByWithAggregationInput | DisciplinaOrderByWithAggregationInput[]
    by: DisciplinaScalarFieldEnum[] | DisciplinaScalarFieldEnum
    having?: DisciplinaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DisciplinaCountAggregateInputType | true
    _avg?: DisciplinaAvgAggregateInputType
    _sum?: DisciplinaSumAggregateInputType
    _min?: DisciplinaMinAggregateInputType
    _max?: DisciplinaMaxAggregateInputType
  }

  export type DisciplinaGroupByOutputType = {
    id: number
    nome: string
    cargaHoraria: number
    ementa: string
    _count: DisciplinaCountAggregateOutputType | null
    _avg: DisciplinaAvgAggregateOutputType | null
    _sum: DisciplinaSumAggregateOutputType | null
    _min: DisciplinaMinAggregateOutputType | null
    _max: DisciplinaMaxAggregateOutputType | null
  }

  type GetDisciplinaGroupByPayload<T extends DisciplinaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DisciplinaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DisciplinaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DisciplinaGroupByOutputType[P]>
            : GetScalarType<T[P], DisciplinaGroupByOutputType[P]>
        }
      >
    >


  export type DisciplinaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    cargaHoraria?: boolean
    ementa?: boolean
    alunosAtivos?: boolean | Disciplina$alunosAtivosArgs<ExtArgs>
    alunosTrancados?: boolean | Disciplina$alunosTrancadosArgs<ExtArgs>
    alunosConcluidos?: boolean | Disciplina$alunosConcluidosArgs<ExtArgs>
    cursos?: boolean | Disciplina$cursosArgs<ExtArgs>
    _count?: boolean | DisciplinaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["disciplina"]>

  export type DisciplinaSelectScalar = {
    id?: boolean
    nome?: boolean
    cargaHoraria?: boolean
    ementa?: boolean
  }


  export type DisciplinaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    alunosAtivos?: boolean | Disciplina$alunosAtivosArgs<ExtArgs>
    alunosTrancados?: boolean | Disciplina$alunosTrancadosArgs<ExtArgs>
    alunosConcluidos?: boolean | Disciplina$alunosConcluidosArgs<ExtArgs>
    cursos?: boolean | Disciplina$cursosArgs<ExtArgs>
    _count?: boolean | DisciplinaCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $DisciplinaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Disciplina"
    objects: {
      alunosAtivos: Prisma.$AlunoDisciplinaMatriculadoPayload<ExtArgs>[]
      alunosTrancados: Prisma.$AlunoDisciplinaTrancadoPayload<ExtArgs>[]
      alunosConcluidos: Prisma.$AlunoDisciplinaCursadoPayload<ExtArgs>[]
      cursos: Prisma.$CursoDisciplinaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      cargaHoraria: number
      ementa: string
    }, ExtArgs["result"]["disciplina"]>
    composites: {}
  }


  type DisciplinaGetPayload<S extends boolean | null | undefined | DisciplinaDefaultArgs> = $Result.GetResult<Prisma.$DisciplinaPayload, S>

  type DisciplinaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DisciplinaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DisciplinaCountAggregateInputType | true
    }

  export interface DisciplinaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Disciplina'], meta: { name: 'Disciplina' } }
    /**
     * Find zero or one Disciplina that matches the filter.
     * @param {DisciplinaFindUniqueArgs} args - Arguments to find a Disciplina
     * @example
     * // Get one Disciplina
     * const disciplina = await prisma.disciplina.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends DisciplinaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, DisciplinaFindUniqueArgs<ExtArgs>>
    ): Prisma__DisciplinaClient<$Result.GetResult<Prisma.$DisciplinaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Disciplina that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DisciplinaFindUniqueOrThrowArgs} args - Arguments to find a Disciplina
     * @example
     * // Get one Disciplina
     * const disciplina = await prisma.disciplina.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends DisciplinaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DisciplinaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__DisciplinaClient<$Result.GetResult<Prisma.$DisciplinaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Disciplina that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisciplinaFindFirstArgs} args - Arguments to find a Disciplina
     * @example
     * // Get one Disciplina
     * const disciplina = await prisma.disciplina.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends DisciplinaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, DisciplinaFindFirstArgs<ExtArgs>>
    ): Prisma__DisciplinaClient<$Result.GetResult<Prisma.$DisciplinaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Disciplina that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisciplinaFindFirstOrThrowArgs} args - Arguments to find a Disciplina
     * @example
     * // Get one Disciplina
     * const disciplina = await prisma.disciplina.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends DisciplinaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DisciplinaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__DisciplinaClient<$Result.GetResult<Prisma.$DisciplinaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Disciplinas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisciplinaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Disciplinas
     * const disciplinas = await prisma.disciplina.findMany()
     * 
     * // Get first 10 Disciplinas
     * const disciplinas = await prisma.disciplina.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const disciplinaWithIdOnly = await prisma.disciplina.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends DisciplinaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DisciplinaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DisciplinaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Disciplina.
     * @param {DisciplinaCreateArgs} args - Arguments to create a Disciplina.
     * @example
     * // Create one Disciplina
     * const Disciplina = await prisma.disciplina.create({
     *   data: {
     *     // ... data to create a Disciplina
     *   }
     * })
     * 
    **/
    create<T extends DisciplinaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, DisciplinaCreateArgs<ExtArgs>>
    ): Prisma__DisciplinaClient<$Result.GetResult<Prisma.$DisciplinaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Disciplinas.
     * @param {DisciplinaCreateManyArgs} args - Arguments to create many Disciplinas.
     * @example
     * // Create many Disciplinas
     * const disciplina = await prisma.disciplina.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends DisciplinaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DisciplinaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Disciplina.
     * @param {DisciplinaDeleteArgs} args - Arguments to delete one Disciplina.
     * @example
     * // Delete one Disciplina
     * const Disciplina = await prisma.disciplina.delete({
     *   where: {
     *     // ... filter to delete one Disciplina
     *   }
     * })
     * 
    **/
    delete<T extends DisciplinaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, DisciplinaDeleteArgs<ExtArgs>>
    ): Prisma__DisciplinaClient<$Result.GetResult<Prisma.$DisciplinaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Disciplina.
     * @param {DisciplinaUpdateArgs} args - Arguments to update one Disciplina.
     * @example
     * // Update one Disciplina
     * const disciplina = await prisma.disciplina.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends DisciplinaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, DisciplinaUpdateArgs<ExtArgs>>
    ): Prisma__DisciplinaClient<$Result.GetResult<Prisma.$DisciplinaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Disciplinas.
     * @param {DisciplinaDeleteManyArgs} args - Arguments to filter Disciplinas to delete.
     * @example
     * // Delete a few Disciplinas
     * const { count } = await prisma.disciplina.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends DisciplinaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DisciplinaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Disciplinas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisciplinaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Disciplinas
     * const disciplina = await prisma.disciplina.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends DisciplinaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, DisciplinaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Disciplina.
     * @param {DisciplinaUpsertArgs} args - Arguments to update or create a Disciplina.
     * @example
     * // Update or create a Disciplina
     * const disciplina = await prisma.disciplina.upsert({
     *   create: {
     *     // ... data to create a Disciplina
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Disciplina we want to update
     *   }
     * })
    **/
    upsert<T extends DisciplinaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, DisciplinaUpsertArgs<ExtArgs>>
    ): Prisma__DisciplinaClient<$Result.GetResult<Prisma.$DisciplinaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Disciplinas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisciplinaCountArgs} args - Arguments to filter Disciplinas to count.
     * @example
     * // Count the number of Disciplinas
     * const count = await prisma.disciplina.count({
     *   where: {
     *     // ... the filter for the Disciplinas we want to count
     *   }
     * })
    **/
    count<T extends DisciplinaCountArgs>(
      args?: Subset<T, DisciplinaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DisciplinaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Disciplina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisciplinaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DisciplinaAggregateArgs>(args: Subset<T, DisciplinaAggregateArgs>): Prisma.PrismaPromise<GetDisciplinaAggregateType<T>>

    /**
     * Group by Disciplina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisciplinaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DisciplinaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DisciplinaGroupByArgs['orderBy'] }
        : { orderBy?: DisciplinaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DisciplinaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDisciplinaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Disciplina model
   */
  readonly fields: DisciplinaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Disciplina.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DisciplinaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    alunosAtivos<T extends Disciplina$alunosAtivosArgs<ExtArgs> = {}>(args?: Subset<T, Disciplina$alunosAtivosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlunoDisciplinaMatriculadoPayload<ExtArgs>, T, 'findMany'> | Null>;

    alunosTrancados<T extends Disciplina$alunosTrancadosArgs<ExtArgs> = {}>(args?: Subset<T, Disciplina$alunosTrancadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlunoDisciplinaTrancadoPayload<ExtArgs>, T, 'findMany'> | Null>;

    alunosConcluidos<T extends Disciplina$alunosConcluidosArgs<ExtArgs> = {}>(args?: Subset<T, Disciplina$alunosConcluidosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlunoDisciplinaCursadoPayload<ExtArgs>, T, 'findMany'> | Null>;

    cursos<T extends Disciplina$cursosArgs<ExtArgs> = {}>(args?: Subset<T, Disciplina$cursosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoDisciplinaPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Disciplina model
   */ 
  interface DisciplinaFieldRefs {
    readonly id: FieldRef<"Disciplina", 'Int'>
    readonly nome: FieldRef<"Disciplina", 'String'>
    readonly cargaHoraria: FieldRef<"Disciplina", 'Int'>
    readonly ementa: FieldRef<"Disciplina", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Disciplina findUnique
   */
  export type DisciplinaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disciplina
     */
    select?: DisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisciplinaInclude<ExtArgs> | null
    /**
     * Filter, which Disciplina to fetch.
     */
    where: DisciplinaWhereUniqueInput
  }

  /**
   * Disciplina findUniqueOrThrow
   */
  export type DisciplinaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disciplina
     */
    select?: DisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisciplinaInclude<ExtArgs> | null
    /**
     * Filter, which Disciplina to fetch.
     */
    where: DisciplinaWhereUniqueInput
  }

  /**
   * Disciplina findFirst
   */
  export type DisciplinaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disciplina
     */
    select?: DisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisciplinaInclude<ExtArgs> | null
    /**
     * Filter, which Disciplina to fetch.
     */
    where?: DisciplinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Disciplinas to fetch.
     */
    orderBy?: DisciplinaOrderByWithRelationInput | DisciplinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Disciplinas.
     */
    cursor?: DisciplinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Disciplinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Disciplinas.
     */
    distinct?: DisciplinaScalarFieldEnum | DisciplinaScalarFieldEnum[]
  }

  /**
   * Disciplina findFirstOrThrow
   */
  export type DisciplinaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disciplina
     */
    select?: DisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisciplinaInclude<ExtArgs> | null
    /**
     * Filter, which Disciplina to fetch.
     */
    where?: DisciplinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Disciplinas to fetch.
     */
    orderBy?: DisciplinaOrderByWithRelationInput | DisciplinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Disciplinas.
     */
    cursor?: DisciplinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Disciplinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Disciplinas.
     */
    distinct?: DisciplinaScalarFieldEnum | DisciplinaScalarFieldEnum[]
  }

  /**
   * Disciplina findMany
   */
  export type DisciplinaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disciplina
     */
    select?: DisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisciplinaInclude<ExtArgs> | null
    /**
     * Filter, which Disciplinas to fetch.
     */
    where?: DisciplinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Disciplinas to fetch.
     */
    orderBy?: DisciplinaOrderByWithRelationInput | DisciplinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Disciplinas.
     */
    cursor?: DisciplinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Disciplinas.
     */
    skip?: number
    distinct?: DisciplinaScalarFieldEnum | DisciplinaScalarFieldEnum[]
  }

  /**
   * Disciplina create
   */
  export type DisciplinaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disciplina
     */
    select?: DisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisciplinaInclude<ExtArgs> | null
    /**
     * The data needed to create a Disciplina.
     */
    data: XOR<DisciplinaCreateInput, DisciplinaUncheckedCreateInput>
  }

  /**
   * Disciplina createMany
   */
  export type DisciplinaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Disciplinas.
     */
    data: DisciplinaCreateManyInput | DisciplinaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Disciplina update
   */
  export type DisciplinaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disciplina
     */
    select?: DisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisciplinaInclude<ExtArgs> | null
    /**
     * The data needed to update a Disciplina.
     */
    data: XOR<DisciplinaUpdateInput, DisciplinaUncheckedUpdateInput>
    /**
     * Choose, which Disciplina to update.
     */
    where: DisciplinaWhereUniqueInput
  }

  /**
   * Disciplina updateMany
   */
  export type DisciplinaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Disciplinas.
     */
    data: XOR<DisciplinaUpdateManyMutationInput, DisciplinaUncheckedUpdateManyInput>
    /**
     * Filter which Disciplinas to update
     */
    where?: DisciplinaWhereInput
  }

  /**
   * Disciplina upsert
   */
  export type DisciplinaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disciplina
     */
    select?: DisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisciplinaInclude<ExtArgs> | null
    /**
     * The filter to search for the Disciplina to update in case it exists.
     */
    where: DisciplinaWhereUniqueInput
    /**
     * In case the Disciplina found by the `where` argument doesn't exist, create a new Disciplina with this data.
     */
    create: XOR<DisciplinaCreateInput, DisciplinaUncheckedCreateInput>
    /**
     * In case the Disciplina was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DisciplinaUpdateInput, DisciplinaUncheckedUpdateInput>
  }

  /**
   * Disciplina delete
   */
  export type DisciplinaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disciplina
     */
    select?: DisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisciplinaInclude<ExtArgs> | null
    /**
     * Filter which Disciplina to delete.
     */
    where: DisciplinaWhereUniqueInput
  }

  /**
   * Disciplina deleteMany
   */
  export type DisciplinaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Disciplinas to delete
     */
    where?: DisciplinaWhereInput
  }

  /**
   * Disciplina.alunosAtivos
   */
  export type Disciplina$alunosAtivosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaMatriculado
     */
    select?: AlunoDisciplinaMatriculadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaMatriculadoInclude<ExtArgs> | null
    where?: AlunoDisciplinaMatriculadoWhereInput
    orderBy?: AlunoDisciplinaMatriculadoOrderByWithRelationInput | AlunoDisciplinaMatriculadoOrderByWithRelationInput[]
    cursor?: AlunoDisciplinaMatriculadoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlunoDisciplinaMatriculadoScalarFieldEnum | AlunoDisciplinaMatriculadoScalarFieldEnum[]
  }

  /**
   * Disciplina.alunosTrancados
   */
  export type Disciplina$alunosTrancadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaTrancado
     */
    select?: AlunoDisciplinaTrancadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaTrancadoInclude<ExtArgs> | null
    where?: AlunoDisciplinaTrancadoWhereInput
    orderBy?: AlunoDisciplinaTrancadoOrderByWithRelationInput | AlunoDisciplinaTrancadoOrderByWithRelationInput[]
    cursor?: AlunoDisciplinaTrancadoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlunoDisciplinaTrancadoScalarFieldEnum | AlunoDisciplinaTrancadoScalarFieldEnum[]
  }

  /**
   * Disciplina.alunosConcluidos
   */
  export type Disciplina$alunosConcluidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaCursado
     */
    select?: AlunoDisciplinaCursadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaCursadoInclude<ExtArgs> | null
    where?: AlunoDisciplinaCursadoWhereInput
    orderBy?: AlunoDisciplinaCursadoOrderByWithRelationInput | AlunoDisciplinaCursadoOrderByWithRelationInput[]
    cursor?: AlunoDisciplinaCursadoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlunoDisciplinaCursadoScalarFieldEnum | AlunoDisciplinaCursadoScalarFieldEnum[]
  }

  /**
   * Disciplina.cursos
   */
  export type Disciplina$cursosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoDisciplina
     */
    select?: CursoDisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoDisciplinaInclude<ExtArgs> | null
    where?: CursoDisciplinaWhereInput
    orderBy?: CursoDisciplinaOrderByWithRelationInput | CursoDisciplinaOrderByWithRelationInput[]
    cursor?: CursoDisciplinaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CursoDisciplinaScalarFieldEnum | CursoDisciplinaScalarFieldEnum[]
  }

  /**
   * Disciplina without action
   */
  export type DisciplinaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disciplina
     */
    select?: DisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisciplinaInclude<ExtArgs> | null
  }


  /**
   * Model Curso
   */

  export type AggregateCurso = {
    _count: CursoCountAggregateOutputType | null
    _avg: CursoAvgAggregateOutputType | null
    _sum: CursoSumAggregateOutputType | null
    _min: CursoMinAggregateOutputType | null
    _max: CursoMaxAggregateOutputType | null
  }

  export type CursoAvgAggregateOutputType = {
    id: number | null
    duracao: number | null
    horasTotais: number | null
  }

  export type CursoSumAggregateOutputType = {
    id: number | null
    duracao: number | null
    horasTotais: number | null
  }

  export type CursoMinAggregateOutputType = {
    id: number | null
    nome: string | null
    descricao: string | null
    duracao: number | null
    horasTotais: number | null
  }

  export type CursoMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    descricao: string | null
    duracao: number | null
    horasTotais: number | null
  }

  export type CursoCountAggregateOutputType = {
    id: number
    nome: number
    descricao: number
    duracao: number
    horasTotais: number
    _all: number
  }


  export type CursoAvgAggregateInputType = {
    id?: true
    duracao?: true
    horasTotais?: true
  }

  export type CursoSumAggregateInputType = {
    id?: true
    duracao?: true
    horasTotais?: true
  }

  export type CursoMinAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    duracao?: true
    horasTotais?: true
  }

  export type CursoMaxAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    duracao?: true
    horasTotais?: true
  }

  export type CursoCountAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    duracao?: true
    horasTotais?: true
    _all?: true
  }

  export type CursoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Curso to aggregate.
     */
    where?: CursoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cursos to fetch.
     */
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CursoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cursos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Cursos
    **/
    _count?: true | CursoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CursoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CursoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CursoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CursoMaxAggregateInputType
  }

  export type GetCursoAggregateType<T extends CursoAggregateArgs> = {
        [P in keyof T & keyof AggregateCurso]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCurso[P]>
      : GetScalarType<T[P], AggregateCurso[P]>
  }




  export type CursoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CursoWhereInput
    orderBy?: CursoOrderByWithAggregationInput | CursoOrderByWithAggregationInput[]
    by: CursoScalarFieldEnum[] | CursoScalarFieldEnum
    having?: CursoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CursoCountAggregateInputType | true
    _avg?: CursoAvgAggregateInputType
    _sum?: CursoSumAggregateInputType
    _min?: CursoMinAggregateInputType
    _max?: CursoMaxAggregateInputType
  }

  export type CursoGroupByOutputType = {
    id: number
    nome: string
    descricao: string
    duracao: number
    horasTotais: number | null
    _count: CursoCountAggregateOutputType | null
    _avg: CursoAvgAggregateOutputType | null
    _sum: CursoSumAggregateOutputType | null
    _min: CursoMinAggregateOutputType | null
    _max: CursoMaxAggregateOutputType | null
  }

  type GetCursoGroupByPayload<T extends CursoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CursoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CursoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CursoGroupByOutputType[P]>
            : GetScalarType<T[P], CursoGroupByOutputType[P]>
        }
      >
    >


  export type CursoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    descricao?: boolean
    duracao?: boolean
    horasTotais?: boolean
    alunos?: boolean | Curso$alunosArgs<ExtArgs>
    disciplinas?: boolean | Curso$disciplinasArgs<ExtArgs>
    _count?: boolean | CursoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["curso"]>

  export type CursoSelectScalar = {
    id?: boolean
    nome?: boolean
    descricao?: boolean
    duracao?: boolean
    horasTotais?: boolean
  }


  export type CursoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    alunos?: boolean | Curso$alunosArgs<ExtArgs>
    disciplinas?: boolean | Curso$disciplinasArgs<ExtArgs>
    _count?: boolean | CursoCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $CursoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Curso"
    objects: {
      alunos: Prisma.$AlunoPayload<ExtArgs>[]
      disciplinas: Prisma.$CursoDisciplinaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      descricao: string
      duracao: number
      horasTotais: number | null
    }, ExtArgs["result"]["curso"]>
    composites: {}
  }


  type CursoGetPayload<S extends boolean | null | undefined | CursoDefaultArgs> = $Result.GetResult<Prisma.$CursoPayload, S>

  type CursoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CursoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CursoCountAggregateInputType | true
    }

  export interface CursoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Curso'], meta: { name: 'Curso' } }
    /**
     * Find zero or one Curso that matches the filter.
     * @param {CursoFindUniqueArgs} args - Arguments to find a Curso
     * @example
     * // Get one Curso
     * const curso = await prisma.curso.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CursoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, CursoFindUniqueArgs<ExtArgs>>
    ): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Curso that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CursoFindUniqueOrThrowArgs} args - Arguments to find a Curso
     * @example
     * // Get one Curso
     * const curso = await prisma.curso.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends CursoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CursoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Curso that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoFindFirstArgs} args - Arguments to find a Curso
     * @example
     * // Get one Curso
     * const curso = await prisma.curso.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CursoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, CursoFindFirstArgs<ExtArgs>>
    ): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Curso that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoFindFirstOrThrowArgs} args - Arguments to find a Curso
     * @example
     * // Get one Curso
     * const curso = await prisma.curso.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends CursoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CursoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Cursos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cursos
     * const cursos = await prisma.curso.findMany()
     * 
     * // Get first 10 Cursos
     * const cursos = await prisma.curso.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cursoWithIdOnly = await prisma.curso.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends CursoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CursoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Curso.
     * @param {CursoCreateArgs} args - Arguments to create a Curso.
     * @example
     * // Create one Curso
     * const Curso = await prisma.curso.create({
     *   data: {
     *     // ... data to create a Curso
     *   }
     * })
     * 
    **/
    create<T extends CursoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, CursoCreateArgs<ExtArgs>>
    ): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Cursos.
     * @param {CursoCreateManyArgs} args - Arguments to create many Cursos.
     * @example
     * // Create many Cursos
     * const curso = await prisma.curso.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends CursoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CursoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Curso.
     * @param {CursoDeleteArgs} args - Arguments to delete one Curso.
     * @example
     * // Delete one Curso
     * const Curso = await prisma.curso.delete({
     *   where: {
     *     // ... filter to delete one Curso
     *   }
     * })
     * 
    **/
    delete<T extends CursoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, CursoDeleteArgs<ExtArgs>>
    ): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Curso.
     * @param {CursoUpdateArgs} args - Arguments to update one Curso.
     * @example
     * // Update one Curso
     * const curso = await prisma.curso.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CursoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, CursoUpdateArgs<ExtArgs>>
    ): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Cursos.
     * @param {CursoDeleteManyArgs} args - Arguments to filter Cursos to delete.
     * @example
     * // Delete a few Cursos
     * const { count } = await prisma.curso.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CursoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CursoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cursos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cursos
     * const curso = await prisma.curso.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CursoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, CursoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Curso.
     * @param {CursoUpsertArgs} args - Arguments to update or create a Curso.
     * @example
     * // Update or create a Curso
     * const curso = await prisma.curso.upsert({
     *   create: {
     *     // ... data to create a Curso
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Curso we want to update
     *   }
     * })
    **/
    upsert<T extends CursoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, CursoUpsertArgs<ExtArgs>>
    ): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Cursos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoCountArgs} args - Arguments to filter Cursos to count.
     * @example
     * // Count the number of Cursos
     * const count = await prisma.curso.count({
     *   where: {
     *     // ... the filter for the Cursos we want to count
     *   }
     * })
    **/
    count<T extends CursoCountArgs>(
      args?: Subset<T, CursoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CursoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Curso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CursoAggregateArgs>(args: Subset<T, CursoAggregateArgs>): Prisma.PrismaPromise<GetCursoAggregateType<T>>

    /**
     * Group by Curso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CursoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CursoGroupByArgs['orderBy'] }
        : { orderBy?: CursoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CursoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCursoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Curso model
   */
  readonly fields: CursoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Curso.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CursoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    alunos<T extends Curso$alunosArgs<ExtArgs> = {}>(args?: Subset<T, Curso$alunosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlunoPayload<ExtArgs>, T, 'findMany'> | Null>;

    disciplinas<T extends Curso$disciplinasArgs<ExtArgs> = {}>(args?: Subset<T, Curso$disciplinasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoDisciplinaPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Curso model
   */ 
  interface CursoFieldRefs {
    readonly id: FieldRef<"Curso", 'Int'>
    readonly nome: FieldRef<"Curso", 'String'>
    readonly descricao: FieldRef<"Curso", 'String'>
    readonly duracao: FieldRef<"Curso", 'Int'>
    readonly horasTotais: FieldRef<"Curso", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Curso findUnique
   */
  export type CursoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * Filter, which Curso to fetch.
     */
    where: CursoWhereUniqueInput
  }

  /**
   * Curso findUniqueOrThrow
   */
  export type CursoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * Filter, which Curso to fetch.
     */
    where: CursoWhereUniqueInput
  }

  /**
   * Curso findFirst
   */
  export type CursoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * Filter, which Curso to fetch.
     */
    where?: CursoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cursos to fetch.
     */
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cursos.
     */
    cursor?: CursoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cursos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cursos.
     */
    distinct?: CursoScalarFieldEnum | CursoScalarFieldEnum[]
  }

  /**
   * Curso findFirstOrThrow
   */
  export type CursoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * Filter, which Curso to fetch.
     */
    where?: CursoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cursos to fetch.
     */
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cursos.
     */
    cursor?: CursoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cursos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cursos.
     */
    distinct?: CursoScalarFieldEnum | CursoScalarFieldEnum[]
  }

  /**
   * Curso findMany
   */
  export type CursoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * Filter, which Cursos to fetch.
     */
    where?: CursoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cursos to fetch.
     */
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Cursos.
     */
    cursor?: CursoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cursos.
     */
    skip?: number
    distinct?: CursoScalarFieldEnum | CursoScalarFieldEnum[]
  }

  /**
   * Curso create
   */
  export type CursoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * The data needed to create a Curso.
     */
    data: XOR<CursoCreateInput, CursoUncheckedCreateInput>
  }

  /**
   * Curso createMany
   */
  export type CursoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Cursos.
     */
    data: CursoCreateManyInput | CursoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Curso update
   */
  export type CursoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * The data needed to update a Curso.
     */
    data: XOR<CursoUpdateInput, CursoUncheckedUpdateInput>
    /**
     * Choose, which Curso to update.
     */
    where: CursoWhereUniqueInput
  }

  /**
   * Curso updateMany
   */
  export type CursoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Cursos.
     */
    data: XOR<CursoUpdateManyMutationInput, CursoUncheckedUpdateManyInput>
    /**
     * Filter which Cursos to update
     */
    where?: CursoWhereInput
  }

  /**
   * Curso upsert
   */
  export type CursoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * The filter to search for the Curso to update in case it exists.
     */
    where: CursoWhereUniqueInput
    /**
     * In case the Curso found by the `where` argument doesn't exist, create a new Curso with this data.
     */
    create: XOR<CursoCreateInput, CursoUncheckedCreateInput>
    /**
     * In case the Curso was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CursoUpdateInput, CursoUncheckedUpdateInput>
  }

  /**
   * Curso delete
   */
  export type CursoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * Filter which Curso to delete.
     */
    where: CursoWhereUniqueInput
  }

  /**
   * Curso deleteMany
   */
  export type CursoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cursos to delete
     */
    where?: CursoWhereInput
  }

  /**
   * Curso.alunos
   */
  export type Curso$alunosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aluno
     */
    select?: AlunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoInclude<ExtArgs> | null
    where?: AlunoWhereInput
    orderBy?: AlunoOrderByWithRelationInput | AlunoOrderByWithRelationInput[]
    cursor?: AlunoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlunoScalarFieldEnum | AlunoScalarFieldEnum[]
  }

  /**
   * Curso.disciplinas
   */
  export type Curso$disciplinasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoDisciplina
     */
    select?: CursoDisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoDisciplinaInclude<ExtArgs> | null
    where?: CursoDisciplinaWhereInput
    orderBy?: CursoDisciplinaOrderByWithRelationInput | CursoDisciplinaOrderByWithRelationInput[]
    cursor?: CursoDisciplinaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CursoDisciplinaScalarFieldEnum | CursoDisciplinaScalarFieldEnum[]
  }

  /**
   * Curso without action
   */
  export type CursoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
  }


  /**
   * Model Aluno
   */

  export type AggregateAluno = {
    _count: AlunoCountAggregateOutputType | null
    _avg: AlunoAvgAggregateOutputType | null
    _sum: AlunoSumAggregateOutputType | null
    _min: AlunoMinAggregateOutputType | null
    _max: AlunoMaxAggregateOutputType | null
  }

  export type AlunoAvgAggregateOutputType = {
    id: number | null
    cursoId: number | null
  }

  export type AlunoSumAggregateOutputType = {
    id: number | null
    cursoId: number | null
  }

  export type AlunoMinAggregateOutputType = {
    id: number | null
    nome: string | null
    cpf: string | null
    email: string | null
    cursoId: number | null
    ativo: boolean | null
  }

  export type AlunoMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    cpf: string | null
    email: string | null
    cursoId: number | null
    ativo: boolean | null
  }

  export type AlunoCountAggregateOutputType = {
    id: number
    nome: number
    cpf: number
    email: number
    cursoId: number
    ativo: number
    _all: number
  }


  export type AlunoAvgAggregateInputType = {
    id?: true
    cursoId?: true
  }

  export type AlunoSumAggregateInputType = {
    id?: true
    cursoId?: true
  }

  export type AlunoMinAggregateInputType = {
    id?: true
    nome?: true
    cpf?: true
    email?: true
    cursoId?: true
    ativo?: true
  }

  export type AlunoMaxAggregateInputType = {
    id?: true
    nome?: true
    cpf?: true
    email?: true
    cursoId?: true
    ativo?: true
  }

  export type AlunoCountAggregateInputType = {
    id?: true
    nome?: true
    cpf?: true
    email?: true
    cursoId?: true
    ativo?: true
    _all?: true
  }

  export type AlunoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Aluno to aggregate.
     */
    where?: AlunoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alunos to fetch.
     */
    orderBy?: AlunoOrderByWithRelationInput | AlunoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AlunoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alunos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alunos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Alunos
    **/
    _count?: true | AlunoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AlunoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AlunoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AlunoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AlunoMaxAggregateInputType
  }

  export type GetAlunoAggregateType<T extends AlunoAggregateArgs> = {
        [P in keyof T & keyof AggregateAluno]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAluno[P]>
      : GetScalarType<T[P], AggregateAluno[P]>
  }




  export type AlunoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlunoWhereInput
    orderBy?: AlunoOrderByWithAggregationInput | AlunoOrderByWithAggregationInput[]
    by: AlunoScalarFieldEnum[] | AlunoScalarFieldEnum
    having?: AlunoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AlunoCountAggregateInputType | true
    _avg?: AlunoAvgAggregateInputType
    _sum?: AlunoSumAggregateInputType
    _min?: AlunoMinAggregateInputType
    _max?: AlunoMaxAggregateInputType
  }

  export type AlunoGroupByOutputType = {
    id: number
    nome: string
    cpf: string
    email: string
    cursoId: number | null
    ativo: boolean
    _count: AlunoCountAggregateOutputType | null
    _avg: AlunoAvgAggregateOutputType | null
    _sum: AlunoSumAggregateOutputType | null
    _min: AlunoMinAggregateOutputType | null
    _max: AlunoMaxAggregateOutputType | null
  }

  type GetAlunoGroupByPayload<T extends AlunoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AlunoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AlunoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AlunoGroupByOutputType[P]>
            : GetScalarType<T[P], AlunoGroupByOutputType[P]>
        }
      >
    >


  export type AlunoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    cpf?: boolean
    email?: boolean
    cursoId?: boolean
    ativo?: boolean
    curso?: boolean | Aluno$cursoArgs<ExtArgs>
    disciplinasMatriculado?: boolean | Aluno$disciplinasMatriculadoArgs<ExtArgs>
    disciplinasTrancado?: boolean | Aluno$disciplinasTrancadoArgs<ExtArgs>
    disciplinasCursado?: boolean | Aluno$disciplinasCursadoArgs<ExtArgs>
    _count?: boolean | AlunoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aluno"]>

  export type AlunoSelectScalar = {
    id?: boolean
    nome?: boolean
    cpf?: boolean
    email?: boolean
    cursoId?: boolean
    ativo?: boolean
  }


  export type AlunoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    curso?: boolean | Aluno$cursoArgs<ExtArgs>
    disciplinasMatriculado?: boolean | Aluno$disciplinasMatriculadoArgs<ExtArgs>
    disciplinasTrancado?: boolean | Aluno$disciplinasTrancadoArgs<ExtArgs>
    disciplinasCursado?: boolean | Aluno$disciplinasCursadoArgs<ExtArgs>
    _count?: boolean | AlunoCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $AlunoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Aluno"
    objects: {
      curso: Prisma.$CursoPayload<ExtArgs> | null
      disciplinasMatriculado: Prisma.$AlunoDisciplinaMatriculadoPayload<ExtArgs>[]
      disciplinasTrancado: Prisma.$AlunoDisciplinaTrancadoPayload<ExtArgs>[]
      disciplinasCursado: Prisma.$AlunoDisciplinaCursadoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      cpf: string
      email: string
      cursoId: number | null
      ativo: boolean
    }, ExtArgs["result"]["aluno"]>
    composites: {}
  }


  type AlunoGetPayload<S extends boolean | null | undefined | AlunoDefaultArgs> = $Result.GetResult<Prisma.$AlunoPayload, S>

  type AlunoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AlunoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AlunoCountAggregateInputType | true
    }

  export interface AlunoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Aluno'], meta: { name: 'Aluno' } }
    /**
     * Find zero or one Aluno that matches the filter.
     * @param {AlunoFindUniqueArgs} args - Arguments to find a Aluno
     * @example
     * // Get one Aluno
     * const aluno = await prisma.aluno.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends AlunoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoFindUniqueArgs<ExtArgs>>
    ): Prisma__AlunoClient<$Result.GetResult<Prisma.$AlunoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Aluno that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AlunoFindUniqueOrThrowArgs} args - Arguments to find a Aluno
     * @example
     * // Get one Aluno
     * const aluno = await prisma.aluno.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends AlunoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__AlunoClient<$Result.GetResult<Prisma.$AlunoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Aluno that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoFindFirstArgs} args - Arguments to find a Aluno
     * @example
     * // Get one Aluno
     * const aluno = await prisma.aluno.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends AlunoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoFindFirstArgs<ExtArgs>>
    ): Prisma__AlunoClient<$Result.GetResult<Prisma.$AlunoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Aluno that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoFindFirstOrThrowArgs} args - Arguments to find a Aluno
     * @example
     * // Get one Aluno
     * const aluno = await prisma.aluno.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends AlunoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__AlunoClient<$Result.GetResult<Prisma.$AlunoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Alunos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Alunos
     * const alunos = await prisma.aluno.findMany()
     * 
     * // Get first 10 Alunos
     * const alunos = await prisma.aluno.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const alunoWithIdOnly = await prisma.aluno.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends AlunoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlunoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Aluno.
     * @param {AlunoCreateArgs} args - Arguments to create a Aluno.
     * @example
     * // Create one Aluno
     * const Aluno = await prisma.aluno.create({
     *   data: {
     *     // ... data to create a Aluno
     *   }
     * })
     * 
    **/
    create<T extends AlunoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoCreateArgs<ExtArgs>>
    ): Prisma__AlunoClient<$Result.GetResult<Prisma.$AlunoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Alunos.
     * @param {AlunoCreateManyArgs} args - Arguments to create many Alunos.
     * @example
     * // Create many Alunos
     * const aluno = await prisma.aluno.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends AlunoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Aluno.
     * @param {AlunoDeleteArgs} args - Arguments to delete one Aluno.
     * @example
     * // Delete one Aluno
     * const Aluno = await prisma.aluno.delete({
     *   where: {
     *     // ... filter to delete one Aluno
     *   }
     * })
     * 
    **/
    delete<T extends AlunoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoDeleteArgs<ExtArgs>>
    ): Prisma__AlunoClient<$Result.GetResult<Prisma.$AlunoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Aluno.
     * @param {AlunoUpdateArgs} args - Arguments to update one Aluno.
     * @example
     * // Update one Aluno
     * const aluno = await prisma.aluno.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends AlunoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoUpdateArgs<ExtArgs>>
    ): Prisma__AlunoClient<$Result.GetResult<Prisma.$AlunoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Alunos.
     * @param {AlunoDeleteManyArgs} args - Arguments to filter Alunos to delete.
     * @example
     * // Delete a few Alunos
     * const { count } = await prisma.aluno.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends AlunoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Alunos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Alunos
     * const aluno = await prisma.aluno.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends AlunoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Aluno.
     * @param {AlunoUpsertArgs} args - Arguments to update or create a Aluno.
     * @example
     * // Update or create a Aluno
     * const aluno = await prisma.aluno.upsert({
     *   create: {
     *     // ... data to create a Aluno
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Aluno we want to update
     *   }
     * })
    **/
    upsert<T extends AlunoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoUpsertArgs<ExtArgs>>
    ): Prisma__AlunoClient<$Result.GetResult<Prisma.$AlunoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Alunos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoCountArgs} args - Arguments to filter Alunos to count.
     * @example
     * // Count the number of Alunos
     * const count = await prisma.aluno.count({
     *   where: {
     *     // ... the filter for the Alunos we want to count
     *   }
     * })
    **/
    count<T extends AlunoCountArgs>(
      args?: Subset<T, AlunoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AlunoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Aluno.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AlunoAggregateArgs>(args: Subset<T, AlunoAggregateArgs>): Prisma.PrismaPromise<GetAlunoAggregateType<T>>

    /**
     * Group by Aluno.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AlunoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AlunoGroupByArgs['orderBy'] }
        : { orderBy?: AlunoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AlunoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlunoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Aluno model
   */
  readonly fields: AlunoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Aluno.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AlunoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    curso<T extends Aluno$cursoArgs<ExtArgs> = {}>(args?: Subset<T, Aluno$cursoArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    disciplinasMatriculado<T extends Aluno$disciplinasMatriculadoArgs<ExtArgs> = {}>(args?: Subset<T, Aluno$disciplinasMatriculadoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlunoDisciplinaMatriculadoPayload<ExtArgs>, T, 'findMany'> | Null>;

    disciplinasTrancado<T extends Aluno$disciplinasTrancadoArgs<ExtArgs> = {}>(args?: Subset<T, Aluno$disciplinasTrancadoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlunoDisciplinaTrancadoPayload<ExtArgs>, T, 'findMany'> | Null>;

    disciplinasCursado<T extends Aluno$disciplinasCursadoArgs<ExtArgs> = {}>(args?: Subset<T, Aluno$disciplinasCursadoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlunoDisciplinaCursadoPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Aluno model
   */ 
  interface AlunoFieldRefs {
    readonly id: FieldRef<"Aluno", 'Int'>
    readonly nome: FieldRef<"Aluno", 'String'>
    readonly cpf: FieldRef<"Aluno", 'String'>
    readonly email: FieldRef<"Aluno", 'String'>
    readonly cursoId: FieldRef<"Aluno", 'Int'>
    readonly ativo: FieldRef<"Aluno", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Aluno findUnique
   */
  export type AlunoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aluno
     */
    select?: AlunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoInclude<ExtArgs> | null
    /**
     * Filter, which Aluno to fetch.
     */
    where: AlunoWhereUniqueInput
  }

  /**
   * Aluno findUniqueOrThrow
   */
  export type AlunoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aluno
     */
    select?: AlunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoInclude<ExtArgs> | null
    /**
     * Filter, which Aluno to fetch.
     */
    where: AlunoWhereUniqueInput
  }

  /**
   * Aluno findFirst
   */
  export type AlunoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aluno
     */
    select?: AlunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoInclude<ExtArgs> | null
    /**
     * Filter, which Aluno to fetch.
     */
    where?: AlunoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alunos to fetch.
     */
    orderBy?: AlunoOrderByWithRelationInput | AlunoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Alunos.
     */
    cursor?: AlunoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alunos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alunos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Alunos.
     */
    distinct?: AlunoScalarFieldEnum | AlunoScalarFieldEnum[]
  }

  /**
   * Aluno findFirstOrThrow
   */
  export type AlunoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aluno
     */
    select?: AlunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoInclude<ExtArgs> | null
    /**
     * Filter, which Aluno to fetch.
     */
    where?: AlunoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alunos to fetch.
     */
    orderBy?: AlunoOrderByWithRelationInput | AlunoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Alunos.
     */
    cursor?: AlunoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alunos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alunos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Alunos.
     */
    distinct?: AlunoScalarFieldEnum | AlunoScalarFieldEnum[]
  }

  /**
   * Aluno findMany
   */
  export type AlunoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aluno
     */
    select?: AlunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoInclude<ExtArgs> | null
    /**
     * Filter, which Alunos to fetch.
     */
    where?: AlunoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alunos to fetch.
     */
    orderBy?: AlunoOrderByWithRelationInput | AlunoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Alunos.
     */
    cursor?: AlunoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alunos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alunos.
     */
    skip?: number
    distinct?: AlunoScalarFieldEnum | AlunoScalarFieldEnum[]
  }

  /**
   * Aluno create
   */
  export type AlunoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aluno
     */
    select?: AlunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoInclude<ExtArgs> | null
    /**
     * The data needed to create a Aluno.
     */
    data: XOR<AlunoCreateInput, AlunoUncheckedCreateInput>
  }

  /**
   * Aluno createMany
   */
  export type AlunoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Alunos.
     */
    data: AlunoCreateManyInput | AlunoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Aluno update
   */
  export type AlunoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aluno
     */
    select?: AlunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoInclude<ExtArgs> | null
    /**
     * The data needed to update a Aluno.
     */
    data: XOR<AlunoUpdateInput, AlunoUncheckedUpdateInput>
    /**
     * Choose, which Aluno to update.
     */
    where: AlunoWhereUniqueInput
  }

  /**
   * Aluno updateMany
   */
  export type AlunoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Alunos.
     */
    data: XOR<AlunoUpdateManyMutationInput, AlunoUncheckedUpdateManyInput>
    /**
     * Filter which Alunos to update
     */
    where?: AlunoWhereInput
  }

  /**
   * Aluno upsert
   */
  export type AlunoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aluno
     */
    select?: AlunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoInclude<ExtArgs> | null
    /**
     * The filter to search for the Aluno to update in case it exists.
     */
    where: AlunoWhereUniqueInput
    /**
     * In case the Aluno found by the `where` argument doesn't exist, create a new Aluno with this data.
     */
    create: XOR<AlunoCreateInput, AlunoUncheckedCreateInput>
    /**
     * In case the Aluno was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AlunoUpdateInput, AlunoUncheckedUpdateInput>
  }

  /**
   * Aluno delete
   */
  export type AlunoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aluno
     */
    select?: AlunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoInclude<ExtArgs> | null
    /**
     * Filter which Aluno to delete.
     */
    where: AlunoWhereUniqueInput
  }

  /**
   * Aluno deleteMany
   */
  export type AlunoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Alunos to delete
     */
    where?: AlunoWhereInput
  }

  /**
   * Aluno.curso
   */
  export type Aluno$cursoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    where?: CursoWhereInput
  }

  /**
   * Aluno.disciplinasMatriculado
   */
  export type Aluno$disciplinasMatriculadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaMatriculado
     */
    select?: AlunoDisciplinaMatriculadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaMatriculadoInclude<ExtArgs> | null
    where?: AlunoDisciplinaMatriculadoWhereInput
    orderBy?: AlunoDisciplinaMatriculadoOrderByWithRelationInput | AlunoDisciplinaMatriculadoOrderByWithRelationInput[]
    cursor?: AlunoDisciplinaMatriculadoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlunoDisciplinaMatriculadoScalarFieldEnum | AlunoDisciplinaMatriculadoScalarFieldEnum[]
  }

  /**
   * Aluno.disciplinasTrancado
   */
  export type Aluno$disciplinasTrancadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaTrancado
     */
    select?: AlunoDisciplinaTrancadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaTrancadoInclude<ExtArgs> | null
    where?: AlunoDisciplinaTrancadoWhereInput
    orderBy?: AlunoDisciplinaTrancadoOrderByWithRelationInput | AlunoDisciplinaTrancadoOrderByWithRelationInput[]
    cursor?: AlunoDisciplinaTrancadoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlunoDisciplinaTrancadoScalarFieldEnum | AlunoDisciplinaTrancadoScalarFieldEnum[]
  }

  /**
   * Aluno.disciplinasCursado
   */
  export type Aluno$disciplinasCursadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaCursado
     */
    select?: AlunoDisciplinaCursadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaCursadoInclude<ExtArgs> | null
    where?: AlunoDisciplinaCursadoWhereInput
    orderBy?: AlunoDisciplinaCursadoOrderByWithRelationInput | AlunoDisciplinaCursadoOrderByWithRelationInput[]
    cursor?: AlunoDisciplinaCursadoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlunoDisciplinaCursadoScalarFieldEnum | AlunoDisciplinaCursadoScalarFieldEnum[]
  }

  /**
   * Aluno without action
   */
  export type AlunoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Aluno
     */
    select?: AlunoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoInclude<ExtArgs> | null
  }


  /**
   * Model AlunoDisciplinaMatriculado
   */

  export type AggregateAlunoDisciplinaMatriculado = {
    _count: AlunoDisciplinaMatriculadoCountAggregateOutputType | null
    _avg: AlunoDisciplinaMatriculadoAvgAggregateOutputType | null
    _sum: AlunoDisciplinaMatriculadoSumAggregateOutputType | null
    _min: AlunoDisciplinaMatriculadoMinAggregateOutputType | null
    _max: AlunoDisciplinaMatriculadoMaxAggregateOutputType | null
  }

  export type AlunoDisciplinaMatriculadoAvgAggregateOutputType = {
    id: number | null
    alunoId: number | null
    disciplinaId: number | null
  }

  export type AlunoDisciplinaMatriculadoSumAggregateOutputType = {
    id: number | null
    alunoId: number | null
    disciplinaId: number | null
  }

  export type AlunoDisciplinaMatriculadoMinAggregateOutputType = {
    id: number | null
    alunoId: number | null
    disciplinaId: number | null
    data: Date | null
  }

  export type AlunoDisciplinaMatriculadoMaxAggregateOutputType = {
    id: number | null
    alunoId: number | null
    disciplinaId: number | null
    data: Date | null
  }

  export type AlunoDisciplinaMatriculadoCountAggregateOutputType = {
    id: number
    alunoId: number
    disciplinaId: number
    data: number
    _all: number
  }


  export type AlunoDisciplinaMatriculadoAvgAggregateInputType = {
    id?: true
    alunoId?: true
    disciplinaId?: true
  }

  export type AlunoDisciplinaMatriculadoSumAggregateInputType = {
    id?: true
    alunoId?: true
    disciplinaId?: true
  }

  export type AlunoDisciplinaMatriculadoMinAggregateInputType = {
    id?: true
    alunoId?: true
    disciplinaId?: true
    data?: true
  }

  export type AlunoDisciplinaMatriculadoMaxAggregateInputType = {
    id?: true
    alunoId?: true
    disciplinaId?: true
    data?: true
  }

  export type AlunoDisciplinaMatriculadoCountAggregateInputType = {
    id?: true
    alunoId?: true
    disciplinaId?: true
    data?: true
    _all?: true
  }

  export type AlunoDisciplinaMatriculadoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AlunoDisciplinaMatriculado to aggregate.
     */
    where?: AlunoDisciplinaMatriculadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlunoDisciplinaMatriculados to fetch.
     */
    orderBy?: AlunoDisciplinaMatriculadoOrderByWithRelationInput | AlunoDisciplinaMatriculadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AlunoDisciplinaMatriculadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlunoDisciplinaMatriculados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlunoDisciplinaMatriculados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AlunoDisciplinaMatriculados
    **/
    _count?: true | AlunoDisciplinaMatriculadoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AlunoDisciplinaMatriculadoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AlunoDisciplinaMatriculadoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AlunoDisciplinaMatriculadoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AlunoDisciplinaMatriculadoMaxAggregateInputType
  }

  export type GetAlunoDisciplinaMatriculadoAggregateType<T extends AlunoDisciplinaMatriculadoAggregateArgs> = {
        [P in keyof T & keyof AggregateAlunoDisciplinaMatriculado]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAlunoDisciplinaMatriculado[P]>
      : GetScalarType<T[P], AggregateAlunoDisciplinaMatriculado[P]>
  }




  export type AlunoDisciplinaMatriculadoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlunoDisciplinaMatriculadoWhereInput
    orderBy?: AlunoDisciplinaMatriculadoOrderByWithAggregationInput | AlunoDisciplinaMatriculadoOrderByWithAggregationInput[]
    by: AlunoDisciplinaMatriculadoScalarFieldEnum[] | AlunoDisciplinaMatriculadoScalarFieldEnum
    having?: AlunoDisciplinaMatriculadoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AlunoDisciplinaMatriculadoCountAggregateInputType | true
    _avg?: AlunoDisciplinaMatriculadoAvgAggregateInputType
    _sum?: AlunoDisciplinaMatriculadoSumAggregateInputType
    _min?: AlunoDisciplinaMatriculadoMinAggregateInputType
    _max?: AlunoDisciplinaMatriculadoMaxAggregateInputType
  }

  export type AlunoDisciplinaMatriculadoGroupByOutputType = {
    id: number
    alunoId: number
    disciplinaId: number
    data: Date
    _count: AlunoDisciplinaMatriculadoCountAggregateOutputType | null
    _avg: AlunoDisciplinaMatriculadoAvgAggregateOutputType | null
    _sum: AlunoDisciplinaMatriculadoSumAggregateOutputType | null
    _min: AlunoDisciplinaMatriculadoMinAggregateOutputType | null
    _max: AlunoDisciplinaMatriculadoMaxAggregateOutputType | null
  }

  type GetAlunoDisciplinaMatriculadoGroupByPayload<T extends AlunoDisciplinaMatriculadoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AlunoDisciplinaMatriculadoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AlunoDisciplinaMatriculadoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AlunoDisciplinaMatriculadoGroupByOutputType[P]>
            : GetScalarType<T[P], AlunoDisciplinaMatriculadoGroupByOutputType[P]>
        }
      >
    >


  export type AlunoDisciplinaMatriculadoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    alunoId?: boolean
    disciplinaId?: boolean
    data?: boolean
    aluno?: boolean | AlunoDefaultArgs<ExtArgs>
    disciplina?: boolean | DisciplinaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alunoDisciplinaMatriculado"]>

  export type AlunoDisciplinaMatriculadoSelectScalar = {
    id?: boolean
    alunoId?: boolean
    disciplinaId?: boolean
    data?: boolean
  }


  export type AlunoDisciplinaMatriculadoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    aluno?: boolean | AlunoDefaultArgs<ExtArgs>
    disciplina?: boolean | DisciplinaDefaultArgs<ExtArgs>
  }


  export type $AlunoDisciplinaMatriculadoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AlunoDisciplinaMatriculado"
    objects: {
      aluno: Prisma.$AlunoPayload<ExtArgs>
      disciplina: Prisma.$DisciplinaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      alunoId: number
      disciplinaId: number
      data: Date
    }, ExtArgs["result"]["alunoDisciplinaMatriculado"]>
    composites: {}
  }


  type AlunoDisciplinaMatriculadoGetPayload<S extends boolean | null | undefined | AlunoDisciplinaMatriculadoDefaultArgs> = $Result.GetResult<Prisma.$AlunoDisciplinaMatriculadoPayload, S>

  type AlunoDisciplinaMatriculadoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AlunoDisciplinaMatriculadoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AlunoDisciplinaMatriculadoCountAggregateInputType | true
    }

  export interface AlunoDisciplinaMatriculadoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AlunoDisciplinaMatriculado'], meta: { name: 'AlunoDisciplinaMatriculado' } }
    /**
     * Find zero or one AlunoDisciplinaMatriculado that matches the filter.
     * @param {AlunoDisciplinaMatriculadoFindUniqueArgs} args - Arguments to find a AlunoDisciplinaMatriculado
     * @example
     * // Get one AlunoDisciplinaMatriculado
     * const alunoDisciplinaMatriculado = await prisma.alunoDisciplinaMatriculado.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends AlunoDisciplinaMatriculadoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoDisciplinaMatriculadoFindUniqueArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaMatriculadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaMatriculadoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one AlunoDisciplinaMatriculado that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AlunoDisciplinaMatriculadoFindUniqueOrThrowArgs} args - Arguments to find a AlunoDisciplinaMatriculado
     * @example
     * // Get one AlunoDisciplinaMatriculado
     * const alunoDisciplinaMatriculado = await prisma.alunoDisciplinaMatriculado.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends AlunoDisciplinaMatriculadoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoDisciplinaMatriculadoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaMatriculadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaMatriculadoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first AlunoDisciplinaMatriculado that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaMatriculadoFindFirstArgs} args - Arguments to find a AlunoDisciplinaMatriculado
     * @example
     * // Get one AlunoDisciplinaMatriculado
     * const alunoDisciplinaMatriculado = await prisma.alunoDisciplinaMatriculado.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends AlunoDisciplinaMatriculadoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoDisciplinaMatriculadoFindFirstArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaMatriculadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaMatriculadoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first AlunoDisciplinaMatriculado that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaMatriculadoFindFirstOrThrowArgs} args - Arguments to find a AlunoDisciplinaMatriculado
     * @example
     * // Get one AlunoDisciplinaMatriculado
     * const alunoDisciplinaMatriculado = await prisma.alunoDisciplinaMatriculado.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends AlunoDisciplinaMatriculadoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoDisciplinaMatriculadoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaMatriculadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaMatriculadoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more AlunoDisciplinaMatriculados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaMatriculadoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AlunoDisciplinaMatriculados
     * const alunoDisciplinaMatriculados = await prisma.alunoDisciplinaMatriculado.findMany()
     * 
     * // Get first 10 AlunoDisciplinaMatriculados
     * const alunoDisciplinaMatriculados = await prisma.alunoDisciplinaMatriculado.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const alunoDisciplinaMatriculadoWithIdOnly = await prisma.alunoDisciplinaMatriculado.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends AlunoDisciplinaMatriculadoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoDisciplinaMatriculadoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlunoDisciplinaMatriculadoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a AlunoDisciplinaMatriculado.
     * @param {AlunoDisciplinaMatriculadoCreateArgs} args - Arguments to create a AlunoDisciplinaMatriculado.
     * @example
     * // Create one AlunoDisciplinaMatriculado
     * const AlunoDisciplinaMatriculado = await prisma.alunoDisciplinaMatriculado.create({
     *   data: {
     *     // ... data to create a AlunoDisciplinaMatriculado
     *   }
     * })
     * 
    **/
    create<T extends AlunoDisciplinaMatriculadoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoDisciplinaMatriculadoCreateArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaMatriculadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaMatriculadoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many AlunoDisciplinaMatriculados.
     * @param {AlunoDisciplinaMatriculadoCreateManyArgs} args - Arguments to create many AlunoDisciplinaMatriculados.
     * @example
     * // Create many AlunoDisciplinaMatriculados
     * const alunoDisciplinaMatriculado = await prisma.alunoDisciplinaMatriculado.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends AlunoDisciplinaMatriculadoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoDisciplinaMatriculadoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a AlunoDisciplinaMatriculado.
     * @param {AlunoDisciplinaMatriculadoDeleteArgs} args - Arguments to delete one AlunoDisciplinaMatriculado.
     * @example
     * // Delete one AlunoDisciplinaMatriculado
     * const AlunoDisciplinaMatriculado = await prisma.alunoDisciplinaMatriculado.delete({
     *   where: {
     *     // ... filter to delete one AlunoDisciplinaMatriculado
     *   }
     * })
     * 
    **/
    delete<T extends AlunoDisciplinaMatriculadoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoDisciplinaMatriculadoDeleteArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaMatriculadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaMatriculadoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one AlunoDisciplinaMatriculado.
     * @param {AlunoDisciplinaMatriculadoUpdateArgs} args - Arguments to update one AlunoDisciplinaMatriculado.
     * @example
     * // Update one AlunoDisciplinaMatriculado
     * const alunoDisciplinaMatriculado = await prisma.alunoDisciplinaMatriculado.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends AlunoDisciplinaMatriculadoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoDisciplinaMatriculadoUpdateArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaMatriculadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaMatriculadoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more AlunoDisciplinaMatriculados.
     * @param {AlunoDisciplinaMatriculadoDeleteManyArgs} args - Arguments to filter AlunoDisciplinaMatriculados to delete.
     * @example
     * // Delete a few AlunoDisciplinaMatriculados
     * const { count } = await prisma.alunoDisciplinaMatriculado.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends AlunoDisciplinaMatriculadoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoDisciplinaMatriculadoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AlunoDisciplinaMatriculados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaMatriculadoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AlunoDisciplinaMatriculados
     * const alunoDisciplinaMatriculado = await prisma.alunoDisciplinaMatriculado.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends AlunoDisciplinaMatriculadoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoDisciplinaMatriculadoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AlunoDisciplinaMatriculado.
     * @param {AlunoDisciplinaMatriculadoUpsertArgs} args - Arguments to update or create a AlunoDisciplinaMatriculado.
     * @example
     * // Update or create a AlunoDisciplinaMatriculado
     * const alunoDisciplinaMatriculado = await prisma.alunoDisciplinaMatriculado.upsert({
     *   create: {
     *     // ... data to create a AlunoDisciplinaMatriculado
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AlunoDisciplinaMatriculado we want to update
     *   }
     * })
    **/
    upsert<T extends AlunoDisciplinaMatriculadoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoDisciplinaMatriculadoUpsertArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaMatriculadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaMatriculadoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of AlunoDisciplinaMatriculados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaMatriculadoCountArgs} args - Arguments to filter AlunoDisciplinaMatriculados to count.
     * @example
     * // Count the number of AlunoDisciplinaMatriculados
     * const count = await prisma.alunoDisciplinaMatriculado.count({
     *   where: {
     *     // ... the filter for the AlunoDisciplinaMatriculados we want to count
     *   }
     * })
    **/
    count<T extends AlunoDisciplinaMatriculadoCountArgs>(
      args?: Subset<T, AlunoDisciplinaMatriculadoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AlunoDisciplinaMatriculadoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AlunoDisciplinaMatriculado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaMatriculadoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AlunoDisciplinaMatriculadoAggregateArgs>(args: Subset<T, AlunoDisciplinaMatriculadoAggregateArgs>): Prisma.PrismaPromise<GetAlunoDisciplinaMatriculadoAggregateType<T>>

    /**
     * Group by AlunoDisciplinaMatriculado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaMatriculadoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AlunoDisciplinaMatriculadoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AlunoDisciplinaMatriculadoGroupByArgs['orderBy'] }
        : { orderBy?: AlunoDisciplinaMatriculadoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AlunoDisciplinaMatriculadoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlunoDisciplinaMatriculadoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AlunoDisciplinaMatriculado model
   */
  readonly fields: AlunoDisciplinaMatriculadoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AlunoDisciplinaMatriculado.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AlunoDisciplinaMatriculadoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    aluno<T extends AlunoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AlunoDefaultArgs<ExtArgs>>): Prisma__AlunoClient<$Result.GetResult<Prisma.$AlunoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    disciplina<T extends DisciplinaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DisciplinaDefaultArgs<ExtArgs>>): Prisma__DisciplinaClient<$Result.GetResult<Prisma.$DisciplinaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the AlunoDisciplinaMatriculado model
   */ 
  interface AlunoDisciplinaMatriculadoFieldRefs {
    readonly id: FieldRef<"AlunoDisciplinaMatriculado", 'Int'>
    readonly alunoId: FieldRef<"AlunoDisciplinaMatriculado", 'Int'>
    readonly disciplinaId: FieldRef<"AlunoDisciplinaMatriculado", 'Int'>
    readonly data: FieldRef<"AlunoDisciplinaMatriculado", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AlunoDisciplinaMatriculado findUnique
   */
  export type AlunoDisciplinaMatriculadoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaMatriculado
     */
    select?: AlunoDisciplinaMatriculadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaMatriculadoInclude<ExtArgs> | null
    /**
     * Filter, which AlunoDisciplinaMatriculado to fetch.
     */
    where: AlunoDisciplinaMatriculadoWhereUniqueInput
  }

  /**
   * AlunoDisciplinaMatriculado findUniqueOrThrow
   */
  export type AlunoDisciplinaMatriculadoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaMatriculado
     */
    select?: AlunoDisciplinaMatriculadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaMatriculadoInclude<ExtArgs> | null
    /**
     * Filter, which AlunoDisciplinaMatriculado to fetch.
     */
    where: AlunoDisciplinaMatriculadoWhereUniqueInput
  }

  /**
   * AlunoDisciplinaMatriculado findFirst
   */
  export type AlunoDisciplinaMatriculadoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaMatriculado
     */
    select?: AlunoDisciplinaMatriculadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaMatriculadoInclude<ExtArgs> | null
    /**
     * Filter, which AlunoDisciplinaMatriculado to fetch.
     */
    where?: AlunoDisciplinaMatriculadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlunoDisciplinaMatriculados to fetch.
     */
    orderBy?: AlunoDisciplinaMatriculadoOrderByWithRelationInput | AlunoDisciplinaMatriculadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AlunoDisciplinaMatriculados.
     */
    cursor?: AlunoDisciplinaMatriculadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlunoDisciplinaMatriculados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlunoDisciplinaMatriculados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AlunoDisciplinaMatriculados.
     */
    distinct?: AlunoDisciplinaMatriculadoScalarFieldEnum | AlunoDisciplinaMatriculadoScalarFieldEnum[]
  }

  /**
   * AlunoDisciplinaMatriculado findFirstOrThrow
   */
  export type AlunoDisciplinaMatriculadoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaMatriculado
     */
    select?: AlunoDisciplinaMatriculadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaMatriculadoInclude<ExtArgs> | null
    /**
     * Filter, which AlunoDisciplinaMatriculado to fetch.
     */
    where?: AlunoDisciplinaMatriculadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlunoDisciplinaMatriculados to fetch.
     */
    orderBy?: AlunoDisciplinaMatriculadoOrderByWithRelationInput | AlunoDisciplinaMatriculadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AlunoDisciplinaMatriculados.
     */
    cursor?: AlunoDisciplinaMatriculadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlunoDisciplinaMatriculados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlunoDisciplinaMatriculados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AlunoDisciplinaMatriculados.
     */
    distinct?: AlunoDisciplinaMatriculadoScalarFieldEnum | AlunoDisciplinaMatriculadoScalarFieldEnum[]
  }

  /**
   * AlunoDisciplinaMatriculado findMany
   */
  export type AlunoDisciplinaMatriculadoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaMatriculado
     */
    select?: AlunoDisciplinaMatriculadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaMatriculadoInclude<ExtArgs> | null
    /**
     * Filter, which AlunoDisciplinaMatriculados to fetch.
     */
    where?: AlunoDisciplinaMatriculadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlunoDisciplinaMatriculados to fetch.
     */
    orderBy?: AlunoDisciplinaMatriculadoOrderByWithRelationInput | AlunoDisciplinaMatriculadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AlunoDisciplinaMatriculados.
     */
    cursor?: AlunoDisciplinaMatriculadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlunoDisciplinaMatriculados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlunoDisciplinaMatriculados.
     */
    skip?: number
    distinct?: AlunoDisciplinaMatriculadoScalarFieldEnum | AlunoDisciplinaMatriculadoScalarFieldEnum[]
  }

  /**
   * AlunoDisciplinaMatriculado create
   */
  export type AlunoDisciplinaMatriculadoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaMatriculado
     */
    select?: AlunoDisciplinaMatriculadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaMatriculadoInclude<ExtArgs> | null
    /**
     * The data needed to create a AlunoDisciplinaMatriculado.
     */
    data: XOR<AlunoDisciplinaMatriculadoCreateInput, AlunoDisciplinaMatriculadoUncheckedCreateInput>
  }

  /**
   * AlunoDisciplinaMatriculado createMany
   */
  export type AlunoDisciplinaMatriculadoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AlunoDisciplinaMatriculados.
     */
    data: AlunoDisciplinaMatriculadoCreateManyInput | AlunoDisciplinaMatriculadoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AlunoDisciplinaMatriculado update
   */
  export type AlunoDisciplinaMatriculadoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaMatriculado
     */
    select?: AlunoDisciplinaMatriculadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaMatriculadoInclude<ExtArgs> | null
    /**
     * The data needed to update a AlunoDisciplinaMatriculado.
     */
    data: XOR<AlunoDisciplinaMatriculadoUpdateInput, AlunoDisciplinaMatriculadoUncheckedUpdateInput>
    /**
     * Choose, which AlunoDisciplinaMatriculado to update.
     */
    where: AlunoDisciplinaMatriculadoWhereUniqueInput
  }

  /**
   * AlunoDisciplinaMatriculado updateMany
   */
  export type AlunoDisciplinaMatriculadoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AlunoDisciplinaMatriculados.
     */
    data: XOR<AlunoDisciplinaMatriculadoUpdateManyMutationInput, AlunoDisciplinaMatriculadoUncheckedUpdateManyInput>
    /**
     * Filter which AlunoDisciplinaMatriculados to update
     */
    where?: AlunoDisciplinaMatriculadoWhereInput
  }

  /**
   * AlunoDisciplinaMatriculado upsert
   */
  export type AlunoDisciplinaMatriculadoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaMatriculado
     */
    select?: AlunoDisciplinaMatriculadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaMatriculadoInclude<ExtArgs> | null
    /**
     * The filter to search for the AlunoDisciplinaMatriculado to update in case it exists.
     */
    where: AlunoDisciplinaMatriculadoWhereUniqueInput
    /**
     * In case the AlunoDisciplinaMatriculado found by the `where` argument doesn't exist, create a new AlunoDisciplinaMatriculado with this data.
     */
    create: XOR<AlunoDisciplinaMatriculadoCreateInput, AlunoDisciplinaMatriculadoUncheckedCreateInput>
    /**
     * In case the AlunoDisciplinaMatriculado was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AlunoDisciplinaMatriculadoUpdateInput, AlunoDisciplinaMatriculadoUncheckedUpdateInput>
  }

  /**
   * AlunoDisciplinaMatriculado delete
   */
  export type AlunoDisciplinaMatriculadoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaMatriculado
     */
    select?: AlunoDisciplinaMatriculadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaMatriculadoInclude<ExtArgs> | null
    /**
     * Filter which AlunoDisciplinaMatriculado to delete.
     */
    where: AlunoDisciplinaMatriculadoWhereUniqueInput
  }

  /**
   * AlunoDisciplinaMatriculado deleteMany
   */
  export type AlunoDisciplinaMatriculadoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AlunoDisciplinaMatriculados to delete
     */
    where?: AlunoDisciplinaMatriculadoWhereInput
  }

  /**
   * AlunoDisciplinaMatriculado without action
   */
  export type AlunoDisciplinaMatriculadoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaMatriculado
     */
    select?: AlunoDisciplinaMatriculadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaMatriculadoInclude<ExtArgs> | null
  }


  /**
   * Model AlunoDisciplinaTrancado
   */

  export type AggregateAlunoDisciplinaTrancado = {
    _count: AlunoDisciplinaTrancadoCountAggregateOutputType | null
    _avg: AlunoDisciplinaTrancadoAvgAggregateOutputType | null
    _sum: AlunoDisciplinaTrancadoSumAggregateOutputType | null
    _min: AlunoDisciplinaTrancadoMinAggregateOutputType | null
    _max: AlunoDisciplinaTrancadoMaxAggregateOutputType | null
  }

  export type AlunoDisciplinaTrancadoAvgAggregateOutputType = {
    id: number | null
    alunoId: number | null
    disciplinaId: number | null
  }

  export type AlunoDisciplinaTrancadoSumAggregateOutputType = {
    id: number | null
    alunoId: number | null
    disciplinaId: number | null
  }

  export type AlunoDisciplinaTrancadoMinAggregateOutputType = {
    id: number | null
    alunoId: number | null
    disciplinaId: number | null
    data: Date | null
  }

  export type AlunoDisciplinaTrancadoMaxAggregateOutputType = {
    id: number | null
    alunoId: number | null
    disciplinaId: number | null
    data: Date | null
  }

  export type AlunoDisciplinaTrancadoCountAggregateOutputType = {
    id: number
    alunoId: number
    disciplinaId: number
    data: number
    _all: number
  }


  export type AlunoDisciplinaTrancadoAvgAggregateInputType = {
    id?: true
    alunoId?: true
    disciplinaId?: true
  }

  export type AlunoDisciplinaTrancadoSumAggregateInputType = {
    id?: true
    alunoId?: true
    disciplinaId?: true
  }

  export type AlunoDisciplinaTrancadoMinAggregateInputType = {
    id?: true
    alunoId?: true
    disciplinaId?: true
    data?: true
  }

  export type AlunoDisciplinaTrancadoMaxAggregateInputType = {
    id?: true
    alunoId?: true
    disciplinaId?: true
    data?: true
  }

  export type AlunoDisciplinaTrancadoCountAggregateInputType = {
    id?: true
    alunoId?: true
    disciplinaId?: true
    data?: true
    _all?: true
  }

  export type AlunoDisciplinaTrancadoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AlunoDisciplinaTrancado to aggregate.
     */
    where?: AlunoDisciplinaTrancadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlunoDisciplinaTrancados to fetch.
     */
    orderBy?: AlunoDisciplinaTrancadoOrderByWithRelationInput | AlunoDisciplinaTrancadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AlunoDisciplinaTrancadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlunoDisciplinaTrancados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlunoDisciplinaTrancados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AlunoDisciplinaTrancados
    **/
    _count?: true | AlunoDisciplinaTrancadoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AlunoDisciplinaTrancadoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AlunoDisciplinaTrancadoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AlunoDisciplinaTrancadoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AlunoDisciplinaTrancadoMaxAggregateInputType
  }

  export type GetAlunoDisciplinaTrancadoAggregateType<T extends AlunoDisciplinaTrancadoAggregateArgs> = {
        [P in keyof T & keyof AggregateAlunoDisciplinaTrancado]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAlunoDisciplinaTrancado[P]>
      : GetScalarType<T[P], AggregateAlunoDisciplinaTrancado[P]>
  }




  export type AlunoDisciplinaTrancadoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlunoDisciplinaTrancadoWhereInput
    orderBy?: AlunoDisciplinaTrancadoOrderByWithAggregationInput | AlunoDisciplinaTrancadoOrderByWithAggregationInput[]
    by: AlunoDisciplinaTrancadoScalarFieldEnum[] | AlunoDisciplinaTrancadoScalarFieldEnum
    having?: AlunoDisciplinaTrancadoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AlunoDisciplinaTrancadoCountAggregateInputType | true
    _avg?: AlunoDisciplinaTrancadoAvgAggregateInputType
    _sum?: AlunoDisciplinaTrancadoSumAggregateInputType
    _min?: AlunoDisciplinaTrancadoMinAggregateInputType
    _max?: AlunoDisciplinaTrancadoMaxAggregateInputType
  }

  export type AlunoDisciplinaTrancadoGroupByOutputType = {
    id: number
    alunoId: number
    disciplinaId: number
    data: Date
    _count: AlunoDisciplinaTrancadoCountAggregateOutputType | null
    _avg: AlunoDisciplinaTrancadoAvgAggregateOutputType | null
    _sum: AlunoDisciplinaTrancadoSumAggregateOutputType | null
    _min: AlunoDisciplinaTrancadoMinAggregateOutputType | null
    _max: AlunoDisciplinaTrancadoMaxAggregateOutputType | null
  }

  type GetAlunoDisciplinaTrancadoGroupByPayload<T extends AlunoDisciplinaTrancadoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AlunoDisciplinaTrancadoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AlunoDisciplinaTrancadoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AlunoDisciplinaTrancadoGroupByOutputType[P]>
            : GetScalarType<T[P], AlunoDisciplinaTrancadoGroupByOutputType[P]>
        }
      >
    >


  export type AlunoDisciplinaTrancadoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    alunoId?: boolean
    disciplinaId?: boolean
    data?: boolean
    aluno?: boolean | AlunoDefaultArgs<ExtArgs>
    disciplina?: boolean | DisciplinaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alunoDisciplinaTrancado"]>

  export type AlunoDisciplinaTrancadoSelectScalar = {
    id?: boolean
    alunoId?: boolean
    disciplinaId?: boolean
    data?: boolean
  }


  export type AlunoDisciplinaTrancadoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    aluno?: boolean | AlunoDefaultArgs<ExtArgs>
    disciplina?: boolean | DisciplinaDefaultArgs<ExtArgs>
  }


  export type $AlunoDisciplinaTrancadoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AlunoDisciplinaTrancado"
    objects: {
      aluno: Prisma.$AlunoPayload<ExtArgs>
      disciplina: Prisma.$DisciplinaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      alunoId: number
      disciplinaId: number
      data: Date
    }, ExtArgs["result"]["alunoDisciplinaTrancado"]>
    composites: {}
  }


  type AlunoDisciplinaTrancadoGetPayload<S extends boolean | null | undefined | AlunoDisciplinaTrancadoDefaultArgs> = $Result.GetResult<Prisma.$AlunoDisciplinaTrancadoPayload, S>

  type AlunoDisciplinaTrancadoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AlunoDisciplinaTrancadoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AlunoDisciplinaTrancadoCountAggregateInputType | true
    }

  export interface AlunoDisciplinaTrancadoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AlunoDisciplinaTrancado'], meta: { name: 'AlunoDisciplinaTrancado' } }
    /**
     * Find zero or one AlunoDisciplinaTrancado that matches the filter.
     * @param {AlunoDisciplinaTrancadoFindUniqueArgs} args - Arguments to find a AlunoDisciplinaTrancado
     * @example
     * // Get one AlunoDisciplinaTrancado
     * const alunoDisciplinaTrancado = await prisma.alunoDisciplinaTrancado.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends AlunoDisciplinaTrancadoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoDisciplinaTrancadoFindUniqueArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaTrancadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaTrancadoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one AlunoDisciplinaTrancado that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AlunoDisciplinaTrancadoFindUniqueOrThrowArgs} args - Arguments to find a AlunoDisciplinaTrancado
     * @example
     * // Get one AlunoDisciplinaTrancado
     * const alunoDisciplinaTrancado = await prisma.alunoDisciplinaTrancado.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends AlunoDisciplinaTrancadoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoDisciplinaTrancadoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaTrancadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaTrancadoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first AlunoDisciplinaTrancado that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaTrancadoFindFirstArgs} args - Arguments to find a AlunoDisciplinaTrancado
     * @example
     * // Get one AlunoDisciplinaTrancado
     * const alunoDisciplinaTrancado = await prisma.alunoDisciplinaTrancado.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends AlunoDisciplinaTrancadoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoDisciplinaTrancadoFindFirstArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaTrancadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaTrancadoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first AlunoDisciplinaTrancado that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaTrancadoFindFirstOrThrowArgs} args - Arguments to find a AlunoDisciplinaTrancado
     * @example
     * // Get one AlunoDisciplinaTrancado
     * const alunoDisciplinaTrancado = await prisma.alunoDisciplinaTrancado.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends AlunoDisciplinaTrancadoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoDisciplinaTrancadoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaTrancadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaTrancadoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more AlunoDisciplinaTrancados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaTrancadoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AlunoDisciplinaTrancados
     * const alunoDisciplinaTrancados = await prisma.alunoDisciplinaTrancado.findMany()
     * 
     * // Get first 10 AlunoDisciplinaTrancados
     * const alunoDisciplinaTrancados = await prisma.alunoDisciplinaTrancado.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const alunoDisciplinaTrancadoWithIdOnly = await prisma.alunoDisciplinaTrancado.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends AlunoDisciplinaTrancadoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoDisciplinaTrancadoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlunoDisciplinaTrancadoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a AlunoDisciplinaTrancado.
     * @param {AlunoDisciplinaTrancadoCreateArgs} args - Arguments to create a AlunoDisciplinaTrancado.
     * @example
     * // Create one AlunoDisciplinaTrancado
     * const AlunoDisciplinaTrancado = await prisma.alunoDisciplinaTrancado.create({
     *   data: {
     *     // ... data to create a AlunoDisciplinaTrancado
     *   }
     * })
     * 
    **/
    create<T extends AlunoDisciplinaTrancadoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoDisciplinaTrancadoCreateArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaTrancadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaTrancadoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many AlunoDisciplinaTrancados.
     * @param {AlunoDisciplinaTrancadoCreateManyArgs} args - Arguments to create many AlunoDisciplinaTrancados.
     * @example
     * // Create many AlunoDisciplinaTrancados
     * const alunoDisciplinaTrancado = await prisma.alunoDisciplinaTrancado.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends AlunoDisciplinaTrancadoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoDisciplinaTrancadoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a AlunoDisciplinaTrancado.
     * @param {AlunoDisciplinaTrancadoDeleteArgs} args - Arguments to delete one AlunoDisciplinaTrancado.
     * @example
     * // Delete one AlunoDisciplinaTrancado
     * const AlunoDisciplinaTrancado = await prisma.alunoDisciplinaTrancado.delete({
     *   where: {
     *     // ... filter to delete one AlunoDisciplinaTrancado
     *   }
     * })
     * 
    **/
    delete<T extends AlunoDisciplinaTrancadoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoDisciplinaTrancadoDeleteArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaTrancadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaTrancadoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one AlunoDisciplinaTrancado.
     * @param {AlunoDisciplinaTrancadoUpdateArgs} args - Arguments to update one AlunoDisciplinaTrancado.
     * @example
     * // Update one AlunoDisciplinaTrancado
     * const alunoDisciplinaTrancado = await prisma.alunoDisciplinaTrancado.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends AlunoDisciplinaTrancadoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoDisciplinaTrancadoUpdateArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaTrancadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaTrancadoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more AlunoDisciplinaTrancados.
     * @param {AlunoDisciplinaTrancadoDeleteManyArgs} args - Arguments to filter AlunoDisciplinaTrancados to delete.
     * @example
     * // Delete a few AlunoDisciplinaTrancados
     * const { count } = await prisma.alunoDisciplinaTrancado.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends AlunoDisciplinaTrancadoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoDisciplinaTrancadoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AlunoDisciplinaTrancados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaTrancadoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AlunoDisciplinaTrancados
     * const alunoDisciplinaTrancado = await prisma.alunoDisciplinaTrancado.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends AlunoDisciplinaTrancadoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoDisciplinaTrancadoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AlunoDisciplinaTrancado.
     * @param {AlunoDisciplinaTrancadoUpsertArgs} args - Arguments to update or create a AlunoDisciplinaTrancado.
     * @example
     * // Update or create a AlunoDisciplinaTrancado
     * const alunoDisciplinaTrancado = await prisma.alunoDisciplinaTrancado.upsert({
     *   create: {
     *     // ... data to create a AlunoDisciplinaTrancado
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AlunoDisciplinaTrancado we want to update
     *   }
     * })
    **/
    upsert<T extends AlunoDisciplinaTrancadoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoDisciplinaTrancadoUpsertArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaTrancadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaTrancadoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of AlunoDisciplinaTrancados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaTrancadoCountArgs} args - Arguments to filter AlunoDisciplinaTrancados to count.
     * @example
     * // Count the number of AlunoDisciplinaTrancados
     * const count = await prisma.alunoDisciplinaTrancado.count({
     *   where: {
     *     // ... the filter for the AlunoDisciplinaTrancados we want to count
     *   }
     * })
    **/
    count<T extends AlunoDisciplinaTrancadoCountArgs>(
      args?: Subset<T, AlunoDisciplinaTrancadoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AlunoDisciplinaTrancadoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AlunoDisciplinaTrancado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaTrancadoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AlunoDisciplinaTrancadoAggregateArgs>(args: Subset<T, AlunoDisciplinaTrancadoAggregateArgs>): Prisma.PrismaPromise<GetAlunoDisciplinaTrancadoAggregateType<T>>

    /**
     * Group by AlunoDisciplinaTrancado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaTrancadoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AlunoDisciplinaTrancadoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AlunoDisciplinaTrancadoGroupByArgs['orderBy'] }
        : { orderBy?: AlunoDisciplinaTrancadoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AlunoDisciplinaTrancadoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlunoDisciplinaTrancadoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AlunoDisciplinaTrancado model
   */
  readonly fields: AlunoDisciplinaTrancadoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AlunoDisciplinaTrancado.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AlunoDisciplinaTrancadoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    aluno<T extends AlunoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AlunoDefaultArgs<ExtArgs>>): Prisma__AlunoClient<$Result.GetResult<Prisma.$AlunoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    disciplina<T extends DisciplinaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DisciplinaDefaultArgs<ExtArgs>>): Prisma__DisciplinaClient<$Result.GetResult<Prisma.$DisciplinaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the AlunoDisciplinaTrancado model
   */ 
  interface AlunoDisciplinaTrancadoFieldRefs {
    readonly id: FieldRef<"AlunoDisciplinaTrancado", 'Int'>
    readonly alunoId: FieldRef<"AlunoDisciplinaTrancado", 'Int'>
    readonly disciplinaId: FieldRef<"AlunoDisciplinaTrancado", 'Int'>
    readonly data: FieldRef<"AlunoDisciplinaTrancado", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AlunoDisciplinaTrancado findUnique
   */
  export type AlunoDisciplinaTrancadoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaTrancado
     */
    select?: AlunoDisciplinaTrancadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaTrancadoInclude<ExtArgs> | null
    /**
     * Filter, which AlunoDisciplinaTrancado to fetch.
     */
    where: AlunoDisciplinaTrancadoWhereUniqueInput
  }

  /**
   * AlunoDisciplinaTrancado findUniqueOrThrow
   */
  export type AlunoDisciplinaTrancadoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaTrancado
     */
    select?: AlunoDisciplinaTrancadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaTrancadoInclude<ExtArgs> | null
    /**
     * Filter, which AlunoDisciplinaTrancado to fetch.
     */
    where: AlunoDisciplinaTrancadoWhereUniqueInput
  }

  /**
   * AlunoDisciplinaTrancado findFirst
   */
  export type AlunoDisciplinaTrancadoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaTrancado
     */
    select?: AlunoDisciplinaTrancadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaTrancadoInclude<ExtArgs> | null
    /**
     * Filter, which AlunoDisciplinaTrancado to fetch.
     */
    where?: AlunoDisciplinaTrancadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlunoDisciplinaTrancados to fetch.
     */
    orderBy?: AlunoDisciplinaTrancadoOrderByWithRelationInput | AlunoDisciplinaTrancadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AlunoDisciplinaTrancados.
     */
    cursor?: AlunoDisciplinaTrancadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlunoDisciplinaTrancados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlunoDisciplinaTrancados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AlunoDisciplinaTrancados.
     */
    distinct?: AlunoDisciplinaTrancadoScalarFieldEnum | AlunoDisciplinaTrancadoScalarFieldEnum[]
  }

  /**
   * AlunoDisciplinaTrancado findFirstOrThrow
   */
  export type AlunoDisciplinaTrancadoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaTrancado
     */
    select?: AlunoDisciplinaTrancadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaTrancadoInclude<ExtArgs> | null
    /**
     * Filter, which AlunoDisciplinaTrancado to fetch.
     */
    where?: AlunoDisciplinaTrancadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlunoDisciplinaTrancados to fetch.
     */
    orderBy?: AlunoDisciplinaTrancadoOrderByWithRelationInput | AlunoDisciplinaTrancadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AlunoDisciplinaTrancados.
     */
    cursor?: AlunoDisciplinaTrancadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlunoDisciplinaTrancados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlunoDisciplinaTrancados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AlunoDisciplinaTrancados.
     */
    distinct?: AlunoDisciplinaTrancadoScalarFieldEnum | AlunoDisciplinaTrancadoScalarFieldEnum[]
  }

  /**
   * AlunoDisciplinaTrancado findMany
   */
  export type AlunoDisciplinaTrancadoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaTrancado
     */
    select?: AlunoDisciplinaTrancadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaTrancadoInclude<ExtArgs> | null
    /**
     * Filter, which AlunoDisciplinaTrancados to fetch.
     */
    where?: AlunoDisciplinaTrancadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlunoDisciplinaTrancados to fetch.
     */
    orderBy?: AlunoDisciplinaTrancadoOrderByWithRelationInput | AlunoDisciplinaTrancadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AlunoDisciplinaTrancados.
     */
    cursor?: AlunoDisciplinaTrancadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlunoDisciplinaTrancados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlunoDisciplinaTrancados.
     */
    skip?: number
    distinct?: AlunoDisciplinaTrancadoScalarFieldEnum | AlunoDisciplinaTrancadoScalarFieldEnum[]
  }

  /**
   * AlunoDisciplinaTrancado create
   */
  export type AlunoDisciplinaTrancadoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaTrancado
     */
    select?: AlunoDisciplinaTrancadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaTrancadoInclude<ExtArgs> | null
    /**
     * The data needed to create a AlunoDisciplinaTrancado.
     */
    data: XOR<AlunoDisciplinaTrancadoCreateInput, AlunoDisciplinaTrancadoUncheckedCreateInput>
  }

  /**
   * AlunoDisciplinaTrancado createMany
   */
  export type AlunoDisciplinaTrancadoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AlunoDisciplinaTrancados.
     */
    data: AlunoDisciplinaTrancadoCreateManyInput | AlunoDisciplinaTrancadoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AlunoDisciplinaTrancado update
   */
  export type AlunoDisciplinaTrancadoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaTrancado
     */
    select?: AlunoDisciplinaTrancadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaTrancadoInclude<ExtArgs> | null
    /**
     * The data needed to update a AlunoDisciplinaTrancado.
     */
    data: XOR<AlunoDisciplinaTrancadoUpdateInput, AlunoDisciplinaTrancadoUncheckedUpdateInput>
    /**
     * Choose, which AlunoDisciplinaTrancado to update.
     */
    where: AlunoDisciplinaTrancadoWhereUniqueInput
  }

  /**
   * AlunoDisciplinaTrancado updateMany
   */
  export type AlunoDisciplinaTrancadoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AlunoDisciplinaTrancados.
     */
    data: XOR<AlunoDisciplinaTrancadoUpdateManyMutationInput, AlunoDisciplinaTrancadoUncheckedUpdateManyInput>
    /**
     * Filter which AlunoDisciplinaTrancados to update
     */
    where?: AlunoDisciplinaTrancadoWhereInput
  }

  /**
   * AlunoDisciplinaTrancado upsert
   */
  export type AlunoDisciplinaTrancadoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaTrancado
     */
    select?: AlunoDisciplinaTrancadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaTrancadoInclude<ExtArgs> | null
    /**
     * The filter to search for the AlunoDisciplinaTrancado to update in case it exists.
     */
    where: AlunoDisciplinaTrancadoWhereUniqueInput
    /**
     * In case the AlunoDisciplinaTrancado found by the `where` argument doesn't exist, create a new AlunoDisciplinaTrancado with this data.
     */
    create: XOR<AlunoDisciplinaTrancadoCreateInput, AlunoDisciplinaTrancadoUncheckedCreateInput>
    /**
     * In case the AlunoDisciplinaTrancado was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AlunoDisciplinaTrancadoUpdateInput, AlunoDisciplinaTrancadoUncheckedUpdateInput>
  }

  /**
   * AlunoDisciplinaTrancado delete
   */
  export type AlunoDisciplinaTrancadoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaTrancado
     */
    select?: AlunoDisciplinaTrancadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaTrancadoInclude<ExtArgs> | null
    /**
     * Filter which AlunoDisciplinaTrancado to delete.
     */
    where: AlunoDisciplinaTrancadoWhereUniqueInput
  }

  /**
   * AlunoDisciplinaTrancado deleteMany
   */
  export type AlunoDisciplinaTrancadoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AlunoDisciplinaTrancados to delete
     */
    where?: AlunoDisciplinaTrancadoWhereInput
  }

  /**
   * AlunoDisciplinaTrancado without action
   */
  export type AlunoDisciplinaTrancadoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaTrancado
     */
    select?: AlunoDisciplinaTrancadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaTrancadoInclude<ExtArgs> | null
  }


  /**
   * Model AlunoDisciplinaCursado
   */

  export type AggregateAlunoDisciplinaCursado = {
    _count: AlunoDisciplinaCursadoCountAggregateOutputType | null
    _avg: AlunoDisciplinaCursadoAvgAggregateOutputType | null
    _sum: AlunoDisciplinaCursadoSumAggregateOutputType | null
    _min: AlunoDisciplinaCursadoMinAggregateOutputType | null
    _max: AlunoDisciplinaCursadoMaxAggregateOutputType | null
  }

  export type AlunoDisciplinaCursadoAvgAggregateOutputType = {
    id: number | null
    alunoId: number | null
    disciplinaId: number | null
  }

  export type AlunoDisciplinaCursadoSumAggregateOutputType = {
    id: number | null
    alunoId: number | null
    disciplinaId: number | null
  }

  export type AlunoDisciplinaCursadoMinAggregateOutputType = {
    id: number | null
    alunoId: number | null
    disciplinaId: number | null
    data: Date | null
  }

  export type AlunoDisciplinaCursadoMaxAggregateOutputType = {
    id: number | null
    alunoId: number | null
    disciplinaId: number | null
    data: Date | null
  }

  export type AlunoDisciplinaCursadoCountAggregateOutputType = {
    id: number
    alunoId: number
    disciplinaId: number
    data: number
    _all: number
  }


  export type AlunoDisciplinaCursadoAvgAggregateInputType = {
    id?: true
    alunoId?: true
    disciplinaId?: true
  }

  export type AlunoDisciplinaCursadoSumAggregateInputType = {
    id?: true
    alunoId?: true
    disciplinaId?: true
  }

  export type AlunoDisciplinaCursadoMinAggregateInputType = {
    id?: true
    alunoId?: true
    disciplinaId?: true
    data?: true
  }

  export type AlunoDisciplinaCursadoMaxAggregateInputType = {
    id?: true
    alunoId?: true
    disciplinaId?: true
    data?: true
  }

  export type AlunoDisciplinaCursadoCountAggregateInputType = {
    id?: true
    alunoId?: true
    disciplinaId?: true
    data?: true
    _all?: true
  }

  export type AlunoDisciplinaCursadoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AlunoDisciplinaCursado to aggregate.
     */
    where?: AlunoDisciplinaCursadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlunoDisciplinaCursados to fetch.
     */
    orderBy?: AlunoDisciplinaCursadoOrderByWithRelationInput | AlunoDisciplinaCursadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AlunoDisciplinaCursadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlunoDisciplinaCursados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlunoDisciplinaCursados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AlunoDisciplinaCursados
    **/
    _count?: true | AlunoDisciplinaCursadoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AlunoDisciplinaCursadoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AlunoDisciplinaCursadoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AlunoDisciplinaCursadoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AlunoDisciplinaCursadoMaxAggregateInputType
  }

  export type GetAlunoDisciplinaCursadoAggregateType<T extends AlunoDisciplinaCursadoAggregateArgs> = {
        [P in keyof T & keyof AggregateAlunoDisciplinaCursado]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAlunoDisciplinaCursado[P]>
      : GetScalarType<T[P], AggregateAlunoDisciplinaCursado[P]>
  }




  export type AlunoDisciplinaCursadoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlunoDisciplinaCursadoWhereInput
    orderBy?: AlunoDisciplinaCursadoOrderByWithAggregationInput | AlunoDisciplinaCursadoOrderByWithAggregationInput[]
    by: AlunoDisciplinaCursadoScalarFieldEnum[] | AlunoDisciplinaCursadoScalarFieldEnum
    having?: AlunoDisciplinaCursadoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AlunoDisciplinaCursadoCountAggregateInputType | true
    _avg?: AlunoDisciplinaCursadoAvgAggregateInputType
    _sum?: AlunoDisciplinaCursadoSumAggregateInputType
    _min?: AlunoDisciplinaCursadoMinAggregateInputType
    _max?: AlunoDisciplinaCursadoMaxAggregateInputType
  }

  export type AlunoDisciplinaCursadoGroupByOutputType = {
    id: number
    alunoId: number
    disciplinaId: number
    data: Date
    _count: AlunoDisciplinaCursadoCountAggregateOutputType | null
    _avg: AlunoDisciplinaCursadoAvgAggregateOutputType | null
    _sum: AlunoDisciplinaCursadoSumAggregateOutputType | null
    _min: AlunoDisciplinaCursadoMinAggregateOutputType | null
    _max: AlunoDisciplinaCursadoMaxAggregateOutputType | null
  }

  type GetAlunoDisciplinaCursadoGroupByPayload<T extends AlunoDisciplinaCursadoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AlunoDisciplinaCursadoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AlunoDisciplinaCursadoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AlunoDisciplinaCursadoGroupByOutputType[P]>
            : GetScalarType<T[P], AlunoDisciplinaCursadoGroupByOutputType[P]>
        }
      >
    >


  export type AlunoDisciplinaCursadoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    alunoId?: boolean
    disciplinaId?: boolean
    data?: boolean
    aluno?: boolean | AlunoDefaultArgs<ExtArgs>
    disciplina?: boolean | DisciplinaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alunoDisciplinaCursado"]>

  export type AlunoDisciplinaCursadoSelectScalar = {
    id?: boolean
    alunoId?: boolean
    disciplinaId?: boolean
    data?: boolean
  }


  export type AlunoDisciplinaCursadoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    aluno?: boolean | AlunoDefaultArgs<ExtArgs>
    disciplina?: boolean | DisciplinaDefaultArgs<ExtArgs>
  }


  export type $AlunoDisciplinaCursadoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AlunoDisciplinaCursado"
    objects: {
      aluno: Prisma.$AlunoPayload<ExtArgs>
      disciplina: Prisma.$DisciplinaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      alunoId: number
      disciplinaId: number
      data: Date
    }, ExtArgs["result"]["alunoDisciplinaCursado"]>
    composites: {}
  }


  type AlunoDisciplinaCursadoGetPayload<S extends boolean | null | undefined | AlunoDisciplinaCursadoDefaultArgs> = $Result.GetResult<Prisma.$AlunoDisciplinaCursadoPayload, S>

  type AlunoDisciplinaCursadoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AlunoDisciplinaCursadoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AlunoDisciplinaCursadoCountAggregateInputType | true
    }

  export interface AlunoDisciplinaCursadoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AlunoDisciplinaCursado'], meta: { name: 'AlunoDisciplinaCursado' } }
    /**
     * Find zero or one AlunoDisciplinaCursado that matches the filter.
     * @param {AlunoDisciplinaCursadoFindUniqueArgs} args - Arguments to find a AlunoDisciplinaCursado
     * @example
     * // Get one AlunoDisciplinaCursado
     * const alunoDisciplinaCursado = await prisma.alunoDisciplinaCursado.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends AlunoDisciplinaCursadoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoDisciplinaCursadoFindUniqueArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaCursadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaCursadoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one AlunoDisciplinaCursado that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AlunoDisciplinaCursadoFindUniqueOrThrowArgs} args - Arguments to find a AlunoDisciplinaCursado
     * @example
     * // Get one AlunoDisciplinaCursado
     * const alunoDisciplinaCursado = await prisma.alunoDisciplinaCursado.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends AlunoDisciplinaCursadoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoDisciplinaCursadoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaCursadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaCursadoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first AlunoDisciplinaCursado that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaCursadoFindFirstArgs} args - Arguments to find a AlunoDisciplinaCursado
     * @example
     * // Get one AlunoDisciplinaCursado
     * const alunoDisciplinaCursado = await prisma.alunoDisciplinaCursado.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends AlunoDisciplinaCursadoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoDisciplinaCursadoFindFirstArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaCursadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaCursadoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first AlunoDisciplinaCursado that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaCursadoFindFirstOrThrowArgs} args - Arguments to find a AlunoDisciplinaCursado
     * @example
     * // Get one AlunoDisciplinaCursado
     * const alunoDisciplinaCursado = await prisma.alunoDisciplinaCursado.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends AlunoDisciplinaCursadoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoDisciplinaCursadoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaCursadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaCursadoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more AlunoDisciplinaCursados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaCursadoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AlunoDisciplinaCursados
     * const alunoDisciplinaCursados = await prisma.alunoDisciplinaCursado.findMany()
     * 
     * // Get first 10 AlunoDisciplinaCursados
     * const alunoDisciplinaCursados = await prisma.alunoDisciplinaCursado.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const alunoDisciplinaCursadoWithIdOnly = await prisma.alunoDisciplinaCursado.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends AlunoDisciplinaCursadoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoDisciplinaCursadoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlunoDisciplinaCursadoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a AlunoDisciplinaCursado.
     * @param {AlunoDisciplinaCursadoCreateArgs} args - Arguments to create a AlunoDisciplinaCursado.
     * @example
     * // Create one AlunoDisciplinaCursado
     * const AlunoDisciplinaCursado = await prisma.alunoDisciplinaCursado.create({
     *   data: {
     *     // ... data to create a AlunoDisciplinaCursado
     *   }
     * })
     * 
    **/
    create<T extends AlunoDisciplinaCursadoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoDisciplinaCursadoCreateArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaCursadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaCursadoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many AlunoDisciplinaCursados.
     * @param {AlunoDisciplinaCursadoCreateManyArgs} args - Arguments to create many AlunoDisciplinaCursados.
     * @example
     * // Create many AlunoDisciplinaCursados
     * const alunoDisciplinaCursado = await prisma.alunoDisciplinaCursado.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends AlunoDisciplinaCursadoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoDisciplinaCursadoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a AlunoDisciplinaCursado.
     * @param {AlunoDisciplinaCursadoDeleteArgs} args - Arguments to delete one AlunoDisciplinaCursado.
     * @example
     * // Delete one AlunoDisciplinaCursado
     * const AlunoDisciplinaCursado = await prisma.alunoDisciplinaCursado.delete({
     *   where: {
     *     // ... filter to delete one AlunoDisciplinaCursado
     *   }
     * })
     * 
    **/
    delete<T extends AlunoDisciplinaCursadoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoDisciplinaCursadoDeleteArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaCursadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaCursadoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one AlunoDisciplinaCursado.
     * @param {AlunoDisciplinaCursadoUpdateArgs} args - Arguments to update one AlunoDisciplinaCursado.
     * @example
     * // Update one AlunoDisciplinaCursado
     * const alunoDisciplinaCursado = await prisma.alunoDisciplinaCursado.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends AlunoDisciplinaCursadoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoDisciplinaCursadoUpdateArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaCursadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaCursadoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more AlunoDisciplinaCursados.
     * @param {AlunoDisciplinaCursadoDeleteManyArgs} args - Arguments to filter AlunoDisciplinaCursados to delete.
     * @example
     * // Delete a few AlunoDisciplinaCursados
     * const { count } = await prisma.alunoDisciplinaCursado.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends AlunoDisciplinaCursadoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AlunoDisciplinaCursadoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AlunoDisciplinaCursados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaCursadoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AlunoDisciplinaCursados
     * const alunoDisciplinaCursado = await prisma.alunoDisciplinaCursado.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends AlunoDisciplinaCursadoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoDisciplinaCursadoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AlunoDisciplinaCursado.
     * @param {AlunoDisciplinaCursadoUpsertArgs} args - Arguments to update or create a AlunoDisciplinaCursado.
     * @example
     * // Update or create a AlunoDisciplinaCursado
     * const alunoDisciplinaCursado = await prisma.alunoDisciplinaCursado.upsert({
     *   create: {
     *     // ... data to create a AlunoDisciplinaCursado
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AlunoDisciplinaCursado we want to update
     *   }
     * })
    **/
    upsert<T extends AlunoDisciplinaCursadoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, AlunoDisciplinaCursadoUpsertArgs<ExtArgs>>
    ): Prisma__AlunoDisciplinaCursadoClient<$Result.GetResult<Prisma.$AlunoDisciplinaCursadoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of AlunoDisciplinaCursados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaCursadoCountArgs} args - Arguments to filter AlunoDisciplinaCursados to count.
     * @example
     * // Count the number of AlunoDisciplinaCursados
     * const count = await prisma.alunoDisciplinaCursado.count({
     *   where: {
     *     // ... the filter for the AlunoDisciplinaCursados we want to count
     *   }
     * })
    **/
    count<T extends AlunoDisciplinaCursadoCountArgs>(
      args?: Subset<T, AlunoDisciplinaCursadoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AlunoDisciplinaCursadoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AlunoDisciplinaCursado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaCursadoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AlunoDisciplinaCursadoAggregateArgs>(args: Subset<T, AlunoDisciplinaCursadoAggregateArgs>): Prisma.PrismaPromise<GetAlunoDisciplinaCursadoAggregateType<T>>

    /**
     * Group by AlunoDisciplinaCursado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlunoDisciplinaCursadoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AlunoDisciplinaCursadoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AlunoDisciplinaCursadoGroupByArgs['orderBy'] }
        : { orderBy?: AlunoDisciplinaCursadoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AlunoDisciplinaCursadoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlunoDisciplinaCursadoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AlunoDisciplinaCursado model
   */
  readonly fields: AlunoDisciplinaCursadoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AlunoDisciplinaCursado.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AlunoDisciplinaCursadoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    aluno<T extends AlunoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AlunoDefaultArgs<ExtArgs>>): Prisma__AlunoClient<$Result.GetResult<Prisma.$AlunoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    disciplina<T extends DisciplinaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DisciplinaDefaultArgs<ExtArgs>>): Prisma__DisciplinaClient<$Result.GetResult<Prisma.$DisciplinaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the AlunoDisciplinaCursado model
   */ 
  interface AlunoDisciplinaCursadoFieldRefs {
    readonly id: FieldRef<"AlunoDisciplinaCursado", 'Int'>
    readonly alunoId: FieldRef<"AlunoDisciplinaCursado", 'Int'>
    readonly disciplinaId: FieldRef<"AlunoDisciplinaCursado", 'Int'>
    readonly data: FieldRef<"AlunoDisciplinaCursado", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AlunoDisciplinaCursado findUnique
   */
  export type AlunoDisciplinaCursadoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaCursado
     */
    select?: AlunoDisciplinaCursadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaCursadoInclude<ExtArgs> | null
    /**
     * Filter, which AlunoDisciplinaCursado to fetch.
     */
    where: AlunoDisciplinaCursadoWhereUniqueInput
  }

  /**
   * AlunoDisciplinaCursado findUniqueOrThrow
   */
  export type AlunoDisciplinaCursadoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaCursado
     */
    select?: AlunoDisciplinaCursadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaCursadoInclude<ExtArgs> | null
    /**
     * Filter, which AlunoDisciplinaCursado to fetch.
     */
    where: AlunoDisciplinaCursadoWhereUniqueInput
  }

  /**
   * AlunoDisciplinaCursado findFirst
   */
  export type AlunoDisciplinaCursadoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaCursado
     */
    select?: AlunoDisciplinaCursadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaCursadoInclude<ExtArgs> | null
    /**
     * Filter, which AlunoDisciplinaCursado to fetch.
     */
    where?: AlunoDisciplinaCursadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlunoDisciplinaCursados to fetch.
     */
    orderBy?: AlunoDisciplinaCursadoOrderByWithRelationInput | AlunoDisciplinaCursadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AlunoDisciplinaCursados.
     */
    cursor?: AlunoDisciplinaCursadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlunoDisciplinaCursados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlunoDisciplinaCursados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AlunoDisciplinaCursados.
     */
    distinct?: AlunoDisciplinaCursadoScalarFieldEnum | AlunoDisciplinaCursadoScalarFieldEnum[]
  }

  /**
   * AlunoDisciplinaCursado findFirstOrThrow
   */
  export type AlunoDisciplinaCursadoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaCursado
     */
    select?: AlunoDisciplinaCursadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaCursadoInclude<ExtArgs> | null
    /**
     * Filter, which AlunoDisciplinaCursado to fetch.
     */
    where?: AlunoDisciplinaCursadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlunoDisciplinaCursados to fetch.
     */
    orderBy?: AlunoDisciplinaCursadoOrderByWithRelationInput | AlunoDisciplinaCursadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AlunoDisciplinaCursados.
     */
    cursor?: AlunoDisciplinaCursadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlunoDisciplinaCursados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlunoDisciplinaCursados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AlunoDisciplinaCursados.
     */
    distinct?: AlunoDisciplinaCursadoScalarFieldEnum | AlunoDisciplinaCursadoScalarFieldEnum[]
  }

  /**
   * AlunoDisciplinaCursado findMany
   */
  export type AlunoDisciplinaCursadoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaCursado
     */
    select?: AlunoDisciplinaCursadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaCursadoInclude<ExtArgs> | null
    /**
     * Filter, which AlunoDisciplinaCursados to fetch.
     */
    where?: AlunoDisciplinaCursadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlunoDisciplinaCursados to fetch.
     */
    orderBy?: AlunoDisciplinaCursadoOrderByWithRelationInput | AlunoDisciplinaCursadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AlunoDisciplinaCursados.
     */
    cursor?: AlunoDisciplinaCursadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlunoDisciplinaCursados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlunoDisciplinaCursados.
     */
    skip?: number
    distinct?: AlunoDisciplinaCursadoScalarFieldEnum | AlunoDisciplinaCursadoScalarFieldEnum[]
  }

  /**
   * AlunoDisciplinaCursado create
   */
  export type AlunoDisciplinaCursadoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaCursado
     */
    select?: AlunoDisciplinaCursadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaCursadoInclude<ExtArgs> | null
    /**
     * The data needed to create a AlunoDisciplinaCursado.
     */
    data: XOR<AlunoDisciplinaCursadoCreateInput, AlunoDisciplinaCursadoUncheckedCreateInput>
  }

  /**
   * AlunoDisciplinaCursado createMany
   */
  export type AlunoDisciplinaCursadoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AlunoDisciplinaCursados.
     */
    data: AlunoDisciplinaCursadoCreateManyInput | AlunoDisciplinaCursadoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AlunoDisciplinaCursado update
   */
  export type AlunoDisciplinaCursadoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaCursado
     */
    select?: AlunoDisciplinaCursadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaCursadoInclude<ExtArgs> | null
    /**
     * The data needed to update a AlunoDisciplinaCursado.
     */
    data: XOR<AlunoDisciplinaCursadoUpdateInput, AlunoDisciplinaCursadoUncheckedUpdateInput>
    /**
     * Choose, which AlunoDisciplinaCursado to update.
     */
    where: AlunoDisciplinaCursadoWhereUniqueInput
  }

  /**
   * AlunoDisciplinaCursado updateMany
   */
  export type AlunoDisciplinaCursadoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AlunoDisciplinaCursados.
     */
    data: XOR<AlunoDisciplinaCursadoUpdateManyMutationInput, AlunoDisciplinaCursadoUncheckedUpdateManyInput>
    /**
     * Filter which AlunoDisciplinaCursados to update
     */
    where?: AlunoDisciplinaCursadoWhereInput
  }

  /**
   * AlunoDisciplinaCursado upsert
   */
  export type AlunoDisciplinaCursadoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaCursado
     */
    select?: AlunoDisciplinaCursadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaCursadoInclude<ExtArgs> | null
    /**
     * The filter to search for the AlunoDisciplinaCursado to update in case it exists.
     */
    where: AlunoDisciplinaCursadoWhereUniqueInput
    /**
     * In case the AlunoDisciplinaCursado found by the `where` argument doesn't exist, create a new AlunoDisciplinaCursado with this data.
     */
    create: XOR<AlunoDisciplinaCursadoCreateInput, AlunoDisciplinaCursadoUncheckedCreateInput>
    /**
     * In case the AlunoDisciplinaCursado was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AlunoDisciplinaCursadoUpdateInput, AlunoDisciplinaCursadoUncheckedUpdateInput>
  }

  /**
   * AlunoDisciplinaCursado delete
   */
  export type AlunoDisciplinaCursadoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaCursado
     */
    select?: AlunoDisciplinaCursadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaCursadoInclude<ExtArgs> | null
    /**
     * Filter which AlunoDisciplinaCursado to delete.
     */
    where: AlunoDisciplinaCursadoWhereUniqueInput
  }

  /**
   * AlunoDisciplinaCursado deleteMany
   */
  export type AlunoDisciplinaCursadoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AlunoDisciplinaCursados to delete
     */
    where?: AlunoDisciplinaCursadoWhereInput
  }

  /**
   * AlunoDisciplinaCursado without action
   */
  export type AlunoDisciplinaCursadoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlunoDisciplinaCursado
     */
    select?: AlunoDisciplinaCursadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlunoDisciplinaCursadoInclude<ExtArgs> | null
  }


  /**
   * Model CursoDisciplina
   */

  export type AggregateCursoDisciplina = {
    _count: CursoDisciplinaCountAggregateOutputType | null
    _avg: CursoDisciplinaAvgAggregateOutputType | null
    _sum: CursoDisciplinaSumAggregateOutputType | null
    _min: CursoDisciplinaMinAggregateOutputType | null
    _max: CursoDisciplinaMaxAggregateOutputType | null
  }

  export type CursoDisciplinaAvgAggregateOutputType = {
    cursoId: number | null
    disciplinaId: number | null
  }

  export type CursoDisciplinaSumAggregateOutputType = {
    cursoId: number | null
    disciplinaId: number | null
  }

  export type CursoDisciplinaMinAggregateOutputType = {
    cursoId: number | null
    disciplinaId: number | null
  }

  export type CursoDisciplinaMaxAggregateOutputType = {
    cursoId: number | null
    disciplinaId: number | null
  }

  export type CursoDisciplinaCountAggregateOutputType = {
    cursoId: number
    disciplinaId: number
    _all: number
  }


  export type CursoDisciplinaAvgAggregateInputType = {
    cursoId?: true
    disciplinaId?: true
  }

  export type CursoDisciplinaSumAggregateInputType = {
    cursoId?: true
    disciplinaId?: true
  }

  export type CursoDisciplinaMinAggregateInputType = {
    cursoId?: true
    disciplinaId?: true
  }

  export type CursoDisciplinaMaxAggregateInputType = {
    cursoId?: true
    disciplinaId?: true
  }

  export type CursoDisciplinaCountAggregateInputType = {
    cursoId?: true
    disciplinaId?: true
    _all?: true
  }

  export type CursoDisciplinaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CursoDisciplina to aggregate.
     */
    where?: CursoDisciplinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CursoDisciplinas to fetch.
     */
    orderBy?: CursoDisciplinaOrderByWithRelationInput | CursoDisciplinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CursoDisciplinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CursoDisciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CursoDisciplinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CursoDisciplinas
    **/
    _count?: true | CursoDisciplinaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CursoDisciplinaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CursoDisciplinaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CursoDisciplinaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CursoDisciplinaMaxAggregateInputType
  }

  export type GetCursoDisciplinaAggregateType<T extends CursoDisciplinaAggregateArgs> = {
        [P in keyof T & keyof AggregateCursoDisciplina]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCursoDisciplina[P]>
      : GetScalarType<T[P], AggregateCursoDisciplina[P]>
  }




  export type CursoDisciplinaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CursoDisciplinaWhereInput
    orderBy?: CursoDisciplinaOrderByWithAggregationInput | CursoDisciplinaOrderByWithAggregationInput[]
    by: CursoDisciplinaScalarFieldEnum[] | CursoDisciplinaScalarFieldEnum
    having?: CursoDisciplinaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CursoDisciplinaCountAggregateInputType | true
    _avg?: CursoDisciplinaAvgAggregateInputType
    _sum?: CursoDisciplinaSumAggregateInputType
    _min?: CursoDisciplinaMinAggregateInputType
    _max?: CursoDisciplinaMaxAggregateInputType
  }

  export type CursoDisciplinaGroupByOutputType = {
    cursoId: number
    disciplinaId: number
    _count: CursoDisciplinaCountAggregateOutputType | null
    _avg: CursoDisciplinaAvgAggregateOutputType | null
    _sum: CursoDisciplinaSumAggregateOutputType | null
    _min: CursoDisciplinaMinAggregateOutputType | null
    _max: CursoDisciplinaMaxAggregateOutputType | null
  }

  type GetCursoDisciplinaGroupByPayload<T extends CursoDisciplinaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CursoDisciplinaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CursoDisciplinaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CursoDisciplinaGroupByOutputType[P]>
            : GetScalarType<T[P], CursoDisciplinaGroupByOutputType[P]>
        }
      >
    >


  export type CursoDisciplinaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    cursoId?: boolean
    disciplinaId?: boolean
    curso?: boolean | CursoDefaultArgs<ExtArgs>
    disciplina?: boolean | DisciplinaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cursoDisciplina"]>

  export type CursoDisciplinaSelectScalar = {
    cursoId?: boolean
    disciplinaId?: boolean
  }


  export type CursoDisciplinaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    curso?: boolean | CursoDefaultArgs<ExtArgs>
    disciplina?: boolean | DisciplinaDefaultArgs<ExtArgs>
  }


  export type $CursoDisciplinaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CursoDisciplina"
    objects: {
      curso: Prisma.$CursoPayload<ExtArgs>
      disciplina: Prisma.$DisciplinaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      cursoId: number
      disciplinaId: number
    }, ExtArgs["result"]["cursoDisciplina"]>
    composites: {}
  }


  type CursoDisciplinaGetPayload<S extends boolean | null | undefined | CursoDisciplinaDefaultArgs> = $Result.GetResult<Prisma.$CursoDisciplinaPayload, S>

  type CursoDisciplinaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CursoDisciplinaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CursoDisciplinaCountAggregateInputType | true
    }

  export interface CursoDisciplinaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CursoDisciplina'], meta: { name: 'CursoDisciplina' } }
    /**
     * Find zero or one CursoDisciplina that matches the filter.
     * @param {CursoDisciplinaFindUniqueArgs} args - Arguments to find a CursoDisciplina
     * @example
     * // Get one CursoDisciplina
     * const cursoDisciplina = await prisma.cursoDisciplina.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CursoDisciplinaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, CursoDisciplinaFindUniqueArgs<ExtArgs>>
    ): Prisma__CursoDisciplinaClient<$Result.GetResult<Prisma.$CursoDisciplinaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one CursoDisciplina that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CursoDisciplinaFindUniqueOrThrowArgs} args - Arguments to find a CursoDisciplina
     * @example
     * // Get one CursoDisciplina
     * const cursoDisciplina = await prisma.cursoDisciplina.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends CursoDisciplinaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CursoDisciplinaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__CursoDisciplinaClient<$Result.GetResult<Prisma.$CursoDisciplinaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first CursoDisciplina that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoDisciplinaFindFirstArgs} args - Arguments to find a CursoDisciplina
     * @example
     * // Get one CursoDisciplina
     * const cursoDisciplina = await prisma.cursoDisciplina.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CursoDisciplinaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, CursoDisciplinaFindFirstArgs<ExtArgs>>
    ): Prisma__CursoDisciplinaClient<$Result.GetResult<Prisma.$CursoDisciplinaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first CursoDisciplina that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoDisciplinaFindFirstOrThrowArgs} args - Arguments to find a CursoDisciplina
     * @example
     * // Get one CursoDisciplina
     * const cursoDisciplina = await prisma.cursoDisciplina.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends CursoDisciplinaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CursoDisciplinaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__CursoDisciplinaClient<$Result.GetResult<Prisma.$CursoDisciplinaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more CursoDisciplinas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoDisciplinaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CursoDisciplinas
     * const cursoDisciplinas = await prisma.cursoDisciplina.findMany()
     * 
     * // Get first 10 CursoDisciplinas
     * const cursoDisciplinas = await prisma.cursoDisciplina.findMany({ take: 10 })
     * 
     * // Only select the `cursoId`
     * const cursoDisciplinaWithCursoIdOnly = await prisma.cursoDisciplina.findMany({ select: { cursoId: true } })
     * 
    **/
    findMany<T extends CursoDisciplinaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CursoDisciplinaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoDisciplinaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a CursoDisciplina.
     * @param {CursoDisciplinaCreateArgs} args - Arguments to create a CursoDisciplina.
     * @example
     * // Create one CursoDisciplina
     * const CursoDisciplina = await prisma.cursoDisciplina.create({
     *   data: {
     *     // ... data to create a CursoDisciplina
     *   }
     * })
     * 
    **/
    create<T extends CursoDisciplinaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, CursoDisciplinaCreateArgs<ExtArgs>>
    ): Prisma__CursoDisciplinaClient<$Result.GetResult<Prisma.$CursoDisciplinaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many CursoDisciplinas.
     * @param {CursoDisciplinaCreateManyArgs} args - Arguments to create many CursoDisciplinas.
     * @example
     * // Create many CursoDisciplinas
     * const cursoDisciplina = await prisma.cursoDisciplina.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends CursoDisciplinaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CursoDisciplinaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CursoDisciplina.
     * @param {CursoDisciplinaDeleteArgs} args - Arguments to delete one CursoDisciplina.
     * @example
     * // Delete one CursoDisciplina
     * const CursoDisciplina = await prisma.cursoDisciplina.delete({
     *   where: {
     *     // ... filter to delete one CursoDisciplina
     *   }
     * })
     * 
    **/
    delete<T extends CursoDisciplinaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, CursoDisciplinaDeleteArgs<ExtArgs>>
    ): Prisma__CursoDisciplinaClient<$Result.GetResult<Prisma.$CursoDisciplinaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one CursoDisciplina.
     * @param {CursoDisciplinaUpdateArgs} args - Arguments to update one CursoDisciplina.
     * @example
     * // Update one CursoDisciplina
     * const cursoDisciplina = await prisma.cursoDisciplina.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CursoDisciplinaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, CursoDisciplinaUpdateArgs<ExtArgs>>
    ): Prisma__CursoDisciplinaClient<$Result.GetResult<Prisma.$CursoDisciplinaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more CursoDisciplinas.
     * @param {CursoDisciplinaDeleteManyArgs} args - Arguments to filter CursoDisciplinas to delete.
     * @example
     * // Delete a few CursoDisciplinas
     * const { count } = await prisma.cursoDisciplina.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CursoDisciplinaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CursoDisciplinaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CursoDisciplinas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoDisciplinaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CursoDisciplinas
     * const cursoDisciplina = await prisma.cursoDisciplina.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CursoDisciplinaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, CursoDisciplinaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CursoDisciplina.
     * @param {CursoDisciplinaUpsertArgs} args - Arguments to update or create a CursoDisciplina.
     * @example
     * // Update or create a CursoDisciplina
     * const cursoDisciplina = await prisma.cursoDisciplina.upsert({
     *   create: {
     *     // ... data to create a CursoDisciplina
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CursoDisciplina we want to update
     *   }
     * })
    **/
    upsert<T extends CursoDisciplinaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, CursoDisciplinaUpsertArgs<ExtArgs>>
    ): Prisma__CursoDisciplinaClient<$Result.GetResult<Prisma.$CursoDisciplinaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of CursoDisciplinas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoDisciplinaCountArgs} args - Arguments to filter CursoDisciplinas to count.
     * @example
     * // Count the number of CursoDisciplinas
     * const count = await prisma.cursoDisciplina.count({
     *   where: {
     *     // ... the filter for the CursoDisciplinas we want to count
     *   }
     * })
    **/
    count<T extends CursoDisciplinaCountArgs>(
      args?: Subset<T, CursoDisciplinaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CursoDisciplinaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CursoDisciplina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoDisciplinaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CursoDisciplinaAggregateArgs>(args: Subset<T, CursoDisciplinaAggregateArgs>): Prisma.PrismaPromise<GetCursoDisciplinaAggregateType<T>>

    /**
     * Group by CursoDisciplina.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoDisciplinaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CursoDisciplinaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CursoDisciplinaGroupByArgs['orderBy'] }
        : { orderBy?: CursoDisciplinaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CursoDisciplinaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCursoDisciplinaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CursoDisciplina model
   */
  readonly fields: CursoDisciplinaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CursoDisciplina.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CursoDisciplinaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    curso<T extends CursoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CursoDefaultArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    disciplina<T extends DisciplinaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DisciplinaDefaultArgs<ExtArgs>>): Prisma__DisciplinaClient<$Result.GetResult<Prisma.$DisciplinaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the CursoDisciplina model
   */ 
  interface CursoDisciplinaFieldRefs {
    readonly cursoId: FieldRef<"CursoDisciplina", 'Int'>
    readonly disciplinaId: FieldRef<"CursoDisciplina", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * CursoDisciplina findUnique
   */
  export type CursoDisciplinaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoDisciplina
     */
    select?: CursoDisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoDisciplinaInclude<ExtArgs> | null
    /**
     * Filter, which CursoDisciplina to fetch.
     */
    where: CursoDisciplinaWhereUniqueInput
  }

  /**
   * CursoDisciplina findUniqueOrThrow
   */
  export type CursoDisciplinaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoDisciplina
     */
    select?: CursoDisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoDisciplinaInclude<ExtArgs> | null
    /**
     * Filter, which CursoDisciplina to fetch.
     */
    where: CursoDisciplinaWhereUniqueInput
  }

  /**
   * CursoDisciplina findFirst
   */
  export type CursoDisciplinaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoDisciplina
     */
    select?: CursoDisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoDisciplinaInclude<ExtArgs> | null
    /**
     * Filter, which CursoDisciplina to fetch.
     */
    where?: CursoDisciplinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CursoDisciplinas to fetch.
     */
    orderBy?: CursoDisciplinaOrderByWithRelationInput | CursoDisciplinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CursoDisciplinas.
     */
    cursor?: CursoDisciplinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CursoDisciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CursoDisciplinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CursoDisciplinas.
     */
    distinct?: CursoDisciplinaScalarFieldEnum | CursoDisciplinaScalarFieldEnum[]
  }

  /**
   * CursoDisciplina findFirstOrThrow
   */
  export type CursoDisciplinaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoDisciplina
     */
    select?: CursoDisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoDisciplinaInclude<ExtArgs> | null
    /**
     * Filter, which CursoDisciplina to fetch.
     */
    where?: CursoDisciplinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CursoDisciplinas to fetch.
     */
    orderBy?: CursoDisciplinaOrderByWithRelationInput | CursoDisciplinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CursoDisciplinas.
     */
    cursor?: CursoDisciplinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CursoDisciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CursoDisciplinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CursoDisciplinas.
     */
    distinct?: CursoDisciplinaScalarFieldEnum | CursoDisciplinaScalarFieldEnum[]
  }

  /**
   * CursoDisciplina findMany
   */
  export type CursoDisciplinaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoDisciplina
     */
    select?: CursoDisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoDisciplinaInclude<ExtArgs> | null
    /**
     * Filter, which CursoDisciplinas to fetch.
     */
    where?: CursoDisciplinaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CursoDisciplinas to fetch.
     */
    orderBy?: CursoDisciplinaOrderByWithRelationInput | CursoDisciplinaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CursoDisciplinas.
     */
    cursor?: CursoDisciplinaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CursoDisciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CursoDisciplinas.
     */
    skip?: number
    distinct?: CursoDisciplinaScalarFieldEnum | CursoDisciplinaScalarFieldEnum[]
  }

  /**
   * CursoDisciplina create
   */
  export type CursoDisciplinaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoDisciplina
     */
    select?: CursoDisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoDisciplinaInclude<ExtArgs> | null
    /**
     * The data needed to create a CursoDisciplina.
     */
    data: XOR<CursoDisciplinaCreateInput, CursoDisciplinaUncheckedCreateInput>
  }

  /**
   * CursoDisciplina createMany
   */
  export type CursoDisciplinaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CursoDisciplinas.
     */
    data: CursoDisciplinaCreateManyInput | CursoDisciplinaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CursoDisciplina update
   */
  export type CursoDisciplinaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoDisciplina
     */
    select?: CursoDisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoDisciplinaInclude<ExtArgs> | null
    /**
     * The data needed to update a CursoDisciplina.
     */
    data: XOR<CursoDisciplinaUpdateInput, CursoDisciplinaUncheckedUpdateInput>
    /**
     * Choose, which CursoDisciplina to update.
     */
    where: CursoDisciplinaWhereUniqueInput
  }

  /**
   * CursoDisciplina updateMany
   */
  export type CursoDisciplinaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CursoDisciplinas.
     */
    data: XOR<CursoDisciplinaUpdateManyMutationInput, CursoDisciplinaUncheckedUpdateManyInput>
    /**
     * Filter which CursoDisciplinas to update
     */
    where?: CursoDisciplinaWhereInput
  }

  /**
   * CursoDisciplina upsert
   */
  export type CursoDisciplinaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoDisciplina
     */
    select?: CursoDisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoDisciplinaInclude<ExtArgs> | null
    /**
     * The filter to search for the CursoDisciplina to update in case it exists.
     */
    where: CursoDisciplinaWhereUniqueInput
    /**
     * In case the CursoDisciplina found by the `where` argument doesn't exist, create a new CursoDisciplina with this data.
     */
    create: XOR<CursoDisciplinaCreateInput, CursoDisciplinaUncheckedCreateInput>
    /**
     * In case the CursoDisciplina was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CursoDisciplinaUpdateInput, CursoDisciplinaUncheckedUpdateInput>
  }

  /**
   * CursoDisciplina delete
   */
  export type CursoDisciplinaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoDisciplina
     */
    select?: CursoDisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoDisciplinaInclude<ExtArgs> | null
    /**
     * Filter which CursoDisciplina to delete.
     */
    where: CursoDisciplinaWhereUniqueInput
  }

  /**
   * CursoDisciplina deleteMany
   */
  export type CursoDisciplinaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CursoDisciplinas to delete
     */
    where?: CursoDisciplinaWhereInput
  }

  /**
   * CursoDisciplina without action
   */
  export type CursoDisciplinaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoDisciplina
     */
    select?: CursoDisciplinaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoDisciplinaInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const DisciplinaScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    cargaHoraria: 'cargaHoraria',
    ementa: 'ementa'
  };

  export type DisciplinaScalarFieldEnum = (typeof DisciplinaScalarFieldEnum)[keyof typeof DisciplinaScalarFieldEnum]


  export const CursoScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    descricao: 'descricao',
    duracao: 'duracao',
    horasTotais: 'horasTotais'
  };

  export type CursoScalarFieldEnum = (typeof CursoScalarFieldEnum)[keyof typeof CursoScalarFieldEnum]


  export const AlunoScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    cpf: 'cpf',
    email: 'email',
    cursoId: 'cursoId',
    ativo: 'ativo'
  };

  export type AlunoScalarFieldEnum = (typeof AlunoScalarFieldEnum)[keyof typeof AlunoScalarFieldEnum]


  export const AlunoDisciplinaMatriculadoScalarFieldEnum: {
    id: 'id',
    alunoId: 'alunoId',
    disciplinaId: 'disciplinaId',
    data: 'data'
  };

  export type AlunoDisciplinaMatriculadoScalarFieldEnum = (typeof AlunoDisciplinaMatriculadoScalarFieldEnum)[keyof typeof AlunoDisciplinaMatriculadoScalarFieldEnum]


  export const AlunoDisciplinaTrancadoScalarFieldEnum: {
    id: 'id',
    alunoId: 'alunoId',
    disciplinaId: 'disciplinaId',
    data: 'data'
  };

  export type AlunoDisciplinaTrancadoScalarFieldEnum = (typeof AlunoDisciplinaTrancadoScalarFieldEnum)[keyof typeof AlunoDisciplinaTrancadoScalarFieldEnum]


  export const AlunoDisciplinaCursadoScalarFieldEnum: {
    id: 'id',
    alunoId: 'alunoId',
    disciplinaId: 'disciplinaId',
    data: 'data'
  };

  export type AlunoDisciplinaCursadoScalarFieldEnum = (typeof AlunoDisciplinaCursadoScalarFieldEnum)[keyof typeof AlunoDisciplinaCursadoScalarFieldEnum]


  export const CursoDisciplinaScalarFieldEnum: {
    cursoId: 'cursoId',
    disciplinaId: 'disciplinaId'
  };

  export type CursoDisciplinaScalarFieldEnum = (typeof CursoDisciplinaScalarFieldEnum)[keyof typeof CursoDisciplinaScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type DisciplinaWhereInput = {
    AND?: DisciplinaWhereInput | DisciplinaWhereInput[]
    OR?: DisciplinaWhereInput[]
    NOT?: DisciplinaWhereInput | DisciplinaWhereInput[]
    id?: IntFilter<"Disciplina"> | number
    nome?: StringFilter<"Disciplina"> | string
    cargaHoraria?: IntFilter<"Disciplina"> | number
    ementa?: StringFilter<"Disciplina"> | string
    alunosAtivos?: AlunoDisciplinaMatriculadoListRelationFilter
    alunosTrancados?: AlunoDisciplinaTrancadoListRelationFilter
    alunosConcluidos?: AlunoDisciplinaCursadoListRelationFilter
    cursos?: CursoDisciplinaListRelationFilter
  }

  export type DisciplinaOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    cargaHoraria?: SortOrder
    ementa?: SortOrder
    alunosAtivos?: AlunoDisciplinaMatriculadoOrderByRelationAggregateInput
    alunosTrancados?: AlunoDisciplinaTrancadoOrderByRelationAggregateInput
    alunosConcluidos?: AlunoDisciplinaCursadoOrderByRelationAggregateInput
    cursos?: CursoDisciplinaOrderByRelationAggregateInput
  }

  export type DisciplinaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DisciplinaWhereInput | DisciplinaWhereInput[]
    OR?: DisciplinaWhereInput[]
    NOT?: DisciplinaWhereInput | DisciplinaWhereInput[]
    nome?: StringFilter<"Disciplina"> | string
    cargaHoraria?: IntFilter<"Disciplina"> | number
    ementa?: StringFilter<"Disciplina"> | string
    alunosAtivos?: AlunoDisciplinaMatriculadoListRelationFilter
    alunosTrancados?: AlunoDisciplinaTrancadoListRelationFilter
    alunosConcluidos?: AlunoDisciplinaCursadoListRelationFilter
    cursos?: CursoDisciplinaListRelationFilter
  }, "id">

  export type DisciplinaOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    cargaHoraria?: SortOrder
    ementa?: SortOrder
    _count?: DisciplinaCountOrderByAggregateInput
    _avg?: DisciplinaAvgOrderByAggregateInput
    _max?: DisciplinaMaxOrderByAggregateInput
    _min?: DisciplinaMinOrderByAggregateInput
    _sum?: DisciplinaSumOrderByAggregateInput
  }

  export type DisciplinaScalarWhereWithAggregatesInput = {
    AND?: DisciplinaScalarWhereWithAggregatesInput | DisciplinaScalarWhereWithAggregatesInput[]
    OR?: DisciplinaScalarWhereWithAggregatesInput[]
    NOT?: DisciplinaScalarWhereWithAggregatesInput | DisciplinaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Disciplina"> | number
    nome?: StringWithAggregatesFilter<"Disciplina"> | string
    cargaHoraria?: IntWithAggregatesFilter<"Disciplina"> | number
    ementa?: StringWithAggregatesFilter<"Disciplina"> | string
  }

  export type CursoWhereInput = {
    AND?: CursoWhereInput | CursoWhereInput[]
    OR?: CursoWhereInput[]
    NOT?: CursoWhereInput | CursoWhereInput[]
    id?: IntFilter<"Curso"> | number
    nome?: StringFilter<"Curso"> | string
    descricao?: StringFilter<"Curso"> | string
    duracao?: IntFilter<"Curso"> | number
    horasTotais?: IntNullableFilter<"Curso"> | number | null
    alunos?: AlunoListRelationFilter
    disciplinas?: CursoDisciplinaListRelationFilter
  }

  export type CursoOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    duracao?: SortOrder
    horasTotais?: SortOrderInput | SortOrder
    alunos?: AlunoOrderByRelationAggregateInput
    disciplinas?: CursoDisciplinaOrderByRelationAggregateInput
  }

  export type CursoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CursoWhereInput | CursoWhereInput[]
    OR?: CursoWhereInput[]
    NOT?: CursoWhereInput | CursoWhereInput[]
    nome?: StringFilter<"Curso"> | string
    descricao?: StringFilter<"Curso"> | string
    duracao?: IntFilter<"Curso"> | number
    horasTotais?: IntNullableFilter<"Curso"> | number | null
    alunos?: AlunoListRelationFilter
    disciplinas?: CursoDisciplinaListRelationFilter
  }, "id">

  export type CursoOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    duracao?: SortOrder
    horasTotais?: SortOrderInput | SortOrder
    _count?: CursoCountOrderByAggregateInput
    _avg?: CursoAvgOrderByAggregateInput
    _max?: CursoMaxOrderByAggregateInput
    _min?: CursoMinOrderByAggregateInput
    _sum?: CursoSumOrderByAggregateInput
  }

  export type CursoScalarWhereWithAggregatesInput = {
    AND?: CursoScalarWhereWithAggregatesInput | CursoScalarWhereWithAggregatesInput[]
    OR?: CursoScalarWhereWithAggregatesInput[]
    NOT?: CursoScalarWhereWithAggregatesInput | CursoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Curso"> | number
    nome?: StringWithAggregatesFilter<"Curso"> | string
    descricao?: StringWithAggregatesFilter<"Curso"> | string
    duracao?: IntWithAggregatesFilter<"Curso"> | number
    horasTotais?: IntNullableWithAggregatesFilter<"Curso"> | number | null
  }

  export type AlunoWhereInput = {
    AND?: AlunoWhereInput | AlunoWhereInput[]
    OR?: AlunoWhereInput[]
    NOT?: AlunoWhereInput | AlunoWhereInput[]
    id?: IntFilter<"Aluno"> | number
    nome?: StringFilter<"Aluno"> | string
    cpf?: StringFilter<"Aluno"> | string
    email?: StringFilter<"Aluno"> | string
    cursoId?: IntNullableFilter<"Aluno"> | number | null
    ativo?: BoolFilter<"Aluno"> | boolean
    curso?: XOR<CursoNullableRelationFilter, CursoWhereInput> | null
    disciplinasMatriculado?: AlunoDisciplinaMatriculadoListRelationFilter
    disciplinasTrancado?: AlunoDisciplinaTrancadoListRelationFilter
    disciplinasCursado?: AlunoDisciplinaCursadoListRelationFilter
  }

  export type AlunoOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    cpf?: SortOrder
    email?: SortOrder
    cursoId?: SortOrderInput | SortOrder
    ativo?: SortOrder
    curso?: CursoOrderByWithRelationInput
    disciplinasMatriculado?: AlunoDisciplinaMatriculadoOrderByRelationAggregateInput
    disciplinasTrancado?: AlunoDisciplinaTrancadoOrderByRelationAggregateInput
    disciplinasCursado?: AlunoDisciplinaCursadoOrderByRelationAggregateInput
  }

  export type AlunoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    cpf?: string
    email?: string
    AND?: AlunoWhereInput | AlunoWhereInput[]
    OR?: AlunoWhereInput[]
    NOT?: AlunoWhereInput | AlunoWhereInput[]
    nome?: StringFilter<"Aluno"> | string
    cursoId?: IntNullableFilter<"Aluno"> | number | null
    ativo?: BoolFilter<"Aluno"> | boolean
    curso?: XOR<CursoNullableRelationFilter, CursoWhereInput> | null
    disciplinasMatriculado?: AlunoDisciplinaMatriculadoListRelationFilter
    disciplinasTrancado?: AlunoDisciplinaTrancadoListRelationFilter
    disciplinasCursado?: AlunoDisciplinaCursadoListRelationFilter
  }, "id" | "cpf" | "email">

  export type AlunoOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    cpf?: SortOrder
    email?: SortOrder
    cursoId?: SortOrderInput | SortOrder
    ativo?: SortOrder
    _count?: AlunoCountOrderByAggregateInput
    _avg?: AlunoAvgOrderByAggregateInput
    _max?: AlunoMaxOrderByAggregateInput
    _min?: AlunoMinOrderByAggregateInput
    _sum?: AlunoSumOrderByAggregateInput
  }

  export type AlunoScalarWhereWithAggregatesInput = {
    AND?: AlunoScalarWhereWithAggregatesInput | AlunoScalarWhereWithAggregatesInput[]
    OR?: AlunoScalarWhereWithAggregatesInput[]
    NOT?: AlunoScalarWhereWithAggregatesInput | AlunoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Aluno"> | number
    nome?: StringWithAggregatesFilter<"Aluno"> | string
    cpf?: StringWithAggregatesFilter<"Aluno"> | string
    email?: StringWithAggregatesFilter<"Aluno"> | string
    cursoId?: IntNullableWithAggregatesFilter<"Aluno"> | number | null
    ativo?: BoolWithAggregatesFilter<"Aluno"> | boolean
  }

  export type AlunoDisciplinaMatriculadoWhereInput = {
    AND?: AlunoDisciplinaMatriculadoWhereInput | AlunoDisciplinaMatriculadoWhereInput[]
    OR?: AlunoDisciplinaMatriculadoWhereInput[]
    NOT?: AlunoDisciplinaMatriculadoWhereInput | AlunoDisciplinaMatriculadoWhereInput[]
    id?: IntFilter<"AlunoDisciplinaMatriculado"> | number
    alunoId?: IntFilter<"AlunoDisciplinaMatriculado"> | number
    disciplinaId?: IntFilter<"AlunoDisciplinaMatriculado"> | number
    data?: DateTimeFilter<"AlunoDisciplinaMatriculado"> | Date | string
    aluno?: XOR<AlunoRelationFilter, AlunoWhereInput>
    disciplina?: XOR<DisciplinaRelationFilter, DisciplinaWhereInput>
  }

  export type AlunoDisciplinaMatriculadoOrderByWithRelationInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
    data?: SortOrder
    aluno?: AlunoOrderByWithRelationInput
    disciplina?: DisciplinaOrderByWithRelationInput
  }

  export type AlunoDisciplinaMatriculadoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AlunoDisciplinaMatriculadoWhereInput | AlunoDisciplinaMatriculadoWhereInput[]
    OR?: AlunoDisciplinaMatriculadoWhereInput[]
    NOT?: AlunoDisciplinaMatriculadoWhereInput | AlunoDisciplinaMatriculadoWhereInput[]
    alunoId?: IntFilter<"AlunoDisciplinaMatriculado"> | number
    disciplinaId?: IntFilter<"AlunoDisciplinaMatriculado"> | number
    data?: DateTimeFilter<"AlunoDisciplinaMatriculado"> | Date | string
    aluno?: XOR<AlunoRelationFilter, AlunoWhereInput>
    disciplina?: XOR<DisciplinaRelationFilter, DisciplinaWhereInput>
  }, "id">

  export type AlunoDisciplinaMatriculadoOrderByWithAggregationInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
    data?: SortOrder
    _count?: AlunoDisciplinaMatriculadoCountOrderByAggregateInput
    _avg?: AlunoDisciplinaMatriculadoAvgOrderByAggregateInput
    _max?: AlunoDisciplinaMatriculadoMaxOrderByAggregateInput
    _min?: AlunoDisciplinaMatriculadoMinOrderByAggregateInput
    _sum?: AlunoDisciplinaMatriculadoSumOrderByAggregateInput
  }

  export type AlunoDisciplinaMatriculadoScalarWhereWithAggregatesInput = {
    AND?: AlunoDisciplinaMatriculadoScalarWhereWithAggregatesInput | AlunoDisciplinaMatriculadoScalarWhereWithAggregatesInput[]
    OR?: AlunoDisciplinaMatriculadoScalarWhereWithAggregatesInput[]
    NOT?: AlunoDisciplinaMatriculadoScalarWhereWithAggregatesInput | AlunoDisciplinaMatriculadoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"AlunoDisciplinaMatriculado"> | number
    alunoId?: IntWithAggregatesFilter<"AlunoDisciplinaMatriculado"> | number
    disciplinaId?: IntWithAggregatesFilter<"AlunoDisciplinaMatriculado"> | number
    data?: DateTimeWithAggregatesFilter<"AlunoDisciplinaMatriculado"> | Date | string
  }

  export type AlunoDisciplinaTrancadoWhereInput = {
    AND?: AlunoDisciplinaTrancadoWhereInput | AlunoDisciplinaTrancadoWhereInput[]
    OR?: AlunoDisciplinaTrancadoWhereInput[]
    NOT?: AlunoDisciplinaTrancadoWhereInput | AlunoDisciplinaTrancadoWhereInput[]
    id?: IntFilter<"AlunoDisciplinaTrancado"> | number
    alunoId?: IntFilter<"AlunoDisciplinaTrancado"> | number
    disciplinaId?: IntFilter<"AlunoDisciplinaTrancado"> | number
    data?: DateTimeFilter<"AlunoDisciplinaTrancado"> | Date | string
    aluno?: XOR<AlunoRelationFilter, AlunoWhereInput>
    disciplina?: XOR<DisciplinaRelationFilter, DisciplinaWhereInput>
  }

  export type AlunoDisciplinaTrancadoOrderByWithRelationInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
    data?: SortOrder
    aluno?: AlunoOrderByWithRelationInput
    disciplina?: DisciplinaOrderByWithRelationInput
  }

  export type AlunoDisciplinaTrancadoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AlunoDisciplinaTrancadoWhereInput | AlunoDisciplinaTrancadoWhereInput[]
    OR?: AlunoDisciplinaTrancadoWhereInput[]
    NOT?: AlunoDisciplinaTrancadoWhereInput | AlunoDisciplinaTrancadoWhereInput[]
    alunoId?: IntFilter<"AlunoDisciplinaTrancado"> | number
    disciplinaId?: IntFilter<"AlunoDisciplinaTrancado"> | number
    data?: DateTimeFilter<"AlunoDisciplinaTrancado"> | Date | string
    aluno?: XOR<AlunoRelationFilter, AlunoWhereInput>
    disciplina?: XOR<DisciplinaRelationFilter, DisciplinaWhereInput>
  }, "id">

  export type AlunoDisciplinaTrancadoOrderByWithAggregationInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
    data?: SortOrder
    _count?: AlunoDisciplinaTrancadoCountOrderByAggregateInput
    _avg?: AlunoDisciplinaTrancadoAvgOrderByAggregateInput
    _max?: AlunoDisciplinaTrancadoMaxOrderByAggregateInput
    _min?: AlunoDisciplinaTrancadoMinOrderByAggregateInput
    _sum?: AlunoDisciplinaTrancadoSumOrderByAggregateInput
  }

  export type AlunoDisciplinaTrancadoScalarWhereWithAggregatesInput = {
    AND?: AlunoDisciplinaTrancadoScalarWhereWithAggregatesInput | AlunoDisciplinaTrancadoScalarWhereWithAggregatesInput[]
    OR?: AlunoDisciplinaTrancadoScalarWhereWithAggregatesInput[]
    NOT?: AlunoDisciplinaTrancadoScalarWhereWithAggregatesInput | AlunoDisciplinaTrancadoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"AlunoDisciplinaTrancado"> | number
    alunoId?: IntWithAggregatesFilter<"AlunoDisciplinaTrancado"> | number
    disciplinaId?: IntWithAggregatesFilter<"AlunoDisciplinaTrancado"> | number
    data?: DateTimeWithAggregatesFilter<"AlunoDisciplinaTrancado"> | Date | string
  }

  export type AlunoDisciplinaCursadoWhereInput = {
    AND?: AlunoDisciplinaCursadoWhereInput | AlunoDisciplinaCursadoWhereInput[]
    OR?: AlunoDisciplinaCursadoWhereInput[]
    NOT?: AlunoDisciplinaCursadoWhereInput | AlunoDisciplinaCursadoWhereInput[]
    id?: IntFilter<"AlunoDisciplinaCursado"> | number
    alunoId?: IntFilter<"AlunoDisciplinaCursado"> | number
    disciplinaId?: IntFilter<"AlunoDisciplinaCursado"> | number
    data?: DateTimeFilter<"AlunoDisciplinaCursado"> | Date | string
    aluno?: XOR<AlunoRelationFilter, AlunoWhereInput>
    disciplina?: XOR<DisciplinaRelationFilter, DisciplinaWhereInput>
  }

  export type AlunoDisciplinaCursadoOrderByWithRelationInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
    data?: SortOrder
    aluno?: AlunoOrderByWithRelationInput
    disciplina?: DisciplinaOrderByWithRelationInput
  }

  export type AlunoDisciplinaCursadoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AlunoDisciplinaCursadoWhereInput | AlunoDisciplinaCursadoWhereInput[]
    OR?: AlunoDisciplinaCursadoWhereInput[]
    NOT?: AlunoDisciplinaCursadoWhereInput | AlunoDisciplinaCursadoWhereInput[]
    alunoId?: IntFilter<"AlunoDisciplinaCursado"> | number
    disciplinaId?: IntFilter<"AlunoDisciplinaCursado"> | number
    data?: DateTimeFilter<"AlunoDisciplinaCursado"> | Date | string
    aluno?: XOR<AlunoRelationFilter, AlunoWhereInput>
    disciplina?: XOR<DisciplinaRelationFilter, DisciplinaWhereInput>
  }, "id">

  export type AlunoDisciplinaCursadoOrderByWithAggregationInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
    data?: SortOrder
    _count?: AlunoDisciplinaCursadoCountOrderByAggregateInput
    _avg?: AlunoDisciplinaCursadoAvgOrderByAggregateInput
    _max?: AlunoDisciplinaCursadoMaxOrderByAggregateInput
    _min?: AlunoDisciplinaCursadoMinOrderByAggregateInput
    _sum?: AlunoDisciplinaCursadoSumOrderByAggregateInput
  }

  export type AlunoDisciplinaCursadoScalarWhereWithAggregatesInput = {
    AND?: AlunoDisciplinaCursadoScalarWhereWithAggregatesInput | AlunoDisciplinaCursadoScalarWhereWithAggregatesInput[]
    OR?: AlunoDisciplinaCursadoScalarWhereWithAggregatesInput[]
    NOT?: AlunoDisciplinaCursadoScalarWhereWithAggregatesInput | AlunoDisciplinaCursadoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"AlunoDisciplinaCursado"> | number
    alunoId?: IntWithAggregatesFilter<"AlunoDisciplinaCursado"> | number
    disciplinaId?: IntWithAggregatesFilter<"AlunoDisciplinaCursado"> | number
    data?: DateTimeWithAggregatesFilter<"AlunoDisciplinaCursado"> | Date | string
  }

  export type CursoDisciplinaWhereInput = {
    AND?: CursoDisciplinaWhereInput | CursoDisciplinaWhereInput[]
    OR?: CursoDisciplinaWhereInput[]
    NOT?: CursoDisciplinaWhereInput | CursoDisciplinaWhereInput[]
    cursoId?: IntFilter<"CursoDisciplina"> | number
    disciplinaId?: IntFilter<"CursoDisciplina"> | number
    curso?: XOR<CursoRelationFilter, CursoWhereInput>
    disciplina?: XOR<DisciplinaRelationFilter, DisciplinaWhereInput>
  }

  export type CursoDisciplinaOrderByWithRelationInput = {
    cursoId?: SortOrder
    disciplinaId?: SortOrder
    curso?: CursoOrderByWithRelationInput
    disciplina?: DisciplinaOrderByWithRelationInput
  }

  export type CursoDisciplinaWhereUniqueInput = Prisma.AtLeast<{
    cursoId_disciplinaId?: CursoDisciplinaCursoIdDisciplinaIdCompoundUniqueInput
    AND?: CursoDisciplinaWhereInput | CursoDisciplinaWhereInput[]
    OR?: CursoDisciplinaWhereInput[]
    NOT?: CursoDisciplinaWhereInput | CursoDisciplinaWhereInput[]
    cursoId?: IntFilter<"CursoDisciplina"> | number
    disciplinaId?: IntFilter<"CursoDisciplina"> | number
    curso?: XOR<CursoRelationFilter, CursoWhereInput>
    disciplina?: XOR<DisciplinaRelationFilter, DisciplinaWhereInput>
  }, "cursoId_disciplinaId">

  export type CursoDisciplinaOrderByWithAggregationInput = {
    cursoId?: SortOrder
    disciplinaId?: SortOrder
    _count?: CursoDisciplinaCountOrderByAggregateInput
    _avg?: CursoDisciplinaAvgOrderByAggregateInput
    _max?: CursoDisciplinaMaxOrderByAggregateInput
    _min?: CursoDisciplinaMinOrderByAggregateInput
    _sum?: CursoDisciplinaSumOrderByAggregateInput
  }

  export type CursoDisciplinaScalarWhereWithAggregatesInput = {
    AND?: CursoDisciplinaScalarWhereWithAggregatesInput | CursoDisciplinaScalarWhereWithAggregatesInput[]
    OR?: CursoDisciplinaScalarWhereWithAggregatesInput[]
    NOT?: CursoDisciplinaScalarWhereWithAggregatesInput | CursoDisciplinaScalarWhereWithAggregatesInput[]
    cursoId?: IntWithAggregatesFilter<"CursoDisciplina"> | number
    disciplinaId?: IntWithAggregatesFilter<"CursoDisciplina"> | number
  }

  export type DisciplinaCreateInput = {
    nome: string
    cargaHoraria: number
    ementa: string
    alunosAtivos?: AlunoDisciplinaMatriculadoCreateNestedManyWithoutDisciplinaInput
    alunosTrancados?: AlunoDisciplinaTrancadoCreateNestedManyWithoutDisciplinaInput
    alunosConcluidos?: AlunoDisciplinaCursadoCreateNestedManyWithoutDisciplinaInput
    cursos?: CursoDisciplinaCreateNestedManyWithoutDisciplinaInput
  }

  export type DisciplinaUncheckedCreateInput = {
    id?: number
    nome: string
    cargaHoraria: number
    ementa: string
    alunosAtivos?: AlunoDisciplinaMatriculadoUncheckedCreateNestedManyWithoutDisciplinaInput
    alunosTrancados?: AlunoDisciplinaTrancadoUncheckedCreateNestedManyWithoutDisciplinaInput
    alunosConcluidos?: AlunoDisciplinaCursadoUncheckedCreateNestedManyWithoutDisciplinaInput
    cursos?: CursoDisciplinaUncheckedCreateNestedManyWithoutDisciplinaInput
  }

  export type DisciplinaUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cargaHoraria?: IntFieldUpdateOperationsInput | number
    ementa?: StringFieldUpdateOperationsInput | string
    alunosAtivos?: AlunoDisciplinaMatriculadoUpdateManyWithoutDisciplinaNestedInput
    alunosTrancados?: AlunoDisciplinaTrancadoUpdateManyWithoutDisciplinaNestedInput
    alunosConcluidos?: AlunoDisciplinaCursadoUpdateManyWithoutDisciplinaNestedInput
    cursos?: CursoDisciplinaUpdateManyWithoutDisciplinaNestedInput
  }

  export type DisciplinaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cargaHoraria?: IntFieldUpdateOperationsInput | number
    ementa?: StringFieldUpdateOperationsInput | string
    alunosAtivos?: AlunoDisciplinaMatriculadoUncheckedUpdateManyWithoutDisciplinaNestedInput
    alunosTrancados?: AlunoDisciplinaTrancadoUncheckedUpdateManyWithoutDisciplinaNestedInput
    alunosConcluidos?: AlunoDisciplinaCursadoUncheckedUpdateManyWithoutDisciplinaNestedInput
    cursos?: CursoDisciplinaUncheckedUpdateManyWithoutDisciplinaNestedInput
  }

  export type DisciplinaCreateManyInput = {
    id?: number
    nome: string
    cargaHoraria: number
    ementa: string
  }

  export type DisciplinaUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cargaHoraria?: IntFieldUpdateOperationsInput | number
    ementa?: StringFieldUpdateOperationsInput | string
  }

  export type DisciplinaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cargaHoraria?: IntFieldUpdateOperationsInput | number
    ementa?: StringFieldUpdateOperationsInput | string
  }

  export type CursoCreateInput = {
    nome: string
    descricao: string
    duracao: number
    horasTotais?: number | null
    alunos?: AlunoCreateNestedManyWithoutCursoInput
    disciplinas?: CursoDisciplinaCreateNestedManyWithoutCursoInput
  }

  export type CursoUncheckedCreateInput = {
    id?: number
    nome: string
    descricao: string
    duracao: number
    horasTotais?: number | null
    alunos?: AlunoUncheckedCreateNestedManyWithoutCursoInput
    disciplinas?: CursoDisciplinaUncheckedCreateNestedManyWithoutCursoInput
  }

  export type CursoUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    duracao?: IntFieldUpdateOperationsInput | number
    horasTotais?: NullableIntFieldUpdateOperationsInput | number | null
    alunos?: AlunoUpdateManyWithoutCursoNestedInput
    disciplinas?: CursoDisciplinaUpdateManyWithoutCursoNestedInput
  }

  export type CursoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    duracao?: IntFieldUpdateOperationsInput | number
    horasTotais?: NullableIntFieldUpdateOperationsInput | number | null
    alunos?: AlunoUncheckedUpdateManyWithoutCursoNestedInput
    disciplinas?: CursoDisciplinaUncheckedUpdateManyWithoutCursoNestedInput
  }

  export type CursoCreateManyInput = {
    id?: number
    nome: string
    descricao: string
    duracao: number
    horasTotais?: number | null
  }

  export type CursoUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    duracao?: IntFieldUpdateOperationsInput | number
    horasTotais?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CursoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    duracao?: IntFieldUpdateOperationsInput | number
    horasTotais?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type AlunoCreateInput = {
    nome: string
    cpf: string
    email: string
    ativo?: boolean
    curso?: CursoCreateNestedOneWithoutAlunosInput
    disciplinasMatriculado?: AlunoDisciplinaMatriculadoCreateNestedManyWithoutAlunoInput
    disciplinasTrancado?: AlunoDisciplinaTrancadoCreateNestedManyWithoutAlunoInput
    disciplinasCursado?: AlunoDisciplinaCursadoCreateNestedManyWithoutAlunoInput
  }

  export type AlunoUncheckedCreateInput = {
    id?: number
    nome: string
    cpf: string
    email: string
    cursoId?: number | null
    ativo?: boolean
    disciplinasMatriculado?: AlunoDisciplinaMatriculadoUncheckedCreateNestedManyWithoutAlunoInput
    disciplinasTrancado?: AlunoDisciplinaTrancadoUncheckedCreateNestedManyWithoutAlunoInput
    disciplinasCursado?: AlunoDisciplinaCursadoUncheckedCreateNestedManyWithoutAlunoInput
  }

  export type AlunoUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    curso?: CursoUpdateOneWithoutAlunosNestedInput
    disciplinasMatriculado?: AlunoDisciplinaMatriculadoUpdateManyWithoutAlunoNestedInput
    disciplinasTrancado?: AlunoDisciplinaTrancadoUpdateManyWithoutAlunoNestedInput
    disciplinasCursado?: AlunoDisciplinaCursadoUpdateManyWithoutAlunoNestedInput
  }

  export type AlunoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cursoId?: NullableIntFieldUpdateOperationsInput | number | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    disciplinasMatriculado?: AlunoDisciplinaMatriculadoUncheckedUpdateManyWithoutAlunoNestedInput
    disciplinasTrancado?: AlunoDisciplinaTrancadoUncheckedUpdateManyWithoutAlunoNestedInput
    disciplinasCursado?: AlunoDisciplinaCursadoUncheckedUpdateManyWithoutAlunoNestedInput
  }

  export type AlunoCreateManyInput = {
    id?: number
    nome: string
    cpf: string
    email: string
    cursoId?: number | null
    ativo?: boolean
  }

  export type AlunoUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AlunoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cursoId?: NullableIntFieldUpdateOperationsInput | number | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AlunoDisciplinaMatriculadoCreateInput = {
    data?: Date | string
    aluno: AlunoCreateNestedOneWithoutDisciplinasMatriculadoInput
    disciplina: DisciplinaCreateNestedOneWithoutAlunosAtivosInput
  }

  export type AlunoDisciplinaMatriculadoUncheckedCreateInput = {
    id?: number
    alunoId: number
    disciplinaId: number
    data?: Date | string
  }

  export type AlunoDisciplinaMatriculadoUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    aluno?: AlunoUpdateOneRequiredWithoutDisciplinasMatriculadoNestedInput
    disciplina?: DisciplinaUpdateOneRequiredWithoutAlunosAtivosNestedInput
  }

  export type AlunoDisciplinaMatriculadoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    alunoId?: IntFieldUpdateOperationsInput | number
    disciplinaId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlunoDisciplinaMatriculadoCreateManyInput = {
    id?: number
    alunoId: number
    disciplinaId: number
    data?: Date | string
  }

  export type AlunoDisciplinaMatriculadoUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlunoDisciplinaMatriculadoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    alunoId?: IntFieldUpdateOperationsInput | number
    disciplinaId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlunoDisciplinaTrancadoCreateInput = {
    data?: Date | string
    aluno: AlunoCreateNestedOneWithoutDisciplinasTrancadoInput
    disciplina: DisciplinaCreateNestedOneWithoutAlunosTrancadosInput
  }

  export type AlunoDisciplinaTrancadoUncheckedCreateInput = {
    id?: number
    alunoId: number
    disciplinaId: number
    data?: Date | string
  }

  export type AlunoDisciplinaTrancadoUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    aluno?: AlunoUpdateOneRequiredWithoutDisciplinasTrancadoNestedInput
    disciplina?: DisciplinaUpdateOneRequiredWithoutAlunosTrancadosNestedInput
  }

  export type AlunoDisciplinaTrancadoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    alunoId?: IntFieldUpdateOperationsInput | number
    disciplinaId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlunoDisciplinaTrancadoCreateManyInput = {
    id?: number
    alunoId: number
    disciplinaId: number
    data?: Date | string
  }

  export type AlunoDisciplinaTrancadoUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlunoDisciplinaTrancadoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    alunoId?: IntFieldUpdateOperationsInput | number
    disciplinaId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlunoDisciplinaCursadoCreateInput = {
    data?: Date | string
    aluno: AlunoCreateNestedOneWithoutDisciplinasCursadoInput
    disciplina: DisciplinaCreateNestedOneWithoutAlunosConcluidosInput
  }

  export type AlunoDisciplinaCursadoUncheckedCreateInput = {
    id?: number
    alunoId: number
    disciplinaId: number
    data?: Date | string
  }

  export type AlunoDisciplinaCursadoUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    aluno?: AlunoUpdateOneRequiredWithoutDisciplinasCursadoNestedInput
    disciplina?: DisciplinaUpdateOneRequiredWithoutAlunosConcluidosNestedInput
  }

  export type AlunoDisciplinaCursadoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    alunoId?: IntFieldUpdateOperationsInput | number
    disciplinaId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlunoDisciplinaCursadoCreateManyInput = {
    id?: number
    alunoId: number
    disciplinaId: number
    data?: Date | string
  }

  export type AlunoDisciplinaCursadoUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlunoDisciplinaCursadoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    alunoId?: IntFieldUpdateOperationsInput | number
    disciplinaId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CursoDisciplinaCreateInput = {
    curso: CursoCreateNestedOneWithoutDisciplinasInput
    disciplina: DisciplinaCreateNestedOneWithoutCursosInput
  }

  export type CursoDisciplinaUncheckedCreateInput = {
    cursoId: number
    disciplinaId: number
  }

  export type CursoDisciplinaUpdateInput = {
    curso?: CursoUpdateOneRequiredWithoutDisciplinasNestedInput
    disciplina?: DisciplinaUpdateOneRequiredWithoutCursosNestedInput
  }

  export type CursoDisciplinaUncheckedUpdateInput = {
    cursoId?: IntFieldUpdateOperationsInput | number
    disciplinaId?: IntFieldUpdateOperationsInput | number
  }

  export type CursoDisciplinaCreateManyInput = {
    cursoId: number
    disciplinaId: number
  }

  export type CursoDisciplinaUpdateManyMutationInput = {

  }

  export type CursoDisciplinaUncheckedUpdateManyInput = {
    cursoId?: IntFieldUpdateOperationsInput | number
    disciplinaId?: IntFieldUpdateOperationsInput | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type AlunoDisciplinaMatriculadoListRelationFilter = {
    every?: AlunoDisciplinaMatriculadoWhereInput
    some?: AlunoDisciplinaMatriculadoWhereInput
    none?: AlunoDisciplinaMatriculadoWhereInput
  }

  export type AlunoDisciplinaTrancadoListRelationFilter = {
    every?: AlunoDisciplinaTrancadoWhereInput
    some?: AlunoDisciplinaTrancadoWhereInput
    none?: AlunoDisciplinaTrancadoWhereInput
  }

  export type AlunoDisciplinaCursadoListRelationFilter = {
    every?: AlunoDisciplinaCursadoWhereInput
    some?: AlunoDisciplinaCursadoWhereInput
    none?: AlunoDisciplinaCursadoWhereInput
  }

  export type CursoDisciplinaListRelationFilter = {
    every?: CursoDisciplinaWhereInput
    some?: CursoDisciplinaWhereInput
    none?: CursoDisciplinaWhereInput
  }

  export type AlunoDisciplinaMatriculadoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AlunoDisciplinaTrancadoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AlunoDisciplinaCursadoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CursoDisciplinaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DisciplinaCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    cargaHoraria?: SortOrder
    ementa?: SortOrder
  }

  export type DisciplinaAvgOrderByAggregateInput = {
    id?: SortOrder
    cargaHoraria?: SortOrder
  }

  export type DisciplinaMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    cargaHoraria?: SortOrder
    ementa?: SortOrder
  }

  export type DisciplinaMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    cargaHoraria?: SortOrder
    ementa?: SortOrder
  }

  export type DisciplinaSumOrderByAggregateInput = {
    id?: SortOrder
    cargaHoraria?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type AlunoListRelationFilter = {
    every?: AlunoWhereInput
    some?: AlunoWhereInput
    none?: AlunoWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AlunoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CursoCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    duracao?: SortOrder
    horasTotais?: SortOrder
  }

  export type CursoAvgOrderByAggregateInput = {
    id?: SortOrder
    duracao?: SortOrder
    horasTotais?: SortOrder
  }

  export type CursoMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    duracao?: SortOrder
    horasTotais?: SortOrder
  }

  export type CursoMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    duracao?: SortOrder
    horasTotais?: SortOrder
  }

  export type CursoSumOrderByAggregateInput = {
    id?: SortOrder
    duracao?: SortOrder
    horasTotais?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type CursoNullableRelationFilter = {
    is?: CursoWhereInput | null
    isNot?: CursoWhereInput | null
  }

  export type AlunoCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    cpf?: SortOrder
    email?: SortOrder
    cursoId?: SortOrder
    ativo?: SortOrder
  }

  export type AlunoAvgOrderByAggregateInput = {
    id?: SortOrder
    cursoId?: SortOrder
  }

  export type AlunoMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    cpf?: SortOrder
    email?: SortOrder
    cursoId?: SortOrder
    ativo?: SortOrder
  }

  export type AlunoMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    cpf?: SortOrder
    email?: SortOrder
    cursoId?: SortOrder
    ativo?: SortOrder
  }

  export type AlunoSumOrderByAggregateInput = {
    id?: SortOrder
    cursoId?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type AlunoRelationFilter = {
    is?: AlunoWhereInput
    isNot?: AlunoWhereInput
  }

  export type DisciplinaRelationFilter = {
    is?: DisciplinaWhereInput
    isNot?: DisciplinaWhereInput
  }

  export type AlunoDisciplinaMatriculadoCountOrderByAggregateInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
    data?: SortOrder
  }

  export type AlunoDisciplinaMatriculadoAvgOrderByAggregateInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
  }

  export type AlunoDisciplinaMatriculadoMaxOrderByAggregateInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
    data?: SortOrder
  }

  export type AlunoDisciplinaMatriculadoMinOrderByAggregateInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
    data?: SortOrder
  }

  export type AlunoDisciplinaMatriculadoSumOrderByAggregateInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type AlunoDisciplinaTrancadoCountOrderByAggregateInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
    data?: SortOrder
  }

  export type AlunoDisciplinaTrancadoAvgOrderByAggregateInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
  }

  export type AlunoDisciplinaTrancadoMaxOrderByAggregateInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
    data?: SortOrder
  }

  export type AlunoDisciplinaTrancadoMinOrderByAggregateInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
    data?: SortOrder
  }

  export type AlunoDisciplinaTrancadoSumOrderByAggregateInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
  }

  export type AlunoDisciplinaCursadoCountOrderByAggregateInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
    data?: SortOrder
  }

  export type AlunoDisciplinaCursadoAvgOrderByAggregateInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
  }

  export type AlunoDisciplinaCursadoMaxOrderByAggregateInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
    data?: SortOrder
  }

  export type AlunoDisciplinaCursadoMinOrderByAggregateInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
    data?: SortOrder
  }

  export type AlunoDisciplinaCursadoSumOrderByAggregateInput = {
    id?: SortOrder
    alunoId?: SortOrder
    disciplinaId?: SortOrder
  }

  export type CursoRelationFilter = {
    is?: CursoWhereInput
    isNot?: CursoWhereInput
  }

  export type CursoDisciplinaCursoIdDisciplinaIdCompoundUniqueInput = {
    cursoId: number
    disciplinaId: number
  }

  export type CursoDisciplinaCountOrderByAggregateInput = {
    cursoId?: SortOrder
    disciplinaId?: SortOrder
  }

  export type CursoDisciplinaAvgOrderByAggregateInput = {
    cursoId?: SortOrder
    disciplinaId?: SortOrder
  }

  export type CursoDisciplinaMaxOrderByAggregateInput = {
    cursoId?: SortOrder
    disciplinaId?: SortOrder
  }

  export type CursoDisciplinaMinOrderByAggregateInput = {
    cursoId?: SortOrder
    disciplinaId?: SortOrder
  }

  export type CursoDisciplinaSumOrderByAggregateInput = {
    cursoId?: SortOrder
    disciplinaId?: SortOrder
  }

  export type AlunoDisciplinaMatriculadoCreateNestedManyWithoutDisciplinaInput = {
    create?: XOR<AlunoDisciplinaMatriculadoCreateWithoutDisciplinaInput, AlunoDisciplinaMatriculadoUncheckedCreateWithoutDisciplinaInput> | AlunoDisciplinaMatriculadoCreateWithoutDisciplinaInput[] | AlunoDisciplinaMatriculadoUncheckedCreateWithoutDisciplinaInput[]
    connectOrCreate?: AlunoDisciplinaMatriculadoCreateOrConnectWithoutDisciplinaInput | AlunoDisciplinaMatriculadoCreateOrConnectWithoutDisciplinaInput[]
    createMany?: AlunoDisciplinaMatriculadoCreateManyDisciplinaInputEnvelope
    connect?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
  }

  export type AlunoDisciplinaTrancadoCreateNestedManyWithoutDisciplinaInput = {
    create?: XOR<AlunoDisciplinaTrancadoCreateWithoutDisciplinaInput, AlunoDisciplinaTrancadoUncheckedCreateWithoutDisciplinaInput> | AlunoDisciplinaTrancadoCreateWithoutDisciplinaInput[] | AlunoDisciplinaTrancadoUncheckedCreateWithoutDisciplinaInput[]
    connectOrCreate?: AlunoDisciplinaTrancadoCreateOrConnectWithoutDisciplinaInput | AlunoDisciplinaTrancadoCreateOrConnectWithoutDisciplinaInput[]
    createMany?: AlunoDisciplinaTrancadoCreateManyDisciplinaInputEnvelope
    connect?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
  }

  export type AlunoDisciplinaCursadoCreateNestedManyWithoutDisciplinaInput = {
    create?: XOR<AlunoDisciplinaCursadoCreateWithoutDisciplinaInput, AlunoDisciplinaCursadoUncheckedCreateWithoutDisciplinaInput> | AlunoDisciplinaCursadoCreateWithoutDisciplinaInput[] | AlunoDisciplinaCursadoUncheckedCreateWithoutDisciplinaInput[]
    connectOrCreate?: AlunoDisciplinaCursadoCreateOrConnectWithoutDisciplinaInput | AlunoDisciplinaCursadoCreateOrConnectWithoutDisciplinaInput[]
    createMany?: AlunoDisciplinaCursadoCreateManyDisciplinaInputEnvelope
    connect?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
  }

  export type CursoDisciplinaCreateNestedManyWithoutDisciplinaInput = {
    create?: XOR<CursoDisciplinaCreateWithoutDisciplinaInput, CursoDisciplinaUncheckedCreateWithoutDisciplinaInput> | CursoDisciplinaCreateWithoutDisciplinaInput[] | CursoDisciplinaUncheckedCreateWithoutDisciplinaInput[]
    connectOrCreate?: CursoDisciplinaCreateOrConnectWithoutDisciplinaInput | CursoDisciplinaCreateOrConnectWithoutDisciplinaInput[]
    createMany?: CursoDisciplinaCreateManyDisciplinaInputEnvelope
    connect?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
  }

  export type AlunoDisciplinaMatriculadoUncheckedCreateNestedManyWithoutDisciplinaInput = {
    create?: XOR<AlunoDisciplinaMatriculadoCreateWithoutDisciplinaInput, AlunoDisciplinaMatriculadoUncheckedCreateWithoutDisciplinaInput> | AlunoDisciplinaMatriculadoCreateWithoutDisciplinaInput[] | AlunoDisciplinaMatriculadoUncheckedCreateWithoutDisciplinaInput[]
    connectOrCreate?: AlunoDisciplinaMatriculadoCreateOrConnectWithoutDisciplinaInput | AlunoDisciplinaMatriculadoCreateOrConnectWithoutDisciplinaInput[]
    createMany?: AlunoDisciplinaMatriculadoCreateManyDisciplinaInputEnvelope
    connect?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
  }

  export type AlunoDisciplinaTrancadoUncheckedCreateNestedManyWithoutDisciplinaInput = {
    create?: XOR<AlunoDisciplinaTrancadoCreateWithoutDisciplinaInput, AlunoDisciplinaTrancadoUncheckedCreateWithoutDisciplinaInput> | AlunoDisciplinaTrancadoCreateWithoutDisciplinaInput[] | AlunoDisciplinaTrancadoUncheckedCreateWithoutDisciplinaInput[]
    connectOrCreate?: AlunoDisciplinaTrancadoCreateOrConnectWithoutDisciplinaInput | AlunoDisciplinaTrancadoCreateOrConnectWithoutDisciplinaInput[]
    createMany?: AlunoDisciplinaTrancadoCreateManyDisciplinaInputEnvelope
    connect?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
  }

  export type AlunoDisciplinaCursadoUncheckedCreateNestedManyWithoutDisciplinaInput = {
    create?: XOR<AlunoDisciplinaCursadoCreateWithoutDisciplinaInput, AlunoDisciplinaCursadoUncheckedCreateWithoutDisciplinaInput> | AlunoDisciplinaCursadoCreateWithoutDisciplinaInput[] | AlunoDisciplinaCursadoUncheckedCreateWithoutDisciplinaInput[]
    connectOrCreate?: AlunoDisciplinaCursadoCreateOrConnectWithoutDisciplinaInput | AlunoDisciplinaCursadoCreateOrConnectWithoutDisciplinaInput[]
    createMany?: AlunoDisciplinaCursadoCreateManyDisciplinaInputEnvelope
    connect?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
  }

  export type CursoDisciplinaUncheckedCreateNestedManyWithoutDisciplinaInput = {
    create?: XOR<CursoDisciplinaCreateWithoutDisciplinaInput, CursoDisciplinaUncheckedCreateWithoutDisciplinaInput> | CursoDisciplinaCreateWithoutDisciplinaInput[] | CursoDisciplinaUncheckedCreateWithoutDisciplinaInput[]
    connectOrCreate?: CursoDisciplinaCreateOrConnectWithoutDisciplinaInput | CursoDisciplinaCreateOrConnectWithoutDisciplinaInput[]
    createMany?: CursoDisciplinaCreateManyDisciplinaInputEnvelope
    connect?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type AlunoDisciplinaMatriculadoUpdateManyWithoutDisciplinaNestedInput = {
    create?: XOR<AlunoDisciplinaMatriculadoCreateWithoutDisciplinaInput, AlunoDisciplinaMatriculadoUncheckedCreateWithoutDisciplinaInput> | AlunoDisciplinaMatriculadoCreateWithoutDisciplinaInput[] | AlunoDisciplinaMatriculadoUncheckedCreateWithoutDisciplinaInput[]
    connectOrCreate?: AlunoDisciplinaMatriculadoCreateOrConnectWithoutDisciplinaInput | AlunoDisciplinaMatriculadoCreateOrConnectWithoutDisciplinaInput[]
    upsert?: AlunoDisciplinaMatriculadoUpsertWithWhereUniqueWithoutDisciplinaInput | AlunoDisciplinaMatriculadoUpsertWithWhereUniqueWithoutDisciplinaInput[]
    createMany?: AlunoDisciplinaMatriculadoCreateManyDisciplinaInputEnvelope
    set?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
    disconnect?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
    delete?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
    connect?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
    update?: AlunoDisciplinaMatriculadoUpdateWithWhereUniqueWithoutDisciplinaInput | AlunoDisciplinaMatriculadoUpdateWithWhereUniqueWithoutDisciplinaInput[]
    updateMany?: AlunoDisciplinaMatriculadoUpdateManyWithWhereWithoutDisciplinaInput | AlunoDisciplinaMatriculadoUpdateManyWithWhereWithoutDisciplinaInput[]
    deleteMany?: AlunoDisciplinaMatriculadoScalarWhereInput | AlunoDisciplinaMatriculadoScalarWhereInput[]
  }

  export type AlunoDisciplinaTrancadoUpdateManyWithoutDisciplinaNestedInput = {
    create?: XOR<AlunoDisciplinaTrancadoCreateWithoutDisciplinaInput, AlunoDisciplinaTrancadoUncheckedCreateWithoutDisciplinaInput> | AlunoDisciplinaTrancadoCreateWithoutDisciplinaInput[] | AlunoDisciplinaTrancadoUncheckedCreateWithoutDisciplinaInput[]
    connectOrCreate?: AlunoDisciplinaTrancadoCreateOrConnectWithoutDisciplinaInput | AlunoDisciplinaTrancadoCreateOrConnectWithoutDisciplinaInput[]
    upsert?: AlunoDisciplinaTrancadoUpsertWithWhereUniqueWithoutDisciplinaInput | AlunoDisciplinaTrancadoUpsertWithWhereUniqueWithoutDisciplinaInput[]
    createMany?: AlunoDisciplinaTrancadoCreateManyDisciplinaInputEnvelope
    set?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
    disconnect?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
    delete?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
    connect?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
    update?: AlunoDisciplinaTrancadoUpdateWithWhereUniqueWithoutDisciplinaInput | AlunoDisciplinaTrancadoUpdateWithWhereUniqueWithoutDisciplinaInput[]
    updateMany?: AlunoDisciplinaTrancadoUpdateManyWithWhereWithoutDisciplinaInput | AlunoDisciplinaTrancadoUpdateManyWithWhereWithoutDisciplinaInput[]
    deleteMany?: AlunoDisciplinaTrancadoScalarWhereInput | AlunoDisciplinaTrancadoScalarWhereInput[]
  }

  export type AlunoDisciplinaCursadoUpdateManyWithoutDisciplinaNestedInput = {
    create?: XOR<AlunoDisciplinaCursadoCreateWithoutDisciplinaInput, AlunoDisciplinaCursadoUncheckedCreateWithoutDisciplinaInput> | AlunoDisciplinaCursadoCreateWithoutDisciplinaInput[] | AlunoDisciplinaCursadoUncheckedCreateWithoutDisciplinaInput[]
    connectOrCreate?: AlunoDisciplinaCursadoCreateOrConnectWithoutDisciplinaInput | AlunoDisciplinaCursadoCreateOrConnectWithoutDisciplinaInput[]
    upsert?: AlunoDisciplinaCursadoUpsertWithWhereUniqueWithoutDisciplinaInput | AlunoDisciplinaCursadoUpsertWithWhereUniqueWithoutDisciplinaInput[]
    createMany?: AlunoDisciplinaCursadoCreateManyDisciplinaInputEnvelope
    set?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
    disconnect?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
    delete?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
    connect?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
    update?: AlunoDisciplinaCursadoUpdateWithWhereUniqueWithoutDisciplinaInput | AlunoDisciplinaCursadoUpdateWithWhereUniqueWithoutDisciplinaInput[]
    updateMany?: AlunoDisciplinaCursadoUpdateManyWithWhereWithoutDisciplinaInput | AlunoDisciplinaCursadoUpdateManyWithWhereWithoutDisciplinaInput[]
    deleteMany?: AlunoDisciplinaCursadoScalarWhereInput | AlunoDisciplinaCursadoScalarWhereInput[]
  }

  export type CursoDisciplinaUpdateManyWithoutDisciplinaNestedInput = {
    create?: XOR<CursoDisciplinaCreateWithoutDisciplinaInput, CursoDisciplinaUncheckedCreateWithoutDisciplinaInput> | CursoDisciplinaCreateWithoutDisciplinaInput[] | CursoDisciplinaUncheckedCreateWithoutDisciplinaInput[]
    connectOrCreate?: CursoDisciplinaCreateOrConnectWithoutDisciplinaInput | CursoDisciplinaCreateOrConnectWithoutDisciplinaInput[]
    upsert?: CursoDisciplinaUpsertWithWhereUniqueWithoutDisciplinaInput | CursoDisciplinaUpsertWithWhereUniqueWithoutDisciplinaInput[]
    createMany?: CursoDisciplinaCreateManyDisciplinaInputEnvelope
    set?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
    disconnect?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
    delete?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
    connect?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
    update?: CursoDisciplinaUpdateWithWhereUniqueWithoutDisciplinaInput | CursoDisciplinaUpdateWithWhereUniqueWithoutDisciplinaInput[]
    updateMany?: CursoDisciplinaUpdateManyWithWhereWithoutDisciplinaInput | CursoDisciplinaUpdateManyWithWhereWithoutDisciplinaInput[]
    deleteMany?: CursoDisciplinaScalarWhereInput | CursoDisciplinaScalarWhereInput[]
  }

  export type AlunoDisciplinaMatriculadoUncheckedUpdateManyWithoutDisciplinaNestedInput = {
    create?: XOR<AlunoDisciplinaMatriculadoCreateWithoutDisciplinaInput, AlunoDisciplinaMatriculadoUncheckedCreateWithoutDisciplinaInput> | AlunoDisciplinaMatriculadoCreateWithoutDisciplinaInput[] | AlunoDisciplinaMatriculadoUncheckedCreateWithoutDisciplinaInput[]
    connectOrCreate?: AlunoDisciplinaMatriculadoCreateOrConnectWithoutDisciplinaInput | AlunoDisciplinaMatriculadoCreateOrConnectWithoutDisciplinaInput[]
    upsert?: AlunoDisciplinaMatriculadoUpsertWithWhereUniqueWithoutDisciplinaInput | AlunoDisciplinaMatriculadoUpsertWithWhereUniqueWithoutDisciplinaInput[]
    createMany?: AlunoDisciplinaMatriculadoCreateManyDisciplinaInputEnvelope
    set?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
    disconnect?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
    delete?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
    connect?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
    update?: AlunoDisciplinaMatriculadoUpdateWithWhereUniqueWithoutDisciplinaInput | AlunoDisciplinaMatriculadoUpdateWithWhereUniqueWithoutDisciplinaInput[]
    updateMany?: AlunoDisciplinaMatriculadoUpdateManyWithWhereWithoutDisciplinaInput | AlunoDisciplinaMatriculadoUpdateManyWithWhereWithoutDisciplinaInput[]
    deleteMany?: AlunoDisciplinaMatriculadoScalarWhereInput | AlunoDisciplinaMatriculadoScalarWhereInput[]
  }

  export type AlunoDisciplinaTrancadoUncheckedUpdateManyWithoutDisciplinaNestedInput = {
    create?: XOR<AlunoDisciplinaTrancadoCreateWithoutDisciplinaInput, AlunoDisciplinaTrancadoUncheckedCreateWithoutDisciplinaInput> | AlunoDisciplinaTrancadoCreateWithoutDisciplinaInput[] | AlunoDisciplinaTrancadoUncheckedCreateWithoutDisciplinaInput[]
    connectOrCreate?: AlunoDisciplinaTrancadoCreateOrConnectWithoutDisciplinaInput | AlunoDisciplinaTrancadoCreateOrConnectWithoutDisciplinaInput[]
    upsert?: AlunoDisciplinaTrancadoUpsertWithWhereUniqueWithoutDisciplinaInput | AlunoDisciplinaTrancadoUpsertWithWhereUniqueWithoutDisciplinaInput[]
    createMany?: AlunoDisciplinaTrancadoCreateManyDisciplinaInputEnvelope
    set?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
    disconnect?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
    delete?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
    connect?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
    update?: AlunoDisciplinaTrancadoUpdateWithWhereUniqueWithoutDisciplinaInput | AlunoDisciplinaTrancadoUpdateWithWhereUniqueWithoutDisciplinaInput[]
    updateMany?: AlunoDisciplinaTrancadoUpdateManyWithWhereWithoutDisciplinaInput | AlunoDisciplinaTrancadoUpdateManyWithWhereWithoutDisciplinaInput[]
    deleteMany?: AlunoDisciplinaTrancadoScalarWhereInput | AlunoDisciplinaTrancadoScalarWhereInput[]
  }

  export type AlunoDisciplinaCursadoUncheckedUpdateManyWithoutDisciplinaNestedInput = {
    create?: XOR<AlunoDisciplinaCursadoCreateWithoutDisciplinaInput, AlunoDisciplinaCursadoUncheckedCreateWithoutDisciplinaInput> | AlunoDisciplinaCursadoCreateWithoutDisciplinaInput[] | AlunoDisciplinaCursadoUncheckedCreateWithoutDisciplinaInput[]
    connectOrCreate?: AlunoDisciplinaCursadoCreateOrConnectWithoutDisciplinaInput | AlunoDisciplinaCursadoCreateOrConnectWithoutDisciplinaInput[]
    upsert?: AlunoDisciplinaCursadoUpsertWithWhereUniqueWithoutDisciplinaInput | AlunoDisciplinaCursadoUpsertWithWhereUniqueWithoutDisciplinaInput[]
    createMany?: AlunoDisciplinaCursadoCreateManyDisciplinaInputEnvelope
    set?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
    disconnect?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
    delete?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
    connect?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
    update?: AlunoDisciplinaCursadoUpdateWithWhereUniqueWithoutDisciplinaInput | AlunoDisciplinaCursadoUpdateWithWhereUniqueWithoutDisciplinaInput[]
    updateMany?: AlunoDisciplinaCursadoUpdateManyWithWhereWithoutDisciplinaInput | AlunoDisciplinaCursadoUpdateManyWithWhereWithoutDisciplinaInput[]
    deleteMany?: AlunoDisciplinaCursadoScalarWhereInput | AlunoDisciplinaCursadoScalarWhereInput[]
  }

  export type CursoDisciplinaUncheckedUpdateManyWithoutDisciplinaNestedInput = {
    create?: XOR<CursoDisciplinaCreateWithoutDisciplinaInput, CursoDisciplinaUncheckedCreateWithoutDisciplinaInput> | CursoDisciplinaCreateWithoutDisciplinaInput[] | CursoDisciplinaUncheckedCreateWithoutDisciplinaInput[]
    connectOrCreate?: CursoDisciplinaCreateOrConnectWithoutDisciplinaInput | CursoDisciplinaCreateOrConnectWithoutDisciplinaInput[]
    upsert?: CursoDisciplinaUpsertWithWhereUniqueWithoutDisciplinaInput | CursoDisciplinaUpsertWithWhereUniqueWithoutDisciplinaInput[]
    createMany?: CursoDisciplinaCreateManyDisciplinaInputEnvelope
    set?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
    disconnect?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
    delete?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
    connect?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
    update?: CursoDisciplinaUpdateWithWhereUniqueWithoutDisciplinaInput | CursoDisciplinaUpdateWithWhereUniqueWithoutDisciplinaInput[]
    updateMany?: CursoDisciplinaUpdateManyWithWhereWithoutDisciplinaInput | CursoDisciplinaUpdateManyWithWhereWithoutDisciplinaInput[]
    deleteMany?: CursoDisciplinaScalarWhereInput | CursoDisciplinaScalarWhereInput[]
  }

  export type AlunoCreateNestedManyWithoutCursoInput = {
    create?: XOR<AlunoCreateWithoutCursoInput, AlunoUncheckedCreateWithoutCursoInput> | AlunoCreateWithoutCursoInput[] | AlunoUncheckedCreateWithoutCursoInput[]
    connectOrCreate?: AlunoCreateOrConnectWithoutCursoInput | AlunoCreateOrConnectWithoutCursoInput[]
    createMany?: AlunoCreateManyCursoInputEnvelope
    connect?: AlunoWhereUniqueInput | AlunoWhereUniqueInput[]
  }

  export type CursoDisciplinaCreateNestedManyWithoutCursoInput = {
    create?: XOR<CursoDisciplinaCreateWithoutCursoInput, CursoDisciplinaUncheckedCreateWithoutCursoInput> | CursoDisciplinaCreateWithoutCursoInput[] | CursoDisciplinaUncheckedCreateWithoutCursoInput[]
    connectOrCreate?: CursoDisciplinaCreateOrConnectWithoutCursoInput | CursoDisciplinaCreateOrConnectWithoutCursoInput[]
    createMany?: CursoDisciplinaCreateManyCursoInputEnvelope
    connect?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
  }

  export type AlunoUncheckedCreateNestedManyWithoutCursoInput = {
    create?: XOR<AlunoCreateWithoutCursoInput, AlunoUncheckedCreateWithoutCursoInput> | AlunoCreateWithoutCursoInput[] | AlunoUncheckedCreateWithoutCursoInput[]
    connectOrCreate?: AlunoCreateOrConnectWithoutCursoInput | AlunoCreateOrConnectWithoutCursoInput[]
    createMany?: AlunoCreateManyCursoInputEnvelope
    connect?: AlunoWhereUniqueInput | AlunoWhereUniqueInput[]
  }

  export type CursoDisciplinaUncheckedCreateNestedManyWithoutCursoInput = {
    create?: XOR<CursoDisciplinaCreateWithoutCursoInput, CursoDisciplinaUncheckedCreateWithoutCursoInput> | CursoDisciplinaCreateWithoutCursoInput[] | CursoDisciplinaUncheckedCreateWithoutCursoInput[]
    connectOrCreate?: CursoDisciplinaCreateOrConnectWithoutCursoInput | CursoDisciplinaCreateOrConnectWithoutCursoInput[]
    createMany?: CursoDisciplinaCreateManyCursoInputEnvelope
    connect?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type AlunoUpdateManyWithoutCursoNestedInput = {
    create?: XOR<AlunoCreateWithoutCursoInput, AlunoUncheckedCreateWithoutCursoInput> | AlunoCreateWithoutCursoInput[] | AlunoUncheckedCreateWithoutCursoInput[]
    connectOrCreate?: AlunoCreateOrConnectWithoutCursoInput | AlunoCreateOrConnectWithoutCursoInput[]
    upsert?: AlunoUpsertWithWhereUniqueWithoutCursoInput | AlunoUpsertWithWhereUniqueWithoutCursoInput[]
    createMany?: AlunoCreateManyCursoInputEnvelope
    set?: AlunoWhereUniqueInput | AlunoWhereUniqueInput[]
    disconnect?: AlunoWhereUniqueInput | AlunoWhereUniqueInput[]
    delete?: AlunoWhereUniqueInput | AlunoWhereUniqueInput[]
    connect?: AlunoWhereUniqueInput | AlunoWhereUniqueInput[]
    update?: AlunoUpdateWithWhereUniqueWithoutCursoInput | AlunoUpdateWithWhereUniqueWithoutCursoInput[]
    updateMany?: AlunoUpdateManyWithWhereWithoutCursoInput | AlunoUpdateManyWithWhereWithoutCursoInput[]
    deleteMany?: AlunoScalarWhereInput | AlunoScalarWhereInput[]
  }

  export type CursoDisciplinaUpdateManyWithoutCursoNestedInput = {
    create?: XOR<CursoDisciplinaCreateWithoutCursoInput, CursoDisciplinaUncheckedCreateWithoutCursoInput> | CursoDisciplinaCreateWithoutCursoInput[] | CursoDisciplinaUncheckedCreateWithoutCursoInput[]
    connectOrCreate?: CursoDisciplinaCreateOrConnectWithoutCursoInput | CursoDisciplinaCreateOrConnectWithoutCursoInput[]
    upsert?: CursoDisciplinaUpsertWithWhereUniqueWithoutCursoInput | CursoDisciplinaUpsertWithWhereUniqueWithoutCursoInput[]
    createMany?: CursoDisciplinaCreateManyCursoInputEnvelope
    set?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
    disconnect?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
    delete?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
    connect?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
    update?: CursoDisciplinaUpdateWithWhereUniqueWithoutCursoInput | CursoDisciplinaUpdateWithWhereUniqueWithoutCursoInput[]
    updateMany?: CursoDisciplinaUpdateManyWithWhereWithoutCursoInput | CursoDisciplinaUpdateManyWithWhereWithoutCursoInput[]
    deleteMany?: CursoDisciplinaScalarWhereInput | CursoDisciplinaScalarWhereInput[]
  }

  export type AlunoUncheckedUpdateManyWithoutCursoNestedInput = {
    create?: XOR<AlunoCreateWithoutCursoInput, AlunoUncheckedCreateWithoutCursoInput> | AlunoCreateWithoutCursoInput[] | AlunoUncheckedCreateWithoutCursoInput[]
    connectOrCreate?: AlunoCreateOrConnectWithoutCursoInput | AlunoCreateOrConnectWithoutCursoInput[]
    upsert?: AlunoUpsertWithWhereUniqueWithoutCursoInput | AlunoUpsertWithWhereUniqueWithoutCursoInput[]
    createMany?: AlunoCreateManyCursoInputEnvelope
    set?: AlunoWhereUniqueInput | AlunoWhereUniqueInput[]
    disconnect?: AlunoWhereUniqueInput | AlunoWhereUniqueInput[]
    delete?: AlunoWhereUniqueInput | AlunoWhereUniqueInput[]
    connect?: AlunoWhereUniqueInput | AlunoWhereUniqueInput[]
    update?: AlunoUpdateWithWhereUniqueWithoutCursoInput | AlunoUpdateWithWhereUniqueWithoutCursoInput[]
    updateMany?: AlunoUpdateManyWithWhereWithoutCursoInput | AlunoUpdateManyWithWhereWithoutCursoInput[]
    deleteMany?: AlunoScalarWhereInput | AlunoScalarWhereInput[]
  }

  export type CursoDisciplinaUncheckedUpdateManyWithoutCursoNestedInput = {
    create?: XOR<CursoDisciplinaCreateWithoutCursoInput, CursoDisciplinaUncheckedCreateWithoutCursoInput> | CursoDisciplinaCreateWithoutCursoInput[] | CursoDisciplinaUncheckedCreateWithoutCursoInput[]
    connectOrCreate?: CursoDisciplinaCreateOrConnectWithoutCursoInput | CursoDisciplinaCreateOrConnectWithoutCursoInput[]
    upsert?: CursoDisciplinaUpsertWithWhereUniqueWithoutCursoInput | CursoDisciplinaUpsertWithWhereUniqueWithoutCursoInput[]
    createMany?: CursoDisciplinaCreateManyCursoInputEnvelope
    set?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
    disconnect?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
    delete?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
    connect?: CursoDisciplinaWhereUniqueInput | CursoDisciplinaWhereUniqueInput[]
    update?: CursoDisciplinaUpdateWithWhereUniqueWithoutCursoInput | CursoDisciplinaUpdateWithWhereUniqueWithoutCursoInput[]
    updateMany?: CursoDisciplinaUpdateManyWithWhereWithoutCursoInput | CursoDisciplinaUpdateManyWithWhereWithoutCursoInput[]
    deleteMany?: CursoDisciplinaScalarWhereInput | CursoDisciplinaScalarWhereInput[]
  }

  export type CursoCreateNestedOneWithoutAlunosInput = {
    create?: XOR<CursoCreateWithoutAlunosInput, CursoUncheckedCreateWithoutAlunosInput>
    connectOrCreate?: CursoCreateOrConnectWithoutAlunosInput
    connect?: CursoWhereUniqueInput
  }

  export type AlunoDisciplinaMatriculadoCreateNestedManyWithoutAlunoInput = {
    create?: XOR<AlunoDisciplinaMatriculadoCreateWithoutAlunoInput, AlunoDisciplinaMatriculadoUncheckedCreateWithoutAlunoInput> | AlunoDisciplinaMatriculadoCreateWithoutAlunoInput[] | AlunoDisciplinaMatriculadoUncheckedCreateWithoutAlunoInput[]
    connectOrCreate?: AlunoDisciplinaMatriculadoCreateOrConnectWithoutAlunoInput | AlunoDisciplinaMatriculadoCreateOrConnectWithoutAlunoInput[]
    createMany?: AlunoDisciplinaMatriculadoCreateManyAlunoInputEnvelope
    connect?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
  }

  export type AlunoDisciplinaTrancadoCreateNestedManyWithoutAlunoInput = {
    create?: XOR<AlunoDisciplinaTrancadoCreateWithoutAlunoInput, AlunoDisciplinaTrancadoUncheckedCreateWithoutAlunoInput> | AlunoDisciplinaTrancadoCreateWithoutAlunoInput[] | AlunoDisciplinaTrancadoUncheckedCreateWithoutAlunoInput[]
    connectOrCreate?: AlunoDisciplinaTrancadoCreateOrConnectWithoutAlunoInput | AlunoDisciplinaTrancadoCreateOrConnectWithoutAlunoInput[]
    createMany?: AlunoDisciplinaTrancadoCreateManyAlunoInputEnvelope
    connect?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
  }

  export type AlunoDisciplinaCursadoCreateNestedManyWithoutAlunoInput = {
    create?: XOR<AlunoDisciplinaCursadoCreateWithoutAlunoInput, AlunoDisciplinaCursadoUncheckedCreateWithoutAlunoInput> | AlunoDisciplinaCursadoCreateWithoutAlunoInput[] | AlunoDisciplinaCursadoUncheckedCreateWithoutAlunoInput[]
    connectOrCreate?: AlunoDisciplinaCursadoCreateOrConnectWithoutAlunoInput | AlunoDisciplinaCursadoCreateOrConnectWithoutAlunoInput[]
    createMany?: AlunoDisciplinaCursadoCreateManyAlunoInputEnvelope
    connect?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
  }

  export type AlunoDisciplinaMatriculadoUncheckedCreateNestedManyWithoutAlunoInput = {
    create?: XOR<AlunoDisciplinaMatriculadoCreateWithoutAlunoInput, AlunoDisciplinaMatriculadoUncheckedCreateWithoutAlunoInput> | AlunoDisciplinaMatriculadoCreateWithoutAlunoInput[] | AlunoDisciplinaMatriculadoUncheckedCreateWithoutAlunoInput[]
    connectOrCreate?: AlunoDisciplinaMatriculadoCreateOrConnectWithoutAlunoInput | AlunoDisciplinaMatriculadoCreateOrConnectWithoutAlunoInput[]
    createMany?: AlunoDisciplinaMatriculadoCreateManyAlunoInputEnvelope
    connect?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
  }

  export type AlunoDisciplinaTrancadoUncheckedCreateNestedManyWithoutAlunoInput = {
    create?: XOR<AlunoDisciplinaTrancadoCreateWithoutAlunoInput, AlunoDisciplinaTrancadoUncheckedCreateWithoutAlunoInput> | AlunoDisciplinaTrancadoCreateWithoutAlunoInput[] | AlunoDisciplinaTrancadoUncheckedCreateWithoutAlunoInput[]
    connectOrCreate?: AlunoDisciplinaTrancadoCreateOrConnectWithoutAlunoInput | AlunoDisciplinaTrancadoCreateOrConnectWithoutAlunoInput[]
    createMany?: AlunoDisciplinaTrancadoCreateManyAlunoInputEnvelope
    connect?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
  }

  export type AlunoDisciplinaCursadoUncheckedCreateNestedManyWithoutAlunoInput = {
    create?: XOR<AlunoDisciplinaCursadoCreateWithoutAlunoInput, AlunoDisciplinaCursadoUncheckedCreateWithoutAlunoInput> | AlunoDisciplinaCursadoCreateWithoutAlunoInput[] | AlunoDisciplinaCursadoUncheckedCreateWithoutAlunoInput[]
    connectOrCreate?: AlunoDisciplinaCursadoCreateOrConnectWithoutAlunoInput | AlunoDisciplinaCursadoCreateOrConnectWithoutAlunoInput[]
    createMany?: AlunoDisciplinaCursadoCreateManyAlunoInputEnvelope
    connect?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type CursoUpdateOneWithoutAlunosNestedInput = {
    create?: XOR<CursoCreateWithoutAlunosInput, CursoUncheckedCreateWithoutAlunosInput>
    connectOrCreate?: CursoCreateOrConnectWithoutAlunosInput
    upsert?: CursoUpsertWithoutAlunosInput
    disconnect?: CursoWhereInput | boolean
    delete?: CursoWhereInput | boolean
    connect?: CursoWhereUniqueInput
    update?: XOR<XOR<CursoUpdateToOneWithWhereWithoutAlunosInput, CursoUpdateWithoutAlunosInput>, CursoUncheckedUpdateWithoutAlunosInput>
  }

  export type AlunoDisciplinaMatriculadoUpdateManyWithoutAlunoNestedInput = {
    create?: XOR<AlunoDisciplinaMatriculadoCreateWithoutAlunoInput, AlunoDisciplinaMatriculadoUncheckedCreateWithoutAlunoInput> | AlunoDisciplinaMatriculadoCreateWithoutAlunoInput[] | AlunoDisciplinaMatriculadoUncheckedCreateWithoutAlunoInput[]
    connectOrCreate?: AlunoDisciplinaMatriculadoCreateOrConnectWithoutAlunoInput | AlunoDisciplinaMatriculadoCreateOrConnectWithoutAlunoInput[]
    upsert?: AlunoDisciplinaMatriculadoUpsertWithWhereUniqueWithoutAlunoInput | AlunoDisciplinaMatriculadoUpsertWithWhereUniqueWithoutAlunoInput[]
    createMany?: AlunoDisciplinaMatriculadoCreateManyAlunoInputEnvelope
    set?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
    disconnect?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
    delete?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
    connect?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
    update?: AlunoDisciplinaMatriculadoUpdateWithWhereUniqueWithoutAlunoInput | AlunoDisciplinaMatriculadoUpdateWithWhereUniqueWithoutAlunoInput[]
    updateMany?: AlunoDisciplinaMatriculadoUpdateManyWithWhereWithoutAlunoInput | AlunoDisciplinaMatriculadoUpdateManyWithWhereWithoutAlunoInput[]
    deleteMany?: AlunoDisciplinaMatriculadoScalarWhereInput | AlunoDisciplinaMatriculadoScalarWhereInput[]
  }

  export type AlunoDisciplinaTrancadoUpdateManyWithoutAlunoNestedInput = {
    create?: XOR<AlunoDisciplinaTrancadoCreateWithoutAlunoInput, AlunoDisciplinaTrancadoUncheckedCreateWithoutAlunoInput> | AlunoDisciplinaTrancadoCreateWithoutAlunoInput[] | AlunoDisciplinaTrancadoUncheckedCreateWithoutAlunoInput[]
    connectOrCreate?: AlunoDisciplinaTrancadoCreateOrConnectWithoutAlunoInput | AlunoDisciplinaTrancadoCreateOrConnectWithoutAlunoInput[]
    upsert?: AlunoDisciplinaTrancadoUpsertWithWhereUniqueWithoutAlunoInput | AlunoDisciplinaTrancadoUpsertWithWhereUniqueWithoutAlunoInput[]
    createMany?: AlunoDisciplinaTrancadoCreateManyAlunoInputEnvelope
    set?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
    disconnect?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
    delete?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
    connect?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
    update?: AlunoDisciplinaTrancadoUpdateWithWhereUniqueWithoutAlunoInput | AlunoDisciplinaTrancadoUpdateWithWhereUniqueWithoutAlunoInput[]
    updateMany?: AlunoDisciplinaTrancadoUpdateManyWithWhereWithoutAlunoInput | AlunoDisciplinaTrancadoUpdateManyWithWhereWithoutAlunoInput[]
    deleteMany?: AlunoDisciplinaTrancadoScalarWhereInput | AlunoDisciplinaTrancadoScalarWhereInput[]
  }

  export type AlunoDisciplinaCursadoUpdateManyWithoutAlunoNestedInput = {
    create?: XOR<AlunoDisciplinaCursadoCreateWithoutAlunoInput, AlunoDisciplinaCursadoUncheckedCreateWithoutAlunoInput> | AlunoDisciplinaCursadoCreateWithoutAlunoInput[] | AlunoDisciplinaCursadoUncheckedCreateWithoutAlunoInput[]
    connectOrCreate?: AlunoDisciplinaCursadoCreateOrConnectWithoutAlunoInput | AlunoDisciplinaCursadoCreateOrConnectWithoutAlunoInput[]
    upsert?: AlunoDisciplinaCursadoUpsertWithWhereUniqueWithoutAlunoInput | AlunoDisciplinaCursadoUpsertWithWhereUniqueWithoutAlunoInput[]
    createMany?: AlunoDisciplinaCursadoCreateManyAlunoInputEnvelope
    set?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
    disconnect?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
    delete?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
    connect?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
    update?: AlunoDisciplinaCursadoUpdateWithWhereUniqueWithoutAlunoInput | AlunoDisciplinaCursadoUpdateWithWhereUniqueWithoutAlunoInput[]
    updateMany?: AlunoDisciplinaCursadoUpdateManyWithWhereWithoutAlunoInput | AlunoDisciplinaCursadoUpdateManyWithWhereWithoutAlunoInput[]
    deleteMany?: AlunoDisciplinaCursadoScalarWhereInput | AlunoDisciplinaCursadoScalarWhereInput[]
  }

  export type AlunoDisciplinaMatriculadoUncheckedUpdateManyWithoutAlunoNestedInput = {
    create?: XOR<AlunoDisciplinaMatriculadoCreateWithoutAlunoInput, AlunoDisciplinaMatriculadoUncheckedCreateWithoutAlunoInput> | AlunoDisciplinaMatriculadoCreateWithoutAlunoInput[] | AlunoDisciplinaMatriculadoUncheckedCreateWithoutAlunoInput[]
    connectOrCreate?: AlunoDisciplinaMatriculadoCreateOrConnectWithoutAlunoInput | AlunoDisciplinaMatriculadoCreateOrConnectWithoutAlunoInput[]
    upsert?: AlunoDisciplinaMatriculadoUpsertWithWhereUniqueWithoutAlunoInput | AlunoDisciplinaMatriculadoUpsertWithWhereUniqueWithoutAlunoInput[]
    createMany?: AlunoDisciplinaMatriculadoCreateManyAlunoInputEnvelope
    set?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
    disconnect?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
    delete?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
    connect?: AlunoDisciplinaMatriculadoWhereUniqueInput | AlunoDisciplinaMatriculadoWhereUniqueInput[]
    update?: AlunoDisciplinaMatriculadoUpdateWithWhereUniqueWithoutAlunoInput | AlunoDisciplinaMatriculadoUpdateWithWhereUniqueWithoutAlunoInput[]
    updateMany?: AlunoDisciplinaMatriculadoUpdateManyWithWhereWithoutAlunoInput | AlunoDisciplinaMatriculadoUpdateManyWithWhereWithoutAlunoInput[]
    deleteMany?: AlunoDisciplinaMatriculadoScalarWhereInput | AlunoDisciplinaMatriculadoScalarWhereInput[]
  }

  export type AlunoDisciplinaTrancadoUncheckedUpdateManyWithoutAlunoNestedInput = {
    create?: XOR<AlunoDisciplinaTrancadoCreateWithoutAlunoInput, AlunoDisciplinaTrancadoUncheckedCreateWithoutAlunoInput> | AlunoDisciplinaTrancadoCreateWithoutAlunoInput[] | AlunoDisciplinaTrancadoUncheckedCreateWithoutAlunoInput[]
    connectOrCreate?: AlunoDisciplinaTrancadoCreateOrConnectWithoutAlunoInput | AlunoDisciplinaTrancadoCreateOrConnectWithoutAlunoInput[]
    upsert?: AlunoDisciplinaTrancadoUpsertWithWhereUniqueWithoutAlunoInput | AlunoDisciplinaTrancadoUpsertWithWhereUniqueWithoutAlunoInput[]
    createMany?: AlunoDisciplinaTrancadoCreateManyAlunoInputEnvelope
    set?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
    disconnect?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
    delete?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
    connect?: AlunoDisciplinaTrancadoWhereUniqueInput | AlunoDisciplinaTrancadoWhereUniqueInput[]
    update?: AlunoDisciplinaTrancadoUpdateWithWhereUniqueWithoutAlunoInput | AlunoDisciplinaTrancadoUpdateWithWhereUniqueWithoutAlunoInput[]
    updateMany?: AlunoDisciplinaTrancadoUpdateManyWithWhereWithoutAlunoInput | AlunoDisciplinaTrancadoUpdateManyWithWhereWithoutAlunoInput[]
    deleteMany?: AlunoDisciplinaTrancadoScalarWhereInput | AlunoDisciplinaTrancadoScalarWhereInput[]
  }

  export type AlunoDisciplinaCursadoUncheckedUpdateManyWithoutAlunoNestedInput = {
    create?: XOR<AlunoDisciplinaCursadoCreateWithoutAlunoInput, AlunoDisciplinaCursadoUncheckedCreateWithoutAlunoInput> | AlunoDisciplinaCursadoCreateWithoutAlunoInput[] | AlunoDisciplinaCursadoUncheckedCreateWithoutAlunoInput[]
    connectOrCreate?: AlunoDisciplinaCursadoCreateOrConnectWithoutAlunoInput | AlunoDisciplinaCursadoCreateOrConnectWithoutAlunoInput[]
    upsert?: AlunoDisciplinaCursadoUpsertWithWhereUniqueWithoutAlunoInput | AlunoDisciplinaCursadoUpsertWithWhereUniqueWithoutAlunoInput[]
    createMany?: AlunoDisciplinaCursadoCreateManyAlunoInputEnvelope
    set?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
    disconnect?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
    delete?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
    connect?: AlunoDisciplinaCursadoWhereUniqueInput | AlunoDisciplinaCursadoWhereUniqueInput[]
    update?: AlunoDisciplinaCursadoUpdateWithWhereUniqueWithoutAlunoInput | AlunoDisciplinaCursadoUpdateWithWhereUniqueWithoutAlunoInput[]
    updateMany?: AlunoDisciplinaCursadoUpdateManyWithWhereWithoutAlunoInput | AlunoDisciplinaCursadoUpdateManyWithWhereWithoutAlunoInput[]
    deleteMany?: AlunoDisciplinaCursadoScalarWhereInput | AlunoDisciplinaCursadoScalarWhereInput[]
  }

  export type AlunoCreateNestedOneWithoutDisciplinasMatriculadoInput = {
    create?: XOR<AlunoCreateWithoutDisciplinasMatriculadoInput, AlunoUncheckedCreateWithoutDisciplinasMatriculadoInput>
    connectOrCreate?: AlunoCreateOrConnectWithoutDisciplinasMatriculadoInput
    connect?: AlunoWhereUniqueInput
  }

  export type DisciplinaCreateNestedOneWithoutAlunosAtivosInput = {
    create?: XOR<DisciplinaCreateWithoutAlunosAtivosInput, DisciplinaUncheckedCreateWithoutAlunosAtivosInput>
    connectOrCreate?: DisciplinaCreateOrConnectWithoutAlunosAtivosInput
    connect?: DisciplinaWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type AlunoUpdateOneRequiredWithoutDisciplinasMatriculadoNestedInput = {
    create?: XOR<AlunoCreateWithoutDisciplinasMatriculadoInput, AlunoUncheckedCreateWithoutDisciplinasMatriculadoInput>
    connectOrCreate?: AlunoCreateOrConnectWithoutDisciplinasMatriculadoInput
    upsert?: AlunoUpsertWithoutDisciplinasMatriculadoInput
    connect?: AlunoWhereUniqueInput
    update?: XOR<XOR<AlunoUpdateToOneWithWhereWithoutDisciplinasMatriculadoInput, AlunoUpdateWithoutDisciplinasMatriculadoInput>, AlunoUncheckedUpdateWithoutDisciplinasMatriculadoInput>
  }

  export type DisciplinaUpdateOneRequiredWithoutAlunosAtivosNestedInput = {
    create?: XOR<DisciplinaCreateWithoutAlunosAtivosInput, DisciplinaUncheckedCreateWithoutAlunosAtivosInput>
    connectOrCreate?: DisciplinaCreateOrConnectWithoutAlunosAtivosInput
    upsert?: DisciplinaUpsertWithoutAlunosAtivosInput
    connect?: DisciplinaWhereUniqueInput
    update?: XOR<XOR<DisciplinaUpdateToOneWithWhereWithoutAlunosAtivosInput, DisciplinaUpdateWithoutAlunosAtivosInput>, DisciplinaUncheckedUpdateWithoutAlunosAtivosInput>
  }

  export type AlunoCreateNestedOneWithoutDisciplinasTrancadoInput = {
    create?: XOR<AlunoCreateWithoutDisciplinasTrancadoInput, AlunoUncheckedCreateWithoutDisciplinasTrancadoInput>
    connectOrCreate?: AlunoCreateOrConnectWithoutDisciplinasTrancadoInput
    connect?: AlunoWhereUniqueInput
  }

  export type DisciplinaCreateNestedOneWithoutAlunosTrancadosInput = {
    create?: XOR<DisciplinaCreateWithoutAlunosTrancadosInput, DisciplinaUncheckedCreateWithoutAlunosTrancadosInput>
    connectOrCreate?: DisciplinaCreateOrConnectWithoutAlunosTrancadosInput
    connect?: DisciplinaWhereUniqueInput
  }

  export type AlunoUpdateOneRequiredWithoutDisciplinasTrancadoNestedInput = {
    create?: XOR<AlunoCreateWithoutDisciplinasTrancadoInput, AlunoUncheckedCreateWithoutDisciplinasTrancadoInput>
    connectOrCreate?: AlunoCreateOrConnectWithoutDisciplinasTrancadoInput
    upsert?: AlunoUpsertWithoutDisciplinasTrancadoInput
    connect?: AlunoWhereUniqueInput
    update?: XOR<XOR<AlunoUpdateToOneWithWhereWithoutDisciplinasTrancadoInput, AlunoUpdateWithoutDisciplinasTrancadoInput>, AlunoUncheckedUpdateWithoutDisciplinasTrancadoInput>
  }

  export type DisciplinaUpdateOneRequiredWithoutAlunosTrancadosNestedInput = {
    create?: XOR<DisciplinaCreateWithoutAlunosTrancadosInput, DisciplinaUncheckedCreateWithoutAlunosTrancadosInput>
    connectOrCreate?: DisciplinaCreateOrConnectWithoutAlunosTrancadosInput
    upsert?: DisciplinaUpsertWithoutAlunosTrancadosInput
    connect?: DisciplinaWhereUniqueInput
    update?: XOR<XOR<DisciplinaUpdateToOneWithWhereWithoutAlunosTrancadosInput, DisciplinaUpdateWithoutAlunosTrancadosInput>, DisciplinaUncheckedUpdateWithoutAlunosTrancadosInput>
  }

  export type AlunoCreateNestedOneWithoutDisciplinasCursadoInput = {
    create?: XOR<AlunoCreateWithoutDisciplinasCursadoInput, AlunoUncheckedCreateWithoutDisciplinasCursadoInput>
    connectOrCreate?: AlunoCreateOrConnectWithoutDisciplinasCursadoInput
    connect?: AlunoWhereUniqueInput
  }

  export type DisciplinaCreateNestedOneWithoutAlunosConcluidosInput = {
    create?: XOR<DisciplinaCreateWithoutAlunosConcluidosInput, DisciplinaUncheckedCreateWithoutAlunosConcluidosInput>
    connectOrCreate?: DisciplinaCreateOrConnectWithoutAlunosConcluidosInput
    connect?: DisciplinaWhereUniqueInput
  }

  export type AlunoUpdateOneRequiredWithoutDisciplinasCursadoNestedInput = {
    create?: XOR<AlunoCreateWithoutDisciplinasCursadoInput, AlunoUncheckedCreateWithoutDisciplinasCursadoInput>
    connectOrCreate?: AlunoCreateOrConnectWithoutDisciplinasCursadoInput
    upsert?: AlunoUpsertWithoutDisciplinasCursadoInput
    connect?: AlunoWhereUniqueInput
    update?: XOR<XOR<AlunoUpdateToOneWithWhereWithoutDisciplinasCursadoInput, AlunoUpdateWithoutDisciplinasCursadoInput>, AlunoUncheckedUpdateWithoutDisciplinasCursadoInput>
  }

  export type DisciplinaUpdateOneRequiredWithoutAlunosConcluidosNestedInput = {
    create?: XOR<DisciplinaCreateWithoutAlunosConcluidosInput, DisciplinaUncheckedCreateWithoutAlunosConcluidosInput>
    connectOrCreate?: DisciplinaCreateOrConnectWithoutAlunosConcluidosInput
    upsert?: DisciplinaUpsertWithoutAlunosConcluidosInput
    connect?: DisciplinaWhereUniqueInput
    update?: XOR<XOR<DisciplinaUpdateToOneWithWhereWithoutAlunosConcluidosInput, DisciplinaUpdateWithoutAlunosConcluidosInput>, DisciplinaUncheckedUpdateWithoutAlunosConcluidosInput>
  }

  export type CursoCreateNestedOneWithoutDisciplinasInput = {
    create?: XOR<CursoCreateWithoutDisciplinasInput, CursoUncheckedCreateWithoutDisciplinasInput>
    connectOrCreate?: CursoCreateOrConnectWithoutDisciplinasInput
    connect?: CursoWhereUniqueInput
  }

  export type DisciplinaCreateNestedOneWithoutCursosInput = {
    create?: XOR<DisciplinaCreateWithoutCursosInput, DisciplinaUncheckedCreateWithoutCursosInput>
    connectOrCreate?: DisciplinaCreateOrConnectWithoutCursosInput
    connect?: DisciplinaWhereUniqueInput
  }

  export type CursoUpdateOneRequiredWithoutDisciplinasNestedInput = {
    create?: XOR<CursoCreateWithoutDisciplinasInput, CursoUncheckedCreateWithoutDisciplinasInput>
    connectOrCreate?: CursoCreateOrConnectWithoutDisciplinasInput
    upsert?: CursoUpsertWithoutDisciplinasInput
    connect?: CursoWhereUniqueInput
    update?: XOR<XOR<CursoUpdateToOneWithWhereWithoutDisciplinasInput, CursoUpdateWithoutDisciplinasInput>, CursoUncheckedUpdateWithoutDisciplinasInput>
  }

  export type DisciplinaUpdateOneRequiredWithoutCursosNestedInput = {
    create?: XOR<DisciplinaCreateWithoutCursosInput, DisciplinaUncheckedCreateWithoutCursosInput>
    connectOrCreate?: DisciplinaCreateOrConnectWithoutCursosInput
    upsert?: DisciplinaUpsertWithoutCursosInput
    connect?: DisciplinaWhereUniqueInput
    update?: XOR<XOR<DisciplinaUpdateToOneWithWhereWithoutCursosInput, DisciplinaUpdateWithoutCursosInput>, DisciplinaUncheckedUpdateWithoutCursosInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type AlunoDisciplinaMatriculadoCreateWithoutDisciplinaInput = {
    data?: Date | string
    aluno: AlunoCreateNestedOneWithoutDisciplinasMatriculadoInput
  }

  export type AlunoDisciplinaMatriculadoUncheckedCreateWithoutDisciplinaInput = {
    id?: number
    alunoId: number
    data?: Date | string
  }

  export type AlunoDisciplinaMatriculadoCreateOrConnectWithoutDisciplinaInput = {
    where: AlunoDisciplinaMatriculadoWhereUniqueInput
    create: XOR<AlunoDisciplinaMatriculadoCreateWithoutDisciplinaInput, AlunoDisciplinaMatriculadoUncheckedCreateWithoutDisciplinaInput>
  }

  export type AlunoDisciplinaMatriculadoCreateManyDisciplinaInputEnvelope = {
    data: AlunoDisciplinaMatriculadoCreateManyDisciplinaInput | AlunoDisciplinaMatriculadoCreateManyDisciplinaInput[]
    skipDuplicates?: boolean
  }

  export type AlunoDisciplinaTrancadoCreateWithoutDisciplinaInput = {
    data?: Date | string
    aluno: AlunoCreateNestedOneWithoutDisciplinasTrancadoInput
  }

  export type AlunoDisciplinaTrancadoUncheckedCreateWithoutDisciplinaInput = {
    id?: number
    alunoId: number
    data?: Date | string
  }

  export type AlunoDisciplinaTrancadoCreateOrConnectWithoutDisciplinaInput = {
    where: AlunoDisciplinaTrancadoWhereUniqueInput
    create: XOR<AlunoDisciplinaTrancadoCreateWithoutDisciplinaInput, AlunoDisciplinaTrancadoUncheckedCreateWithoutDisciplinaInput>
  }

  export type AlunoDisciplinaTrancadoCreateManyDisciplinaInputEnvelope = {
    data: AlunoDisciplinaTrancadoCreateManyDisciplinaInput | AlunoDisciplinaTrancadoCreateManyDisciplinaInput[]
    skipDuplicates?: boolean
  }

  export type AlunoDisciplinaCursadoCreateWithoutDisciplinaInput = {
    data?: Date | string
    aluno: AlunoCreateNestedOneWithoutDisciplinasCursadoInput
  }

  export type AlunoDisciplinaCursadoUncheckedCreateWithoutDisciplinaInput = {
    id?: number
    alunoId: number
    data?: Date | string
  }

  export type AlunoDisciplinaCursadoCreateOrConnectWithoutDisciplinaInput = {
    where: AlunoDisciplinaCursadoWhereUniqueInput
    create: XOR<AlunoDisciplinaCursadoCreateWithoutDisciplinaInput, AlunoDisciplinaCursadoUncheckedCreateWithoutDisciplinaInput>
  }

  export type AlunoDisciplinaCursadoCreateManyDisciplinaInputEnvelope = {
    data: AlunoDisciplinaCursadoCreateManyDisciplinaInput | AlunoDisciplinaCursadoCreateManyDisciplinaInput[]
    skipDuplicates?: boolean
  }

  export type CursoDisciplinaCreateWithoutDisciplinaInput = {
    curso: CursoCreateNestedOneWithoutDisciplinasInput
  }

  export type CursoDisciplinaUncheckedCreateWithoutDisciplinaInput = {
    cursoId: number
  }

  export type CursoDisciplinaCreateOrConnectWithoutDisciplinaInput = {
    where: CursoDisciplinaWhereUniqueInput
    create: XOR<CursoDisciplinaCreateWithoutDisciplinaInput, CursoDisciplinaUncheckedCreateWithoutDisciplinaInput>
  }

  export type CursoDisciplinaCreateManyDisciplinaInputEnvelope = {
    data: CursoDisciplinaCreateManyDisciplinaInput | CursoDisciplinaCreateManyDisciplinaInput[]
    skipDuplicates?: boolean
  }

  export type AlunoDisciplinaMatriculadoUpsertWithWhereUniqueWithoutDisciplinaInput = {
    where: AlunoDisciplinaMatriculadoWhereUniqueInput
    update: XOR<AlunoDisciplinaMatriculadoUpdateWithoutDisciplinaInput, AlunoDisciplinaMatriculadoUncheckedUpdateWithoutDisciplinaInput>
    create: XOR<AlunoDisciplinaMatriculadoCreateWithoutDisciplinaInput, AlunoDisciplinaMatriculadoUncheckedCreateWithoutDisciplinaInput>
  }

  export type AlunoDisciplinaMatriculadoUpdateWithWhereUniqueWithoutDisciplinaInput = {
    where: AlunoDisciplinaMatriculadoWhereUniqueInput
    data: XOR<AlunoDisciplinaMatriculadoUpdateWithoutDisciplinaInput, AlunoDisciplinaMatriculadoUncheckedUpdateWithoutDisciplinaInput>
  }

  export type AlunoDisciplinaMatriculadoUpdateManyWithWhereWithoutDisciplinaInput = {
    where: AlunoDisciplinaMatriculadoScalarWhereInput
    data: XOR<AlunoDisciplinaMatriculadoUpdateManyMutationInput, AlunoDisciplinaMatriculadoUncheckedUpdateManyWithoutDisciplinaInput>
  }

  export type AlunoDisciplinaMatriculadoScalarWhereInput = {
    AND?: AlunoDisciplinaMatriculadoScalarWhereInput | AlunoDisciplinaMatriculadoScalarWhereInput[]
    OR?: AlunoDisciplinaMatriculadoScalarWhereInput[]
    NOT?: AlunoDisciplinaMatriculadoScalarWhereInput | AlunoDisciplinaMatriculadoScalarWhereInput[]
    id?: IntFilter<"AlunoDisciplinaMatriculado"> | number
    alunoId?: IntFilter<"AlunoDisciplinaMatriculado"> | number
    disciplinaId?: IntFilter<"AlunoDisciplinaMatriculado"> | number
    data?: DateTimeFilter<"AlunoDisciplinaMatriculado"> | Date | string
  }

  export type AlunoDisciplinaTrancadoUpsertWithWhereUniqueWithoutDisciplinaInput = {
    where: AlunoDisciplinaTrancadoWhereUniqueInput
    update: XOR<AlunoDisciplinaTrancadoUpdateWithoutDisciplinaInput, AlunoDisciplinaTrancadoUncheckedUpdateWithoutDisciplinaInput>
    create: XOR<AlunoDisciplinaTrancadoCreateWithoutDisciplinaInput, AlunoDisciplinaTrancadoUncheckedCreateWithoutDisciplinaInput>
  }

  export type AlunoDisciplinaTrancadoUpdateWithWhereUniqueWithoutDisciplinaInput = {
    where: AlunoDisciplinaTrancadoWhereUniqueInput
    data: XOR<AlunoDisciplinaTrancadoUpdateWithoutDisciplinaInput, AlunoDisciplinaTrancadoUncheckedUpdateWithoutDisciplinaInput>
  }

  export type AlunoDisciplinaTrancadoUpdateManyWithWhereWithoutDisciplinaInput = {
    where: AlunoDisciplinaTrancadoScalarWhereInput
    data: XOR<AlunoDisciplinaTrancadoUpdateManyMutationInput, AlunoDisciplinaTrancadoUncheckedUpdateManyWithoutDisciplinaInput>
  }

  export type AlunoDisciplinaTrancadoScalarWhereInput = {
    AND?: AlunoDisciplinaTrancadoScalarWhereInput | AlunoDisciplinaTrancadoScalarWhereInput[]
    OR?: AlunoDisciplinaTrancadoScalarWhereInput[]
    NOT?: AlunoDisciplinaTrancadoScalarWhereInput | AlunoDisciplinaTrancadoScalarWhereInput[]
    id?: IntFilter<"AlunoDisciplinaTrancado"> | number
    alunoId?: IntFilter<"AlunoDisciplinaTrancado"> | number
    disciplinaId?: IntFilter<"AlunoDisciplinaTrancado"> | number
    data?: DateTimeFilter<"AlunoDisciplinaTrancado"> | Date | string
  }

  export type AlunoDisciplinaCursadoUpsertWithWhereUniqueWithoutDisciplinaInput = {
    where: AlunoDisciplinaCursadoWhereUniqueInput
    update: XOR<AlunoDisciplinaCursadoUpdateWithoutDisciplinaInput, AlunoDisciplinaCursadoUncheckedUpdateWithoutDisciplinaInput>
    create: XOR<AlunoDisciplinaCursadoCreateWithoutDisciplinaInput, AlunoDisciplinaCursadoUncheckedCreateWithoutDisciplinaInput>
  }

  export type AlunoDisciplinaCursadoUpdateWithWhereUniqueWithoutDisciplinaInput = {
    where: AlunoDisciplinaCursadoWhereUniqueInput
    data: XOR<AlunoDisciplinaCursadoUpdateWithoutDisciplinaInput, AlunoDisciplinaCursadoUncheckedUpdateWithoutDisciplinaInput>
  }

  export type AlunoDisciplinaCursadoUpdateManyWithWhereWithoutDisciplinaInput = {
    where: AlunoDisciplinaCursadoScalarWhereInput
    data: XOR<AlunoDisciplinaCursadoUpdateManyMutationInput, AlunoDisciplinaCursadoUncheckedUpdateManyWithoutDisciplinaInput>
  }

  export type AlunoDisciplinaCursadoScalarWhereInput = {
    AND?: AlunoDisciplinaCursadoScalarWhereInput | AlunoDisciplinaCursadoScalarWhereInput[]
    OR?: AlunoDisciplinaCursadoScalarWhereInput[]
    NOT?: AlunoDisciplinaCursadoScalarWhereInput | AlunoDisciplinaCursadoScalarWhereInput[]
    id?: IntFilter<"AlunoDisciplinaCursado"> | number
    alunoId?: IntFilter<"AlunoDisciplinaCursado"> | number
    disciplinaId?: IntFilter<"AlunoDisciplinaCursado"> | number
    data?: DateTimeFilter<"AlunoDisciplinaCursado"> | Date | string
  }

  export type CursoDisciplinaUpsertWithWhereUniqueWithoutDisciplinaInput = {
    where: CursoDisciplinaWhereUniqueInput
    update: XOR<CursoDisciplinaUpdateWithoutDisciplinaInput, CursoDisciplinaUncheckedUpdateWithoutDisciplinaInput>
    create: XOR<CursoDisciplinaCreateWithoutDisciplinaInput, CursoDisciplinaUncheckedCreateWithoutDisciplinaInput>
  }

  export type CursoDisciplinaUpdateWithWhereUniqueWithoutDisciplinaInput = {
    where: CursoDisciplinaWhereUniqueInput
    data: XOR<CursoDisciplinaUpdateWithoutDisciplinaInput, CursoDisciplinaUncheckedUpdateWithoutDisciplinaInput>
  }

  export type CursoDisciplinaUpdateManyWithWhereWithoutDisciplinaInput = {
    where: CursoDisciplinaScalarWhereInput
    data: XOR<CursoDisciplinaUpdateManyMutationInput, CursoDisciplinaUncheckedUpdateManyWithoutDisciplinaInput>
  }

  export type CursoDisciplinaScalarWhereInput = {
    AND?: CursoDisciplinaScalarWhereInput | CursoDisciplinaScalarWhereInput[]
    OR?: CursoDisciplinaScalarWhereInput[]
    NOT?: CursoDisciplinaScalarWhereInput | CursoDisciplinaScalarWhereInput[]
    cursoId?: IntFilter<"CursoDisciplina"> | number
    disciplinaId?: IntFilter<"CursoDisciplina"> | number
  }

  export type AlunoCreateWithoutCursoInput = {
    nome: string
    cpf: string
    email: string
    ativo?: boolean
    disciplinasMatriculado?: AlunoDisciplinaMatriculadoCreateNestedManyWithoutAlunoInput
    disciplinasTrancado?: AlunoDisciplinaTrancadoCreateNestedManyWithoutAlunoInput
    disciplinasCursado?: AlunoDisciplinaCursadoCreateNestedManyWithoutAlunoInput
  }

  export type AlunoUncheckedCreateWithoutCursoInput = {
    id?: number
    nome: string
    cpf: string
    email: string
    ativo?: boolean
    disciplinasMatriculado?: AlunoDisciplinaMatriculadoUncheckedCreateNestedManyWithoutAlunoInput
    disciplinasTrancado?: AlunoDisciplinaTrancadoUncheckedCreateNestedManyWithoutAlunoInput
    disciplinasCursado?: AlunoDisciplinaCursadoUncheckedCreateNestedManyWithoutAlunoInput
  }

  export type AlunoCreateOrConnectWithoutCursoInput = {
    where: AlunoWhereUniqueInput
    create: XOR<AlunoCreateWithoutCursoInput, AlunoUncheckedCreateWithoutCursoInput>
  }

  export type AlunoCreateManyCursoInputEnvelope = {
    data: AlunoCreateManyCursoInput | AlunoCreateManyCursoInput[]
    skipDuplicates?: boolean
  }

  export type CursoDisciplinaCreateWithoutCursoInput = {
    disciplina: DisciplinaCreateNestedOneWithoutCursosInput
  }

  export type CursoDisciplinaUncheckedCreateWithoutCursoInput = {
    disciplinaId: number
  }

  export type CursoDisciplinaCreateOrConnectWithoutCursoInput = {
    where: CursoDisciplinaWhereUniqueInput
    create: XOR<CursoDisciplinaCreateWithoutCursoInput, CursoDisciplinaUncheckedCreateWithoutCursoInput>
  }

  export type CursoDisciplinaCreateManyCursoInputEnvelope = {
    data: CursoDisciplinaCreateManyCursoInput | CursoDisciplinaCreateManyCursoInput[]
    skipDuplicates?: boolean
  }

  export type AlunoUpsertWithWhereUniqueWithoutCursoInput = {
    where: AlunoWhereUniqueInput
    update: XOR<AlunoUpdateWithoutCursoInput, AlunoUncheckedUpdateWithoutCursoInput>
    create: XOR<AlunoCreateWithoutCursoInput, AlunoUncheckedCreateWithoutCursoInput>
  }

  export type AlunoUpdateWithWhereUniqueWithoutCursoInput = {
    where: AlunoWhereUniqueInput
    data: XOR<AlunoUpdateWithoutCursoInput, AlunoUncheckedUpdateWithoutCursoInput>
  }

  export type AlunoUpdateManyWithWhereWithoutCursoInput = {
    where: AlunoScalarWhereInput
    data: XOR<AlunoUpdateManyMutationInput, AlunoUncheckedUpdateManyWithoutCursoInput>
  }

  export type AlunoScalarWhereInput = {
    AND?: AlunoScalarWhereInput | AlunoScalarWhereInput[]
    OR?: AlunoScalarWhereInput[]
    NOT?: AlunoScalarWhereInput | AlunoScalarWhereInput[]
    id?: IntFilter<"Aluno"> | number
    nome?: StringFilter<"Aluno"> | string
    cpf?: StringFilter<"Aluno"> | string
    email?: StringFilter<"Aluno"> | string
    cursoId?: IntNullableFilter<"Aluno"> | number | null
    ativo?: BoolFilter<"Aluno"> | boolean
  }

  export type CursoDisciplinaUpsertWithWhereUniqueWithoutCursoInput = {
    where: CursoDisciplinaWhereUniqueInput
    update: XOR<CursoDisciplinaUpdateWithoutCursoInput, CursoDisciplinaUncheckedUpdateWithoutCursoInput>
    create: XOR<CursoDisciplinaCreateWithoutCursoInput, CursoDisciplinaUncheckedCreateWithoutCursoInput>
  }

  export type CursoDisciplinaUpdateWithWhereUniqueWithoutCursoInput = {
    where: CursoDisciplinaWhereUniqueInput
    data: XOR<CursoDisciplinaUpdateWithoutCursoInput, CursoDisciplinaUncheckedUpdateWithoutCursoInput>
  }

  export type CursoDisciplinaUpdateManyWithWhereWithoutCursoInput = {
    where: CursoDisciplinaScalarWhereInput
    data: XOR<CursoDisciplinaUpdateManyMutationInput, CursoDisciplinaUncheckedUpdateManyWithoutCursoInput>
  }

  export type CursoCreateWithoutAlunosInput = {
    nome: string
    descricao: string
    duracao: number
    horasTotais?: number | null
    disciplinas?: CursoDisciplinaCreateNestedManyWithoutCursoInput
  }

  export type CursoUncheckedCreateWithoutAlunosInput = {
    id?: number
    nome: string
    descricao: string
    duracao: number
    horasTotais?: number | null
    disciplinas?: CursoDisciplinaUncheckedCreateNestedManyWithoutCursoInput
  }

  export type CursoCreateOrConnectWithoutAlunosInput = {
    where: CursoWhereUniqueInput
    create: XOR<CursoCreateWithoutAlunosInput, CursoUncheckedCreateWithoutAlunosInput>
  }

  export type AlunoDisciplinaMatriculadoCreateWithoutAlunoInput = {
    data?: Date | string
    disciplina: DisciplinaCreateNestedOneWithoutAlunosAtivosInput
  }

  export type AlunoDisciplinaMatriculadoUncheckedCreateWithoutAlunoInput = {
    id?: number
    disciplinaId: number
    data?: Date | string
  }

  export type AlunoDisciplinaMatriculadoCreateOrConnectWithoutAlunoInput = {
    where: AlunoDisciplinaMatriculadoWhereUniqueInput
    create: XOR<AlunoDisciplinaMatriculadoCreateWithoutAlunoInput, AlunoDisciplinaMatriculadoUncheckedCreateWithoutAlunoInput>
  }

  export type AlunoDisciplinaMatriculadoCreateManyAlunoInputEnvelope = {
    data: AlunoDisciplinaMatriculadoCreateManyAlunoInput | AlunoDisciplinaMatriculadoCreateManyAlunoInput[]
    skipDuplicates?: boolean
  }

  export type AlunoDisciplinaTrancadoCreateWithoutAlunoInput = {
    data?: Date | string
    disciplina: DisciplinaCreateNestedOneWithoutAlunosTrancadosInput
  }

  export type AlunoDisciplinaTrancadoUncheckedCreateWithoutAlunoInput = {
    id?: number
    disciplinaId: number
    data?: Date | string
  }

  export type AlunoDisciplinaTrancadoCreateOrConnectWithoutAlunoInput = {
    where: AlunoDisciplinaTrancadoWhereUniqueInput
    create: XOR<AlunoDisciplinaTrancadoCreateWithoutAlunoInput, AlunoDisciplinaTrancadoUncheckedCreateWithoutAlunoInput>
  }

  export type AlunoDisciplinaTrancadoCreateManyAlunoInputEnvelope = {
    data: AlunoDisciplinaTrancadoCreateManyAlunoInput | AlunoDisciplinaTrancadoCreateManyAlunoInput[]
    skipDuplicates?: boolean
  }

  export type AlunoDisciplinaCursadoCreateWithoutAlunoInput = {
    data?: Date | string
    disciplina: DisciplinaCreateNestedOneWithoutAlunosConcluidosInput
  }

  export type AlunoDisciplinaCursadoUncheckedCreateWithoutAlunoInput = {
    id?: number
    disciplinaId: number
    data?: Date | string
  }

  export type AlunoDisciplinaCursadoCreateOrConnectWithoutAlunoInput = {
    where: AlunoDisciplinaCursadoWhereUniqueInput
    create: XOR<AlunoDisciplinaCursadoCreateWithoutAlunoInput, AlunoDisciplinaCursadoUncheckedCreateWithoutAlunoInput>
  }

  export type AlunoDisciplinaCursadoCreateManyAlunoInputEnvelope = {
    data: AlunoDisciplinaCursadoCreateManyAlunoInput | AlunoDisciplinaCursadoCreateManyAlunoInput[]
    skipDuplicates?: boolean
  }

  export type CursoUpsertWithoutAlunosInput = {
    update: XOR<CursoUpdateWithoutAlunosInput, CursoUncheckedUpdateWithoutAlunosInput>
    create: XOR<CursoCreateWithoutAlunosInput, CursoUncheckedCreateWithoutAlunosInput>
    where?: CursoWhereInput
  }

  export type CursoUpdateToOneWithWhereWithoutAlunosInput = {
    where?: CursoWhereInput
    data: XOR<CursoUpdateWithoutAlunosInput, CursoUncheckedUpdateWithoutAlunosInput>
  }

  export type CursoUpdateWithoutAlunosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    duracao?: IntFieldUpdateOperationsInput | number
    horasTotais?: NullableIntFieldUpdateOperationsInput | number | null
    disciplinas?: CursoDisciplinaUpdateManyWithoutCursoNestedInput
  }

  export type CursoUncheckedUpdateWithoutAlunosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    duracao?: IntFieldUpdateOperationsInput | number
    horasTotais?: NullableIntFieldUpdateOperationsInput | number | null
    disciplinas?: CursoDisciplinaUncheckedUpdateManyWithoutCursoNestedInput
  }

  export type AlunoDisciplinaMatriculadoUpsertWithWhereUniqueWithoutAlunoInput = {
    where: AlunoDisciplinaMatriculadoWhereUniqueInput
    update: XOR<AlunoDisciplinaMatriculadoUpdateWithoutAlunoInput, AlunoDisciplinaMatriculadoUncheckedUpdateWithoutAlunoInput>
    create: XOR<AlunoDisciplinaMatriculadoCreateWithoutAlunoInput, AlunoDisciplinaMatriculadoUncheckedCreateWithoutAlunoInput>
  }

  export type AlunoDisciplinaMatriculadoUpdateWithWhereUniqueWithoutAlunoInput = {
    where: AlunoDisciplinaMatriculadoWhereUniqueInput
    data: XOR<AlunoDisciplinaMatriculadoUpdateWithoutAlunoInput, AlunoDisciplinaMatriculadoUncheckedUpdateWithoutAlunoInput>
  }

  export type AlunoDisciplinaMatriculadoUpdateManyWithWhereWithoutAlunoInput = {
    where: AlunoDisciplinaMatriculadoScalarWhereInput
    data: XOR<AlunoDisciplinaMatriculadoUpdateManyMutationInput, AlunoDisciplinaMatriculadoUncheckedUpdateManyWithoutAlunoInput>
  }

  export type AlunoDisciplinaTrancadoUpsertWithWhereUniqueWithoutAlunoInput = {
    where: AlunoDisciplinaTrancadoWhereUniqueInput
    update: XOR<AlunoDisciplinaTrancadoUpdateWithoutAlunoInput, AlunoDisciplinaTrancadoUncheckedUpdateWithoutAlunoInput>
    create: XOR<AlunoDisciplinaTrancadoCreateWithoutAlunoInput, AlunoDisciplinaTrancadoUncheckedCreateWithoutAlunoInput>
  }

  export type AlunoDisciplinaTrancadoUpdateWithWhereUniqueWithoutAlunoInput = {
    where: AlunoDisciplinaTrancadoWhereUniqueInput
    data: XOR<AlunoDisciplinaTrancadoUpdateWithoutAlunoInput, AlunoDisciplinaTrancadoUncheckedUpdateWithoutAlunoInput>
  }

  export type AlunoDisciplinaTrancadoUpdateManyWithWhereWithoutAlunoInput = {
    where: AlunoDisciplinaTrancadoScalarWhereInput
    data: XOR<AlunoDisciplinaTrancadoUpdateManyMutationInput, AlunoDisciplinaTrancadoUncheckedUpdateManyWithoutAlunoInput>
  }

  export type AlunoDisciplinaCursadoUpsertWithWhereUniqueWithoutAlunoInput = {
    where: AlunoDisciplinaCursadoWhereUniqueInput
    update: XOR<AlunoDisciplinaCursadoUpdateWithoutAlunoInput, AlunoDisciplinaCursadoUncheckedUpdateWithoutAlunoInput>
    create: XOR<AlunoDisciplinaCursadoCreateWithoutAlunoInput, AlunoDisciplinaCursadoUncheckedCreateWithoutAlunoInput>
  }

  export type AlunoDisciplinaCursadoUpdateWithWhereUniqueWithoutAlunoInput = {
    where: AlunoDisciplinaCursadoWhereUniqueInput
    data: XOR<AlunoDisciplinaCursadoUpdateWithoutAlunoInput, AlunoDisciplinaCursadoUncheckedUpdateWithoutAlunoInput>
  }

  export type AlunoDisciplinaCursadoUpdateManyWithWhereWithoutAlunoInput = {
    where: AlunoDisciplinaCursadoScalarWhereInput
    data: XOR<AlunoDisciplinaCursadoUpdateManyMutationInput, AlunoDisciplinaCursadoUncheckedUpdateManyWithoutAlunoInput>
  }

  export type AlunoCreateWithoutDisciplinasMatriculadoInput = {
    nome: string
    cpf: string
    email: string
    ativo?: boolean
    curso?: CursoCreateNestedOneWithoutAlunosInput
    disciplinasTrancado?: AlunoDisciplinaTrancadoCreateNestedManyWithoutAlunoInput
    disciplinasCursado?: AlunoDisciplinaCursadoCreateNestedManyWithoutAlunoInput
  }

  export type AlunoUncheckedCreateWithoutDisciplinasMatriculadoInput = {
    id?: number
    nome: string
    cpf: string
    email: string
    cursoId?: number | null
    ativo?: boolean
    disciplinasTrancado?: AlunoDisciplinaTrancadoUncheckedCreateNestedManyWithoutAlunoInput
    disciplinasCursado?: AlunoDisciplinaCursadoUncheckedCreateNestedManyWithoutAlunoInput
  }

  export type AlunoCreateOrConnectWithoutDisciplinasMatriculadoInput = {
    where: AlunoWhereUniqueInput
    create: XOR<AlunoCreateWithoutDisciplinasMatriculadoInput, AlunoUncheckedCreateWithoutDisciplinasMatriculadoInput>
  }

  export type DisciplinaCreateWithoutAlunosAtivosInput = {
    nome: string
    cargaHoraria: number
    ementa: string
    alunosTrancados?: AlunoDisciplinaTrancadoCreateNestedManyWithoutDisciplinaInput
    alunosConcluidos?: AlunoDisciplinaCursadoCreateNestedManyWithoutDisciplinaInput
    cursos?: CursoDisciplinaCreateNestedManyWithoutDisciplinaInput
  }

  export type DisciplinaUncheckedCreateWithoutAlunosAtivosInput = {
    id?: number
    nome: string
    cargaHoraria: number
    ementa: string
    alunosTrancados?: AlunoDisciplinaTrancadoUncheckedCreateNestedManyWithoutDisciplinaInput
    alunosConcluidos?: AlunoDisciplinaCursadoUncheckedCreateNestedManyWithoutDisciplinaInput
    cursos?: CursoDisciplinaUncheckedCreateNestedManyWithoutDisciplinaInput
  }

  export type DisciplinaCreateOrConnectWithoutAlunosAtivosInput = {
    where: DisciplinaWhereUniqueInput
    create: XOR<DisciplinaCreateWithoutAlunosAtivosInput, DisciplinaUncheckedCreateWithoutAlunosAtivosInput>
  }

  export type AlunoUpsertWithoutDisciplinasMatriculadoInput = {
    update: XOR<AlunoUpdateWithoutDisciplinasMatriculadoInput, AlunoUncheckedUpdateWithoutDisciplinasMatriculadoInput>
    create: XOR<AlunoCreateWithoutDisciplinasMatriculadoInput, AlunoUncheckedCreateWithoutDisciplinasMatriculadoInput>
    where?: AlunoWhereInput
  }

  export type AlunoUpdateToOneWithWhereWithoutDisciplinasMatriculadoInput = {
    where?: AlunoWhereInput
    data: XOR<AlunoUpdateWithoutDisciplinasMatriculadoInput, AlunoUncheckedUpdateWithoutDisciplinasMatriculadoInput>
  }

  export type AlunoUpdateWithoutDisciplinasMatriculadoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    curso?: CursoUpdateOneWithoutAlunosNestedInput
    disciplinasTrancado?: AlunoDisciplinaTrancadoUpdateManyWithoutAlunoNestedInput
    disciplinasCursado?: AlunoDisciplinaCursadoUpdateManyWithoutAlunoNestedInput
  }

  export type AlunoUncheckedUpdateWithoutDisciplinasMatriculadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cursoId?: NullableIntFieldUpdateOperationsInput | number | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    disciplinasTrancado?: AlunoDisciplinaTrancadoUncheckedUpdateManyWithoutAlunoNestedInput
    disciplinasCursado?: AlunoDisciplinaCursadoUncheckedUpdateManyWithoutAlunoNestedInput
  }

  export type DisciplinaUpsertWithoutAlunosAtivosInput = {
    update: XOR<DisciplinaUpdateWithoutAlunosAtivosInput, DisciplinaUncheckedUpdateWithoutAlunosAtivosInput>
    create: XOR<DisciplinaCreateWithoutAlunosAtivosInput, DisciplinaUncheckedCreateWithoutAlunosAtivosInput>
    where?: DisciplinaWhereInput
  }

  export type DisciplinaUpdateToOneWithWhereWithoutAlunosAtivosInput = {
    where?: DisciplinaWhereInput
    data: XOR<DisciplinaUpdateWithoutAlunosAtivosInput, DisciplinaUncheckedUpdateWithoutAlunosAtivosInput>
  }

  export type DisciplinaUpdateWithoutAlunosAtivosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cargaHoraria?: IntFieldUpdateOperationsInput | number
    ementa?: StringFieldUpdateOperationsInput | string
    alunosTrancados?: AlunoDisciplinaTrancadoUpdateManyWithoutDisciplinaNestedInput
    alunosConcluidos?: AlunoDisciplinaCursadoUpdateManyWithoutDisciplinaNestedInput
    cursos?: CursoDisciplinaUpdateManyWithoutDisciplinaNestedInput
  }

  export type DisciplinaUncheckedUpdateWithoutAlunosAtivosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cargaHoraria?: IntFieldUpdateOperationsInput | number
    ementa?: StringFieldUpdateOperationsInput | string
    alunosTrancados?: AlunoDisciplinaTrancadoUncheckedUpdateManyWithoutDisciplinaNestedInput
    alunosConcluidos?: AlunoDisciplinaCursadoUncheckedUpdateManyWithoutDisciplinaNestedInput
    cursos?: CursoDisciplinaUncheckedUpdateManyWithoutDisciplinaNestedInput
  }

  export type AlunoCreateWithoutDisciplinasTrancadoInput = {
    nome: string
    cpf: string
    email: string
    ativo?: boolean
    curso?: CursoCreateNestedOneWithoutAlunosInput
    disciplinasMatriculado?: AlunoDisciplinaMatriculadoCreateNestedManyWithoutAlunoInput
    disciplinasCursado?: AlunoDisciplinaCursadoCreateNestedManyWithoutAlunoInput
  }

  export type AlunoUncheckedCreateWithoutDisciplinasTrancadoInput = {
    id?: number
    nome: string
    cpf: string
    email: string
    cursoId?: number | null
    ativo?: boolean
    disciplinasMatriculado?: AlunoDisciplinaMatriculadoUncheckedCreateNestedManyWithoutAlunoInput
    disciplinasCursado?: AlunoDisciplinaCursadoUncheckedCreateNestedManyWithoutAlunoInput
  }

  export type AlunoCreateOrConnectWithoutDisciplinasTrancadoInput = {
    where: AlunoWhereUniqueInput
    create: XOR<AlunoCreateWithoutDisciplinasTrancadoInput, AlunoUncheckedCreateWithoutDisciplinasTrancadoInput>
  }

  export type DisciplinaCreateWithoutAlunosTrancadosInput = {
    nome: string
    cargaHoraria: number
    ementa: string
    alunosAtivos?: AlunoDisciplinaMatriculadoCreateNestedManyWithoutDisciplinaInput
    alunosConcluidos?: AlunoDisciplinaCursadoCreateNestedManyWithoutDisciplinaInput
    cursos?: CursoDisciplinaCreateNestedManyWithoutDisciplinaInput
  }

  export type DisciplinaUncheckedCreateWithoutAlunosTrancadosInput = {
    id?: number
    nome: string
    cargaHoraria: number
    ementa: string
    alunosAtivos?: AlunoDisciplinaMatriculadoUncheckedCreateNestedManyWithoutDisciplinaInput
    alunosConcluidos?: AlunoDisciplinaCursadoUncheckedCreateNestedManyWithoutDisciplinaInput
    cursos?: CursoDisciplinaUncheckedCreateNestedManyWithoutDisciplinaInput
  }

  export type DisciplinaCreateOrConnectWithoutAlunosTrancadosInput = {
    where: DisciplinaWhereUniqueInput
    create: XOR<DisciplinaCreateWithoutAlunosTrancadosInput, DisciplinaUncheckedCreateWithoutAlunosTrancadosInput>
  }

  export type AlunoUpsertWithoutDisciplinasTrancadoInput = {
    update: XOR<AlunoUpdateWithoutDisciplinasTrancadoInput, AlunoUncheckedUpdateWithoutDisciplinasTrancadoInput>
    create: XOR<AlunoCreateWithoutDisciplinasTrancadoInput, AlunoUncheckedCreateWithoutDisciplinasTrancadoInput>
    where?: AlunoWhereInput
  }

  export type AlunoUpdateToOneWithWhereWithoutDisciplinasTrancadoInput = {
    where?: AlunoWhereInput
    data: XOR<AlunoUpdateWithoutDisciplinasTrancadoInput, AlunoUncheckedUpdateWithoutDisciplinasTrancadoInput>
  }

  export type AlunoUpdateWithoutDisciplinasTrancadoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    curso?: CursoUpdateOneWithoutAlunosNestedInput
    disciplinasMatriculado?: AlunoDisciplinaMatriculadoUpdateManyWithoutAlunoNestedInput
    disciplinasCursado?: AlunoDisciplinaCursadoUpdateManyWithoutAlunoNestedInput
  }

  export type AlunoUncheckedUpdateWithoutDisciplinasTrancadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cursoId?: NullableIntFieldUpdateOperationsInput | number | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    disciplinasMatriculado?: AlunoDisciplinaMatriculadoUncheckedUpdateManyWithoutAlunoNestedInput
    disciplinasCursado?: AlunoDisciplinaCursadoUncheckedUpdateManyWithoutAlunoNestedInput
  }

  export type DisciplinaUpsertWithoutAlunosTrancadosInput = {
    update: XOR<DisciplinaUpdateWithoutAlunosTrancadosInput, DisciplinaUncheckedUpdateWithoutAlunosTrancadosInput>
    create: XOR<DisciplinaCreateWithoutAlunosTrancadosInput, DisciplinaUncheckedCreateWithoutAlunosTrancadosInput>
    where?: DisciplinaWhereInput
  }

  export type DisciplinaUpdateToOneWithWhereWithoutAlunosTrancadosInput = {
    where?: DisciplinaWhereInput
    data: XOR<DisciplinaUpdateWithoutAlunosTrancadosInput, DisciplinaUncheckedUpdateWithoutAlunosTrancadosInput>
  }

  export type DisciplinaUpdateWithoutAlunosTrancadosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cargaHoraria?: IntFieldUpdateOperationsInput | number
    ementa?: StringFieldUpdateOperationsInput | string
    alunosAtivos?: AlunoDisciplinaMatriculadoUpdateManyWithoutDisciplinaNestedInput
    alunosConcluidos?: AlunoDisciplinaCursadoUpdateManyWithoutDisciplinaNestedInput
    cursos?: CursoDisciplinaUpdateManyWithoutDisciplinaNestedInput
  }

  export type DisciplinaUncheckedUpdateWithoutAlunosTrancadosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cargaHoraria?: IntFieldUpdateOperationsInput | number
    ementa?: StringFieldUpdateOperationsInput | string
    alunosAtivos?: AlunoDisciplinaMatriculadoUncheckedUpdateManyWithoutDisciplinaNestedInput
    alunosConcluidos?: AlunoDisciplinaCursadoUncheckedUpdateManyWithoutDisciplinaNestedInput
    cursos?: CursoDisciplinaUncheckedUpdateManyWithoutDisciplinaNestedInput
  }

  export type AlunoCreateWithoutDisciplinasCursadoInput = {
    nome: string
    cpf: string
    email: string
    ativo?: boolean
    curso?: CursoCreateNestedOneWithoutAlunosInput
    disciplinasMatriculado?: AlunoDisciplinaMatriculadoCreateNestedManyWithoutAlunoInput
    disciplinasTrancado?: AlunoDisciplinaTrancadoCreateNestedManyWithoutAlunoInput
  }

  export type AlunoUncheckedCreateWithoutDisciplinasCursadoInput = {
    id?: number
    nome: string
    cpf: string
    email: string
    cursoId?: number | null
    ativo?: boolean
    disciplinasMatriculado?: AlunoDisciplinaMatriculadoUncheckedCreateNestedManyWithoutAlunoInput
    disciplinasTrancado?: AlunoDisciplinaTrancadoUncheckedCreateNestedManyWithoutAlunoInput
  }

  export type AlunoCreateOrConnectWithoutDisciplinasCursadoInput = {
    where: AlunoWhereUniqueInput
    create: XOR<AlunoCreateWithoutDisciplinasCursadoInput, AlunoUncheckedCreateWithoutDisciplinasCursadoInput>
  }

  export type DisciplinaCreateWithoutAlunosConcluidosInput = {
    nome: string
    cargaHoraria: number
    ementa: string
    alunosAtivos?: AlunoDisciplinaMatriculadoCreateNestedManyWithoutDisciplinaInput
    alunosTrancados?: AlunoDisciplinaTrancadoCreateNestedManyWithoutDisciplinaInput
    cursos?: CursoDisciplinaCreateNestedManyWithoutDisciplinaInput
  }

  export type DisciplinaUncheckedCreateWithoutAlunosConcluidosInput = {
    id?: number
    nome: string
    cargaHoraria: number
    ementa: string
    alunosAtivos?: AlunoDisciplinaMatriculadoUncheckedCreateNestedManyWithoutDisciplinaInput
    alunosTrancados?: AlunoDisciplinaTrancadoUncheckedCreateNestedManyWithoutDisciplinaInput
    cursos?: CursoDisciplinaUncheckedCreateNestedManyWithoutDisciplinaInput
  }

  export type DisciplinaCreateOrConnectWithoutAlunosConcluidosInput = {
    where: DisciplinaWhereUniqueInput
    create: XOR<DisciplinaCreateWithoutAlunosConcluidosInput, DisciplinaUncheckedCreateWithoutAlunosConcluidosInput>
  }

  export type AlunoUpsertWithoutDisciplinasCursadoInput = {
    update: XOR<AlunoUpdateWithoutDisciplinasCursadoInput, AlunoUncheckedUpdateWithoutDisciplinasCursadoInput>
    create: XOR<AlunoCreateWithoutDisciplinasCursadoInput, AlunoUncheckedCreateWithoutDisciplinasCursadoInput>
    where?: AlunoWhereInput
  }

  export type AlunoUpdateToOneWithWhereWithoutDisciplinasCursadoInput = {
    where?: AlunoWhereInput
    data: XOR<AlunoUpdateWithoutDisciplinasCursadoInput, AlunoUncheckedUpdateWithoutDisciplinasCursadoInput>
  }

  export type AlunoUpdateWithoutDisciplinasCursadoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    curso?: CursoUpdateOneWithoutAlunosNestedInput
    disciplinasMatriculado?: AlunoDisciplinaMatriculadoUpdateManyWithoutAlunoNestedInput
    disciplinasTrancado?: AlunoDisciplinaTrancadoUpdateManyWithoutAlunoNestedInput
  }

  export type AlunoUncheckedUpdateWithoutDisciplinasCursadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    cursoId?: NullableIntFieldUpdateOperationsInput | number | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    disciplinasMatriculado?: AlunoDisciplinaMatriculadoUncheckedUpdateManyWithoutAlunoNestedInput
    disciplinasTrancado?: AlunoDisciplinaTrancadoUncheckedUpdateManyWithoutAlunoNestedInput
  }

  export type DisciplinaUpsertWithoutAlunosConcluidosInput = {
    update: XOR<DisciplinaUpdateWithoutAlunosConcluidosInput, DisciplinaUncheckedUpdateWithoutAlunosConcluidosInput>
    create: XOR<DisciplinaCreateWithoutAlunosConcluidosInput, DisciplinaUncheckedCreateWithoutAlunosConcluidosInput>
    where?: DisciplinaWhereInput
  }

  export type DisciplinaUpdateToOneWithWhereWithoutAlunosConcluidosInput = {
    where?: DisciplinaWhereInput
    data: XOR<DisciplinaUpdateWithoutAlunosConcluidosInput, DisciplinaUncheckedUpdateWithoutAlunosConcluidosInput>
  }

  export type DisciplinaUpdateWithoutAlunosConcluidosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cargaHoraria?: IntFieldUpdateOperationsInput | number
    ementa?: StringFieldUpdateOperationsInput | string
    alunosAtivos?: AlunoDisciplinaMatriculadoUpdateManyWithoutDisciplinaNestedInput
    alunosTrancados?: AlunoDisciplinaTrancadoUpdateManyWithoutDisciplinaNestedInput
    cursos?: CursoDisciplinaUpdateManyWithoutDisciplinaNestedInput
  }

  export type DisciplinaUncheckedUpdateWithoutAlunosConcluidosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cargaHoraria?: IntFieldUpdateOperationsInput | number
    ementa?: StringFieldUpdateOperationsInput | string
    alunosAtivos?: AlunoDisciplinaMatriculadoUncheckedUpdateManyWithoutDisciplinaNestedInput
    alunosTrancados?: AlunoDisciplinaTrancadoUncheckedUpdateManyWithoutDisciplinaNestedInput
    cursos?: CursoDisciplinaUncheckedUpdateManyWithoutDisciplinaNestedInput
  }

  export type CursoCreateWithoutDisciplinasInput = {
    nome: string
    descricao: string
    duracao: number
    horasTotais?: number | null
    alunos?: AlunoCreateNestedManyWithoutCursoInput
  }

  export type CursoUncheckedCreateWithoutDisciplinasInput = {
    id?: number
    nome: string
    descricao: string
    duracao: number
    horasTotais?: number | null
    alunos?: AlunoUncheckedCreateNestedManyWithoutCursoInput
  }

  export type CursoCreateOrConnectWithoutDisciplinasInput = {
    where: CursoWhereUniqueInput
    create: XOR<CursoCreateWithoutDisciplinasInput, CursoUncheckedCreateWithoutDisciplinasInput>
  }

  export type DisciplinaCreateWithoutCursosInput = {
    nome: string
    cargaHoraria: number
    ementa: string
    alunosAtivos?: AlunoDisciplinaMatriculadoCreateNestedManyWithoutDisciplinaInput
    alunosTrancados?: AlunoDisciplinaTrancadoCreateNestedManyWithoutDisciplinaInput
    alunosConcluidos?: AlunoDisciplinaCursadoCreateNestedManyWithoutDisciplinaInput
  }

  export type DisciplinaUncheckedCreateWithoutCursosInput = {
    id?: number
    nome: string
    cargaHoraria: number
    ementa: string
    alunosAtivos?: AlunoDisciplinaMatriculadoUncheckedCreateNestedManyWithoutDisciplinaInput
    alunosTrancados?: AlunoDisciplinaTrancadoUncheckedCreateNestedManyWithoutDisciplinaInput
    alunosConcluidos?: AlunoDisciplinaCursadoUncheckedCreateNestedManyWithoutDisciplinaInput
  }

  export type DisciplinaCreateOrConnectWithoutCursosInput = {
    where: DisciplinaWhereUniqueInput
    create: XOR<DisciplinaCreateWithoutCursosInput, DisciplinaUncheckedCreateWithoutCursosInput>
  }

  export type CursoUpsertWithoutDisciplinasInput = {
    update: XOR<CursoUpdateWithoutDisciplinasInput, CursoUncheckedUpdateWithoutDisciplinasInput>
    create: XOR<CursoCreateWithoutDisciplinasInput, CursoUncheckedCreateWithoutDisciplinasInput>
    where?: CursoWhereInput
  }

  export type CursoUpdateToOneWithWhereWithoutDisciplinasInput = {
    where?: CursoWhereInput
    data: XOR<CursoUpdateWithoutDisciplinasInput, CursoUncheckedUpdateWithoutDisciplinasInput>
  }

  export type CursoUpdateWithoutDisciplinasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    duracao?: IntFieldUpdateOperationsInput | number
    horasTotais?: NullableIntFieldUpdateOperationsInput | number | null
    alunos?: AlunoUpdateManyWithoutCursoNestedInput
  }

  export type CursoUncheckedUpdateWithoutDisciplinasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    duracao?: IntFieldUpdateOperationsInput | number
    horasTotais?: NullableIntFieldUpdateOperationsInput | number | null
    alunos?: AlunoUncheckedUpdateManyWithoutCursoNestedInput
  }

  export type DisciplinaUpsertWithoutCursosInput = {
    update: XOR<DisciplinaUpdateWithoutCursosInput, DisciplinaUncheckedUpdateWithoutCursosInput>
    create: XOR<DisciplinaCreateWithoutCursosInput, DisciplinaUncheckedCreateWithoutCursosInput>
    where?: DisciplinaWhereInput
  }

  export type DisciplinaUpdateToOneWithWhereWithoutCursosInput = {
    where?: DisciplinaWhereInput
    data: XOR<DisciplinaUpdateWithoutCursosInput, DisciplinaUncheckedUpdateWithoutCursosInput>
  }

  export type DisciplinaUpdateWithoutCursosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cargaHoraria?: IntFieldUpdateOperationsInput | number
    ementa?: StringFieldUpdateOperationsInput | string
    alunosAtivos?: AlunoDisciplinaMatriculadoUpdateManyWithoutDisciplinaNestedInput
    alunosTrancados?: AlunoDisciplinaTrancadoUpdateManyWithoutDisciplinaNestedInput
    alunosConcluidos?: AlunoDisciplinaCursadoUpdateManyWithoutDisciplinaNestedInput
  }

  export type DisciplinaUncheckedUpdateWithoutCursosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cargaHoraria?: IntFieldUpdateOperationsInput | number
    ementa?: StringFieldUpdateOperationsInput | string
    alunosAtivos?: AlunoDisciplinaMatriculadoUncheckedUpdateManyWithoutDisciplinaNestedInput
    alunosTrancados?: AlunoDisciplinaTrancadoUncheckedUpdateManyWithoutDisciplinaNestedInput
    alunosConcluidos?: AlunoDisciplinaCursadoUncheckedUpdateManyWithoutDisciplinaNestedInput
  }

  export type AlunoDisciplinaMatriculadoCreateManyDisciplinaInput = {
    id?: number
    alunoId: number
    data?: Date | string
  }

  export type AlunoDisciplinaTrancadoCreateManyDisciplinaInput = {
    id?: number
    alunoId: number
    data?: Date | string
  }

  export type AlunoDisciplinaCursadoCreateManyDisciplinaInput = {
    id?: number
    alunoId: number
    data?: Date | string
  }

  export type CursoDisciplinaCreateManyDisciplinaInput = {
    cursoId: number
  }

  export type AlunoDisciplinaMatriculadoUpdateWithoutDisciplinaInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    aluno?: AlunoUpdateOneRequiredWithoutDisciplinasMatriculadoNestedInput
  }

  export type AlunoDisciplinaMatriculadoUncheckedUpdateWithoutDisciplinaInput = {
    id?: IntFieldUpdateOperationsInput | number
    alunoId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlunoDisciplinaMatriculadoUncheckedUpdateManyWithoutDisciplinaInput = {
    id?: IntFieldUpdateOperationsInput | number
    alunoId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlunoDisciplinaTrancadoUpdateWithoutDisciplinaInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    aluno?: AlunoUpdateOneRequiredWithoutDisciplinasTrancadoNestedInput
  }

  export type AlunoDisciplinaTrancadoUncheckedUpdateWithoutDisciplinaInput = {
    id?: IntFieldUpdateOperationsInput | number
    alunoId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlunoDisciplinaTrancadoUncheckedUpdateManyWithoutDisciplinaInput = {
    id?: IntFieldUpdateOperationsInput | number
    alunoId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlunoDisciplinaCursadoUpdateWithoutDisciplinaInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    aluno?: AlunoUpdateOneRequiredWithoutDisciplinasCursadoNestedInput
  }

  export type AlunoDisciplinaCursadoUncheckedUpdateWithoutDisciplinaInput = {
    id?: IntFieldUpdateOperationsInput | number
    alunoId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlunoDisciplinaCursadoUncheckedUpdateManyWithoutDisciplinaInput = {
    id?: IntFieldUpdateOperationsInput | number
    alunoId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CursoDisciplinaUpdateWithoutDisciplinaInput = {
    curso?: CursoUpdateOneRequiredWithoutDisciplinasNestedInput
  }

  export type CursoDisciplinaUncheckedUpdateWithoutDisciplinaInput = {
    cursoId?: IntFieldUpdateOperationsInput | number
  }

  export type CursoDisciplinaUncheckedUpdateManyWithoutDisciplinaInput = {
    cursoId?: IntFieldUpdateOperationsInput | number
  }

  export type AlunoCreateManyCursoInput = {
    id?: number
    nome: string
    cpf: string
    email: string
    ativo?: boolean
  }

  export type CursoDisciplinaCreateManyCursoInput = {
    disciplinaId: number
  }

  export type AlunoUpdateWithoutCursoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    disciplinasMatriculado?: AlunoDisciplinaMatriculadoUpdateManyWithoutAlunoNestedInput
    disciplinasTrancado?: AlunoDisciplinaTrancadoUpdateManyWithoutAlunoNestedInput
    disciplinasCursado?: AlunoDisciplinaCursadoUpdateManyWithoutAlunoNestedInput
  }

  export type AlunoUncheckedUpdateWithoutCursoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    disciplinasMatriculado?: AlunoDisciplinaMatriculadoUncheckedUpdateManyWithoutAlunoNestedInput
    disciplinasTrancado?: AlunoDisciplinaTrancadoUncheckedUpdateManyWithoutAlunoNestedInput
    disciplinasCursado?: AlunoDisciplinaCursadoUncheckedUpdateManyWithoutAlunoNestedInput
  }

  export type AlunoUncheckedUpdateManyWithoutCursoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CursoDisciplinaUpdateWithoutCursoInput = {
    disciplina?: DisciplinaUpdateOneRequiredWithoutCursosNestedInput
  }

  export type CursoDisciplinaUncheckedUpdateWithoutCursoInput = {
    disciplinaId?: IntFieldUpdateOperationsInput | number
  }

  export type CursoDisciplinaUncheckedUpdateManyWithoutCursoInput = {
    disciplinaId?: IntFieldUpdateOperationsInput | number
  }

  export type AlunoDisciplinaMatriculadoCreateManyAlunoInput = {
    id?: number
    disciplinaId: number
    data?: Date | string
  }

  export type AlunoDisciplinaTrancadoCreateManyAlunoInput = {
    id?: number
    disciplinaId: number
    data?: Date | string
  }

  export type AlunoDisciplinaCursadoCreateManyAlunoInput = {
    id?: number
    disciplinaId: number
    data?: Date | string
  }

  export type AlunoDisciplinaMatriculadoUpdateWithoutAlunoInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    disciplina?: DisciplinaUpdateOneRequiredWithoutAlunosAtivosNestedInput
  }

  export type AlunoDisciplinaMatriculadoUncheckedUpdateWithoutAlunoInput = {
    id?: IntFieldUpdateOperationsInput | number
    disciplinaId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlunoDisciplinaMatriculadoUncheckedUpdateManyWithoutAlunoInput = {
    id?: IntFieldUpdateOperationsInput | number
    disciplinaId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlunoDisciplinaTrancadoUpdateWithoutAlunoInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    disciplina?: DisciplinaUpdateOneRequiredWithoutAlunosTrancadosNestedInput
  }

  export type AlunoDisciplinaTrancadoUncheckedUpdateWithoutAlunoInput = {
    id?: IntFieldUpdateOperationsInput | number
    disciplinaId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlunoDisciplinaTrancadoUncheckedUpdateManyWithoutAlunoInput = {
    id?: IntFieldUpdateOperationsInput | number
    disciplinaId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlunoDisciplinaCursadoUpdateWithoutAlunoInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    disciplina?: DisciplinaUpdateOneRequiredWithoutAlunosConcluidosNestedInput
  }

  export type AlunoDisciplinaCursadoUncheckedUpdateWithoutAlunoInput = {
    id?: IntFieldUpdateOperationsInput | number
    disciplinaId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlunoDisciplinaCursadoUncheckedUpdateManyWithoutAlunoInput = {
    id?: IntFieldUpdateOperationsInput | number
    disciplinaId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use DisciplinaCountOutputTypeDefaultArgs instead
     */
    export type DisciplinaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DisciplinaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CursoCountOutputTypeDefaultArgs instead
     */
    export type CursoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CursoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AlunoCountOutputTypeDefaultArgs instead
     */
    export type AlunoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AlunoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DisciplinaDefaultArgs instead
     */
    export type DisciplinaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DisciplinaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CursoDefaultArgs instead
     */
    export type CursoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CursoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AlunoDefaultArgs instead
     */
    export type AlunoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AlunoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AlunoDisciplinaMatriculadoDefaultArgs instead
     */
    export type AlunoDisciplinaMatriculadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AlunoDisciplinaMatriculadoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AlunoDisciplinaTrancadoDefaultArgs instead
     */
    export type AlunoDisciplinaTrancadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AlunoDisciplinaTrancadoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AlunoDisciplinaCursadoDefaultArgs instead
     */
    export type AlunoDisciplinaCursadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AlunoDisciplinaCursadoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CursoDisciplinaDefaultArgs instead
     */
    export type CursoDisciplinaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CursoDisciplinaDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}